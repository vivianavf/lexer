
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSANT AND ARRAY AS ASIGNACION ASIGNACION2 ASIGNACION_AUMENTADA ASIGNACION_DISMINUIDA AUTODECREMENTO AUTOINCREMENTO BREAK CASE CLASS COMA COMENTARIO COMILLASDOBLES COMILLASIMPLE CONTINUE DECLARE DEFAULT DESIGUALDAD DIVISION DOLLAR DOS_PUNTOS DOT DOUBLE ECHO ELSE ELSEIF ENTERO EQUALS FALSE FINAL_DE_LINEA FLOTANTE FOR FOREACH FUNCTION HASHTAG ID IDENTIFIER IF ISSET LBRACKET LIST LLLAVE LPAREN MAS MATCH MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOS MULTIPLICACION NEGACION NEW NULL NUMERO OBJECT OR PHP PREGUNTA PRINT PRIVATE PROTECTED PUBLIC RBRACKET RETURN RLLAVE RPAREN SAME STATIC STRING1 STRING2 SWITCH TRUE UNSET VAR VARIABLE VOID WHILEprogram : header_declaration declaration_list footer_declarationdeclaration_list : declaration_list  declarationdeclaration_list : declarationdeclaration : var_declaration\n                    | selection_stmt\n                    | iteration_stmt\n\t\t\t\t    | fun_declaration\n                    | show_in_screen\n                    | expression_stmtheader_declaration : MENORQUE PREGUNTA PHPfooter_declaration : PREGUNTA MAYORQUEshow_in_screen : ECHO var_val FINAL_DE_LINEAshow_in_screen : ECHO STRING1 FINAL_DE_LINEAshow_in_screen : ECHO STRING2 FINAL_DE_LINEAshow_in_screen : ECHO selection_stmtvar_declaration : var_declaration2 FINAL_DE_LINEAvar_declaration : VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEAvar_declaration2 : VARIABLE\n                        | VARIABLE COMA var_declaration2\n                        | VARIABLE ASIGNACION NUMERO COMA var_declaration2\n                        | VARIABLE ASIGNACION NUMERO\n                        | VARIABLE ASIGNACION VARIABLE COMA var_declaration2\n                        | VARIABLE ASIGNACION VARIABLE\n                        | COMA \n                        | VARIABLE ASIGNACION VARIABLE simple_expression\n                        | VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2\n                        | NUMERO COMA var_declaration2\n                        | NUMERO RBRACKET\n                        | VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2\n                        | STRING1 COMA var_declaration2\n                        | STRING1 RBRACKET\n        fun_declaration : FUNCTION IDENTIFIER LPAREN params RPAREN statementparams : param_listparam_list : param_list COMA paramparam_list : paramparam : VARIABLEparam : VARIABLE LBRACKET RBRACKETparam : empty_functioncompount_stmt : LLLAVE local_declarations statement_list RLLAVElocal_declarations : var_declarationlocal_declarations : empty_functionstatement_list : statement_list statementstatement_list : statementstatement_list : empty_functionstatement : expression_stmt\n\t\t\t\t| compount_stmt\n\t\t\t\t| selection_stmt\n\t\t\t\t| iteration_stmt\n                | show_in_screen\n\t\t\t\t| return_stmt\n\texpression_stmt : expression FINAL_DE_LINEAexpression_stmt : FINAL_DE_LINEAselection_stmt : IF LPAREN expression RPAREN statementselection_stmt : IF LPAREN expression RPAREN statement ELSE statementselection_stmt : IF LPAREN expression RPAREN statement ELSEIF statementselection_stmt : SWITCH LPAREN var_val RPAREN statementselection_stmt : CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEAselection_stmt : DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEAselection_stmt : VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEAiteration_stmt : WHILE LPAREN expression RPAREN statementiteration_stmt : FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statementiteration_stmt : FOREACH LPAREN var_val AS var_val RPAREN statementreturn_stmt : RETURN FINAL_DE_LINEAreturn_stmt : RETURN expression FINAL_DE_LINEAexpression : var_val ASIGNACION expressionexpression : simple_expressionvar_val : VARIABLEvar_val : VARIABLE LBRACKET expression RBRACKETsimple_expression : additive_expression relop additive_expressionsimple_expression : additive_expressionrelop : MENORQUE \n\t\t\t| MENORIGUAL\n\t\t\t| MAYORQUE\n\t\t\t| MAYORIGUAL\n\t\t\t| DESIGUALDAD\n\t\t\t| NEGACION\n\t\t\t| EQUALS\n\tadditive_expression : additive_expression addop term\n                                              \n        additive_expression : termadditive_expression : term AUTODECREMENTOadditive_expression : term AUTOINCREMENTOadditive_expression : addop term\n                                            \n    addop : MAS \n\t\t\t| MENOS\n\tterm : term mulop factorterm : factorterm : STRING1term : STRING2mulop : \tMULTIPLICACION\n\t\t\t\t| DIVISION\n\tfactor : LPAREN expression RPARENfactor : var_valfactor : callfactor : NUMEROcall : IDENTIFIER LPAREN args RPARENargs : args_list\n\t\t\t| empty_function\n\targs_list : args_list COMA expressionargs_list : expressionempty_function :'
    
_lr_action_items = {'MENORQUE':([0,14,15,20,25,30,31,35,36,39,60,61,62,79,82,83,84,85,91,103,116,121,132,134,159,],[3,49,-94,-92,49,-87,-88,-79,-86,-93,-67,-87,-94,49,-82,-92,-80,-81,-94,-91,49,-78,-85,-68,-95,]),'$end':([1,41,90,],[0,-1,-11,]),'VARIABLE':([2,4,5,6,7,8,9,10,11,13,17,29,34,37,38,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,63,64,65,67,68,69,70,71,72,74,78,80,86,87,88,89,98,104,107,109,110,111,112,113,114,115,117,123,128,129,130,135,136,138,141,142,145,146,147,149,151,152,153,160,161,165,166,167,168,170,171,172,173,175,176,179,180,183,186,187,188,189,190,192,193,194,198,199,201,202,203,204,],[14,14,-3,-4,-5,-6,-7,-8,-9,-52,60,79,60,-83,-84,-2,-16,60,93,94,98,-71,-72,-73,-74,-75,-76,-77,94,60,-51,60,60,116,60,94,60,60,60,60,-15,94,60,-89,-90,-10,60,60,116,-45,-46,-47,-48,-49,-50,148,60,157,-12,-13,-14,60,94,94,116,116,116,-40,-41,-63,116,60,60,60,-17,94,94,-53,-56,-58,116,-43,-44,-64,-60,116,157,60,116,116,-57,-39,-42,60,116,-32,-54,-55,-62,-59,116,-61,]),'IF':([2,4,5,6,7,8,9,10,11,13,29,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[16,16,-3,-4,-5,-6,-7,-8,-9,-52,16,-2,-16,-51,16,-15,-10,16,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,16,16,16,-40,-41,-63,16,-17,-53,-56,-58,16,-43,-44,-64,-60,16,16,16,-57,-39,-42,16,-32,-54,-55,-62,-59,16,-61,]),'SWITCH':([2,4,5,6,7,8,9,10,11,13,29,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[19,19,-3,-4,-5,-6,-7,-8,-9,-52,19,-2,-16,-51,19,-15,-10,19,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,19,19,19,-40,-41,-63,19,-17,-53,-56,-58,19,-43,-44,-64,-60,19,19,19,-57,-39,-42,19,-32,-54,-55,-62,-59,19,-61,]),'CASE':([2,4,5,6,7,8,9,10,11,13,29,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[21,21,-3,-4,-5,-6,-7,-8,-9,-52,21,-2,-16,-51,21,-15,-10,21,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,21,21,21,-40,-41,-63,21,-17,-53,-56,-58,21,-43,-44,-64,-60,21,21,21,-57,-39,-42,21,-32,-54,-55,-62,-59,21,-61,]),'DEFAULT':([2,4,5,6,7,8,9,10,11,13,29,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[22,22,-3,-4,-5,-6,-7,-8,-9,-52,22,-2,-16,-51,22,-15,-10,22,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,22,22,22,-40,-41,-63,22,-17,-53,-56,-58,22,-43,-44,-64,-60,22,22,22,-57,-39,-42,22,-32,-54,-55,-62,-59,22,-61,]),'WHILE':([2,4,5,6,7,8,9,10,11,13,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[23,23,-3,-4,-5,-6,-7,-8,-9,-52,-2,-16,-51,23,-15,-10,23,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,23,23,23,-40,-41,-63,23,-17,-53,-56,-58,23,-43,-44,-64,-60,23,23,23,-57,-39,-42,23,-32,-54,-55,-62,-59,23,-61,]),'FOR':([2,4,5,6,7,8,9,10,11,13,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[24,24,-3,-4,-5,-6,-7,-8,-9,-52,-2,-16,-51,24,-15,-10,24,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,24,24,24,-40,-41,-63,24,-17,-53,-56,-58,24,-43,-44,-64,-60,24,24,24,-57,-39,-42,24,-32,-54,-55,-62,-59,24,-61,]),'FOREACH':([2,4,5,6,7,8,9,10,11,13,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[26,26,-3,-4,-5,-6,-7,-8,-9,-52,-2,-16,-51,26,-15,-10,26,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,26,26,26,-40,-41,-63,26,-17,-53,-56,-58,26,-43,-44,-64,-60,26,26,26,-57,-39,-42,26,-32,-54,-55,-62,-59,26,-61,]),'FUNCTION':([2,4,5,6,7,8,9,10,11,13,42,44,63,78,89,109,110,111,112,113,114,128,129,130,149,161,167,168,170,175,176,188,189,194,198,199,201,202,204,],[27,27,-3,-4,-5,-6,-7,-8,-9,-52,-2,-16,-51,-15,-10,-45,-46,-47,-48,-49,-50,-12,-13,-14,-63,-17,-53,-56,-58,-64,-60,-57,-39,-32,-54,-55,-62,-59,-61,]),'ECHO':([2,4,5,6,7,8,9,10,11,13,42,44,63,67,78,89,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,194,198,199,201,202,203,204,],[29,29,-3,-4,-5,-6,-7,-8,-9,-52,-2,-16,-51,29,-15,-10,29,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,29,29,29,-40,-41,-63,29,-17,-53,-56,-58,29,-43,-44,-64,-60,29,29,29,-57,-39,-42,29,-32,-54,-55,-62,-59,29,-61,]),'FINAL_DE_LINEA':([2,4,5,6,7,8,9,10,11,12,13,14,15,18,20,25,30,31,32,33,35,36,39,42,44,57,60,61,62,63,67,75,76,77,78,79,81,82,83,84,85,89,94,95,98,99,101,103,106,107,109,110,111,112,113,114,115,116,117,119,120,121,128,129,130,131,132,133,134,137,141,142,144,145,146,147,148,149,150,151,159,161,163,164,167,168,169,170,171,172,173,175,176,177,179,184,185,186,187,188,189,190,193,194,197,198,199,201,202,203,204,],[13,13,-3,-4,-5,-6,-7,-8,-9,44,-52,-18,-94,63,-92,-70,-87,-88,-24,-66,-79,-86,-93,-2,-16,-28,-67,-87,-94,-51,13,128,129,130,-15,-67,-31,-82,-92,-80,-81,-10,-18,-19,-23,-21,-27,-91,-65,13,-45,-46,-47,-48,-49,-50,-100,-67,149,152,-69,-78,-12,-13,-14,-30,-85,161,-68,-25,13,13,170,13,-40,-41,-18,-63,175,13,-95,-17,-22,-20,-53,-56,188,-58,13,-43,-44,-64,-60,192,13,-26,-29,13,13,-57,-39,-42,13,-32,202,-54,-55,-62,-59,13,-61,]),'COMA':([2,4,5,6,7,8,9,10,11,13,14,15,20,25,30,31,33,35,36,39,42,44,47,56,60,61,62,63,69,78,80,82,83,84,85,89,94,96,97,98,99,103,106,109,110,111,112,113,114,115,120,121,123,125,127,128,129,130,132,134,136,138,139,140,148,149,155,156,157,158,159,161,165,166,167,168,170,175,176,180,182,188,189,194,195,196,198,199,201,202,204,],[32,32,-3,-4,-5,-6,-7,-8,-9,-52,47,56,-92,-70,80,-88,-66,-79,-86,-93,-2,-16,32,32,-67,-87,-94,-51,32,-15,32,-82,-92,-80,-81,-10,47,56,80,136,138,-91,-65,-45,-46,-47,-48,-49,-50,32,-69,-78,-100,160,-99,-12,-13,-14,-85,-68,32,32,165,166,47,-63,180,-35,-36,-38,-95,-17,32,32,-53,-56,-58,-64,-60,-100,-98,-57,-39,-32,-34,-37,-54,-55,-62,-59,-61,]),'NUMERO':([2,4,5,6,7,8,9,10,11,13,17,21,34,37,38,42,44,45,47,48,49,50,51,52,53,54,55,56,58,63,65,67,68,69,70,71,74,78,80,86,87,88,89,98,100,104,107,109,110,111,112,113,114,115,117,128,129,130,135,136,138,141,142,145,146,147,149,151,152,160,161,165,166,167,168,170,171,172,173,174,175,176,179,183,186,187,188,189,190,192,193,194,198,199,201,202,203,204,],[15,15,-3,-4,-5,-6,-7,-8,-9,-52,62,66,62,-83,-84,-2,-16,91,96,99,-71,-72,-73,-74,-75,-76,-77,96,62,-51,62,62,62,96,62,62,62,-15,96,62,-89,-90,-10,62,139,62,62,-45,-46,-47,-48,-49,-50,96,62,-12,-13,-14,62,96,96,62,62,62,-40,-41,-63,62,62,62,-17,96,96,-53,-56,-58,62,-43,-44,191,-64,-60,62,62,62,62,-57,-39,-42,62,62,-32,-54,-55,-62,-59,62,-61,]),'STRING1':([2,4,5,6,7,8,9,10,11,13,17,29,34,37,38,42,44,45,47,49,50,51,52,53,54,55,56,58,63,65,67,68,69,70,71,74,78,80,89,98,100,104,107,109,110,111,112,113,114,115,117,128,129,130,135,136,138,141,142,145,146,147,149,151,152,160,161,165,166,167,168,170,171,172,173,175,176,179,183,186,187,188,189,190,192,193,194,198,199,201,202,203,204,],[30,30,-3,-4,-5,-6,-7,-8,-9,-52,61,76,61,-83,-84,-2,-16,61,97,-71,-72,-73,-74,-75,-76,-77,97,61,-51,61,61,61,97,61,61,61,-15,97,-10,61,140,61,61,-45,-46,-47,-48,-49,-50,97,61,-12,-13,-14,61,97,97,61,61,61,-40,-41,-63,61,61,61,-17,97,97,-53,-56,-58,61,-43,-44,-64,-60,61,61,61,61,-57,-39,-42,61,61,-32,-54,-55,-62,-59,61,-61,]),'STRING2':([2,4,5,6,7,8,9,10,11,13,17,29,34,37,38,42,44,45,49,50,51,52,53,54,55,58,63,65,67,68,70,71,74,78,89,98,104,107,109,110,111,112,113,114,115,117,128,129,130,135,141,142,145,146,147,149,151,152,160,161,167,168,170,171,172,173,175,176,179,183,186,187,188,189,190,192,193,194,198,199,201,202,203,204,],[31,31,-3,-4,-5,-6,-7,-8,-9,-52,31,77,31,-83,-84,-2,-16,31,-71,-72,-73,-74,-75,-76,-77,31,-51,31,31,31,31,31,31,-15,-10,31,31,31,-45,-46,-47,-48,-49,-50,-100,31,-12,-13,-14,31,31,31,31,-40,-41,-63,31,31,31,-17,-53,-56,-58,31,-43,-44,-64,-60,31,31,31,31,-57,-39,-42,31,31,-32,-54,-55,-62,-59,31,-61,]),'MAS':([2,4,5,6,7,8,9,10,11,13,14,15,17,20,25,30,31,35,36,39,42,44,45,49,50,51,52,53,54,55,58,60,61,62,63,65,67,68,70,74,78,82,83,84,85,89,91,98,103,104,107,109,110,111,112,113,114,115,116,117,120,121,128,129,130,132,134,135,141,142,145,146,147,149,151,152,159,160,161,167,168,170,171,172,173,175,176,179,183,186,187,188,189,190,192,193,194,198,199,200,201,202,203,204,],[37,37,-3,-4,-5,-6,-7,-8,-9,-52,-67,-94,37,-92,37,-87,-88,-79,-86,-93,-2,-16,37,-71,-72,-73,-74,-75,-76,-77,37,-67,-87,-94,-51,37,37,37,37,37,-15,-82,-92,-80,-81,-10,-94,37,-91,37,37,-45,-46,-47,-48,-49,-50,-100,-67,37,37,-78,-12,-13,-14,-85,-68,37,37,37,37,-40,-41,-63,37,37,-95,37,-17,-53,-56,-58,37,-43,-44,-64,-60,37,37,37,37,-57,-39,-42,37,37,-32,-54,-55,37,-62,-59,37,-61,]),'MENOS':([2,4,5,6,7,8,9,10,11,13,14,15,17,20,25,30,31,35,36,39,42,44,45,49,50,51,52,53,54,55,58,60,61,62,63,65,67,68,70,74,78,82,83,84,85,89,91,98,103,104,107,109,110,111,112,113,114,115,116,117,120,121,128,129,130,132,134,135,141,142,145,146,147,149,151,152,159,160,161,167,168,170,171,172,173,175,176,179,183,186,187,188,189,190,192,193,194,198,199,200,201,202,203,204,],[38,38,-3,-4,-5,-6,-7,-8,-9,-52,-67,-94,38,-92,38,-87,-88,-79,-86,-93,-2,-16,38,-71,-72,-73,-74,-75,-76,-77,38,-67,-87,-94,-51,38,38,38,38,38,-15,-82,-92,-80,-81,-10,-94,38,-91,38,38,-45,-46,-47,-48,-49,-50,-100,-67,38,38,-78,-12,-13,-14,-85,-68,38,38,38,38,-40,-41,-63,38,38,-95,38,-17,-53,-56,-58,38,-43,-44,-64,-60,38,38,38,38,-57,-39,-42,38,38,-32,-54,-55,38,-62,-59,38,-61,]),'LPAREN':([2,4,5,6,7,8,9,10,11,13,16,17,19,23,24,26,28,34,37,38,42,44,45,49,50,51,52,53,54,55,58,63,65,67,68,70,71,73,74,78,86,87,88,89,98,104,107,109,110,111,112,113,114,115,117,128,129,130,135,141,142,145,146,147,149,151,152,160,161,167,168,170,171,172,173,175,176,179,183,186,187,188,189,190,192,193,194,198,199,201,202,203,204,],[17,17,-3,-4,-5,-6,-7,-8,-9,-52,58,17,64,68,69,72,74,17,-83,-84,-2,-16,17,-71,-72,-73,-74,-75,-76,-77,17,-51,17,17,17,17,17,123,17,-15,17,-89,-90,-10,17,17,17,-45,-46,-47,-48,-49,-50,-100,17,-12,-13,-14,17,17,17,17,-40,-41,-63,17,17,17,-17,-53,-56,-58,17,-43,-44,-64,-60,17,17,17,17,-57,-39,-42,17,17,-32,-54,-55,-62,-59,17,-61,]),'IDENTIFIER':([2,4,5,6,7,8,9,10,11,13,17,27,34,37,38,42,44,45,49,50,51,52,53,54,55,58,63,65,67,68,70,71,74,78,86,87,88,89,98,104,107,109,110,111,112,113,114,115,117,128,129,130,135,141,142,145,146,147,149,151,152,160,161,167,168,170,171,172,173,175,176,179,183,186,187,188,189,190,192,193,194,198,199,201,202,203,204,],[28,28,-3,-4,-5,-6,-7,-8,-9,-52,28,73,28,-83,-84,-2,-16,28,-71,-72,-73,-74,-75,-76,-77,28,-51,28,28,28,28,28,28,-15,28,-89,-90,-10,28,28,28,-45,-46,-47,-48,-49,-50,-100,28,-12,-13,-14,28,28,28,28,-40,-41,-63,28,28,28,-17,-53,-56,-58,28,-43,-44,-64,-60,28,28,28,28,-57,-39,-42,28,28,-32,-54,-55,-62,-59,28,-61,]),'PREGUNTA':([3,4,5,6,7,8,9,10,11,13,42,44,63,78,93,109,110,111,112,113,114,128,129,130,149,161,167,168,170,175,176,188,189,194,198,199,201,202,204,],[40,43,-3,-4,-5,-6,-7,-8,-9,-52,-2,-16,-51,-15,135,-45,-46,-47,-48,-49,-50,-12,-13,-14,-63,-17,-53,-56,-58,-64,-60,-57,-39,-32,-54,-55,-62,-59,-61,]),'BREAK':([13,63,78,108,109,110,111,112,113,114,128,129,130,143,149,167,168,170,175,176,188,189,198,199,201,202,204,],[-52,-51,-15,144,-45,-46,-47,-48,-49,-50,-12,-13,-14,169,-63,-53,-56,-58,-64,-60,-57,-39,-54,-55,-62,-59,-61,]),'ELSE':([13,63,78,109,110,111,112,113,114,128,129,130,149,167,168,170,175,176,188,189,198,199,201,202,204,],[-52,-51,-15,-45,-46,-47,-48,-49,-50,-12,-13,-14,-63,186,-56,-58,-64,-60,-57,-39,-54,-55,-62,-59,-61,]),'ELSEIF':([13,63,78,109,110,111,112,113,114,128,129,130,149,167,168,170,175,176,188,189,198,199,201,202,204,],[-52,-51,-15,-45,-46,-47,-48,-49,-50,-12,-13,-14,-63,187,-56,-58,-64,-60,-57,-39,-54,-55,-62,-59,-61,]),'RLLAVE':([13,44,63,78,109,110,111,112,113,114,115,128,129,130,145,146,147,149,161,167,168,170,171,172,173,175,176,188,189,190,198,199,201,202,204,],[-52,-16,-51,-15,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,-100,-40,-41,-63,-17,-53,-56,-58,189,-43,-44,-64,-60,-57,-39,-42,-54,-55,-62,-59,-61,]),'LLLAVE':([13,44,63,67,78,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,198,199,201,202,203,204,],[-52,-16,-51,115,-15,115,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,115,115,115,-40,-41,-63,115,-17,-53,-56,-58,115,-43,-44,-64,-60,115,115,115,-57,-39,-42,115,-54,-55,-62,-59,115,-61,]),'RETURN':([13,44,63,67,78,107,109,110,111,112,113,114,115,128,129,130,141,142,145,146,147,149,151,161,167,168,170,171,172,173,175,176,179,186,187,188,189,190,193,198,199,201,202,203,204,],[-52,-16,-51,117,-15,117,-45,-46,-47,-48,-49,-50,-100,-12,-13,-14,117,117,117,-40,-41,-63,117,-17,-53,-56,-58,117,-43,-44,-64,-60,117,117,117,-57,-39,-42,117,-54,-55,-62,-59,117,-61,]),'LBRACKET':([14,48,60,79,116,148,157,],[45,100,104,104,104,174,181,]),'ASIGNACION':([14,20,60,94,116,134,148,],[48,65,-67,48,-67,-68,48,]),'AUTODECREMENTO':([14,15,20,30,31,35,36,39,60,61,62,83,91,103,116,132,134,159,],[-67,-94,-92,-87,-88,84,-86,-93,-67,-87,-94,-92,-94,-91,-67,-85,-68,-95,]),'AUTOINCREMENTO':([14,15,20,30,31,35,36,39,60,61,62,83,91,103,116,132,134,159,],[-67,-94,-92,-87,-88,85,-86,-93,-67,-87,-94,-92,-94,-91,-67,-85,-68,-95,]),'MULTIPLICACION':([14,15,20,30,31,35,36,39,60,61,62,82,83,91,103,116,121,132,134,159,],[-67,-94,-92,-87,-88,87,-86,-93,-67,-87,-94,87,-92,-94,-91,-67,87,-85,-68,-95,]),'DIVISION':([14,15,20,30,31,35,36,39,60,61,62,82,83,91,103,116,121,132,134,159,],[-67,-94,-92,-87,-88,88,-86,-93,-67,-87,-94,88,-92,-94,-91,-67,88,-85,-68,-95,]),'MENORIGUAL':([14,15,20,25,30,31,35,36,39,60,61,62,79,82,83,84,85,91,103,116,121,132,134,159,],[50,-94,-92,50,-87,-88,-79,-86,-93,-67,-87,-94,50,-82,-92,-80,-81,-94,-91,50,-78,-85,-68,-95,]),'MAYORQUE':([14,15,20,25,30,31,35,36,39,43,60,61,62,79,82,83,84,85,91,103,116,121,132,134,159,],[51,-94,-92,51,-87,-88,-79,-86,-93,90,-67,-87,-94,51,-82,-92,-80,-81,-94,-91,51,-78,-85,-68,-95,]),'MAYORIGUAL':([14,15,20,25,30,31,35,36,39,60,61,62,79,82,83,84,85,91,103,116,121,132,134,159,],[52,-94,-92,52,-87,-88,-79,-86,-93,-67,-87,-94,52,-82,-92,-80,-81,-94,-91,52,-78,-85,-68,-95,]),'DESIGUALDAD':([14,15,20,25,30,31,35,36,39,60,61,62,79,82,83,84,85,91,103,116,121,132,134,159,],[53,-94,-92,53,-87,-88,-79,-86,-93,-67,-87,-94,53,-82,-92,-80,-81,-94,-91,53,-78,-85,-68,-95,]),'NEGACION':([14,15,20,25,30,31,35,36,39,60,61,62,79,82,83,84,85,91,103,116,121,132,134,159,],[54,-94,-92,54,-87,-88,-79,-86,-93,-67,-87,-94,54,-82,-92,-80,-81,-94,-91,54,-78,-85,-68,-95,]),'EQUALS':([14,15,20,25,30,31,35,36,39,60,61,62,79,82,83,84,85,91,103,116,121,132,134,159,],[55,-94,-92,55,-87,-88,-79,-86,-93,-67,-87,-94,55,-82,-92,-80,-81,-94,-91,55,-78,-85,-68,-95,]),'RBRACKET':([15,20,25,30,31,33,35,36,39,60,61,62,82,83,84,85,91,92,96,97,103,106,120,121,132,134,159,181,191,],[57,-92,-70,81,-88,-66,-79,-86,-93,-67,-87,-94,-82,-92,-80,-81,133,134,57,81,-91,-65,-69,-78,-85,-68,-95,196,133,]),'RPAREN':([20,25,31,33,35,36,39,59,60,61,62,74,82,83,84,85,102,103,105,106,118,120,121,123,124,125,126,127,132,134,154,155,156,157,158,159,178,180,182,195,196,200,],[-92,-70,-88,-66,-79,-86,-93,103,-67,-87,-94,-100,-82,-92,-80,-81,141,-91,142,-65,151,-69,-78,-100,159,-96,-97,-99,-85,-68,179,-33,-35,-36,-38,-95,193,-100,-98,-34,-37,203,]),'DOS_PUNTOS':([20,22,25,31,33,35,36,39,60,61,62,66,82,83,84,85,103,106,120,121,132,134,159,162,],[-92,67,-70,-88,-66,-79,-86,-93,-67,-87,-94,107,-82,-92,-80,-81,-91,-65,-69,-78,-85,-68,-95,183,]),'PHP':([40,],[89,]),'AS':([60,122,134,],[-67,153,-68,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'header_declaration':([0,],[2,]),'declaration_list':([2,],[4,]),'declaration':([2,4,],[5,42,]),'var_declaration':([2,4,115,],[6,6,146,]),'selection_stmt':([2,4,29,67,107,141,142,145,151,171,179,186,187,193,203,],[7,7,78,111,111,111,111,111,111,111,111,111,111,111,111,]),'iteration_stmt':([2,4,67,107,141,142,145,151,171,179,186,187,193,203,],[8,8,112,112,112,112,112,112,112,112,112,112,112,112,]),'fun_declaration':([2,4,],[9,9,]),'show_in_screen':([2,4,67,107,141,142,145,151,171,179,186,187,193,203,],[10,10,113,113,113,113,113,113,113,113,113,113,113,113,]),'expression_stmt':([2,4,67,107,141,142,145,151,171,179,186,187,193,203,],[11,11,109,109,109,109,109,109,109,109,109,109,109,109,]),'var_declaration2':([2,4,47,56,69,80,115,136,138,165,166,],[12,12,95,101,119,131,12,163,164,184,185,]),'expression':([2,4,17,45,58,65,67,68,74,104,107,117,135,141,142,145,151,152,160,171,179,183,186,187,193,203,],[18,18,59,92,102,106,18,118,127,92,18,150,162,18,18,18,18,177,182,18,18,197,18,18,18,18,]),'var_val':([2,4,17,29,34,45,58,64,65,67,68,70,71,72,74,86,98,104,107,117,135,141,142,145,151,152,153,160,171,179,183,186,187,192,193,203,],[20,20,20,75,83,20,20,105,20,20,20,83,83,122,20,83,83,20,20,20,20,20,20,20,20,20,178,20,20,20,20,20,20,83,20,20,]),'additive_expression':([2,4,17,45,58,65,67,68,70,74,98,104,107,117,135,141,142,145,151,152,160,171,179,183,186,187,192,193,203,],[25,25,25,25,25,25,25,25,120,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,200,25,25,]),'simple_expression':([2,4,17,45,58,65,67,68,74,98,104,107,117,135,141,142,145,151,152,160,171,179,183,186,187,193,203,],[33,33,33,33,33,33,33,33,33,137,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'addop':([2,4,17,25,45,58,65,67,68,70,74,98,104,107,117,120,135,141,142,145,151,152,160,171,179,183,186,187,192,193,200,203,],[34,34,34,71,34,34,34,34,34,34,34,34,34,34,34,71,34,34,34,34,34,34,34,34,34,34,34,34,34,34,71,34,]),'term':([2,4,17,34,45,58,65,67,68,70,71,74,98,104,107,117,135,141,142,145,151,152,160,171,179,183,186,187,192,193,203,],[35,35,35,82,35,35,35,35,35,35,121,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'factor':([2,4,17,34,45,58,65,67,68,70,71,74,86,98,104,107,117,135,141,142,145,151,152,160,171,179,183,186,187,192,193,203,],[36,36,36,36,36,36,36,36,36,36,36,36,132,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'call':([2,4,17,34,45,58,65,67,68,70,71,74,86,98,104,107,117,135,141,142,145,151,152,160,171,179,183,186,187,192,193,203,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'footer_declaration':([4,],[41,]),'relop':([14,25,79,116,],[46,70,46,46,]),'mulop':([35,82,121,],[86,86,86,]),'statement':([67,107,141,142,145,151,171,179,186,187,193,203,],[108,143,167,168,172,176,190,194,198,199,201,204,]),'compount_stmt':([67,107,141,142,145,151,171,179,186,187,193,203,],[110,110,110,110,110,110,110,110,110,110,110,110,]),'return_stmt':([67,107,141,142,145,151,171,179,186,187,193,203,],[114,114,114,114,114,114,114,114,114,114,114,114,]),'args':([74,],[124,]),'args_list':([74,],[125,]),'empty_function':([74,115,123,145,180,],[126,147,158,173,158,]),'local_declarations':([115,],[145,]),'params':([123,],[154,]),'param_list':([123,],[155,]),'param':([123,180,],[156,195,]),'statement_list':([145,],[171,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> header_declaration declaration_list footer_declaration','program',3,'p_program','parser.py',9),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','parser.py',13),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','parser.py',17),
  ('declaration -> var_declaration','declaration',1,'p_declaration','parser.py',21),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','parser.py',22),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','parser.py',23),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','parser.py',24),
  ('declaration -> show_in_screen','declaration',1,'p_declaration','parser.py',25),
  ('declaration -> expression_stmt','declaration',1,'p_declaration','parser.py',26),
  ('header_declaration -> MENORQUE PREGUNTA PHP','header_declaration',3,'p_header_declaration','parser.py',31),
  ('footer_declaration -> PREGUNTA MAYORQUE','footer_declaration',2,'p_footer_declaration','parser.py',35),
  ('show_in_screen -> ECHO var_val FINAL_DE_LINEA','show_in_screen',3,'p_show_in_screen_1','parser.py',39),
  ('show_in_screen -> ECHO STRING1 FINAL_DE_LINEA','show_in_screen',3,'p_show_in_screen_2','parser.py',43),
  ('show_in_screen -> ECHO STRING2 FINAL_DE_LINEA','show_in_screen',3,'p_show_in_screen_3','parser.py',47),
  ('show_in_screen -> ECHO selection_stmt','show_in_screen',2,'p_show_in_screen_4','parser.py',50),
  ('var_declaration -> var_declaration2 FINAL_DE_LINEA','var_declaration',2,'p_var_declaration_1','parser.py',54),
  ('var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA','var_declaration',5,'p_var_declaration_2','parser.py',58),
  ('var_declaration2 -> VARIABLE','var_declaration2',1,'p_var_declaration_3','parser.py',62),
  ('var_declaration2 -> VARIABLE COMA var_declaration2','var_declaration2',3,'p_var_declaration_3','parser.py',63),
  ('var_declaration2 -> VARIABLE ASIGNACION NUMERO COMA var_declaration2','var_declaration2',5,'p_var_declaration_3','parser.py',64),
  ('var_declaration2 -> VARIABLE ASIGNACION NUMERO','var_declaration2',3,'p_var_declaration_3','parser.py',65),
  ('var_declaration2 -> VARIABLE ASIGNACION VARIABLE COMA var_declaration2','var_declaration2',5,'p_var_declaration_3','parser.py',66),
  ('var_declaration2 -> VARIABLE ASIGNACION VARIABLE','var_declaration2',3,'p_var_declaration_3','parser.py',67),
  ('var_declaration2 -> COMA','var_declaration2',1,'p_var_declaration_3','parser.py',68),
  ('var_declaration2 -> VARIABLE ASIGNACION VARIABLE simple_expression','var_declaration2',4,'p_var_declaration_3','parser.py',69),
  ('var_declaration2 -> VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2','var_declaration2',6,'p_var_declaration_3','parser.py',70),
  ('var_declaration2 -> NUMERO COMA var_declaration2','var_declaration2',3,'p_var_declaration_3','parser.py',71),
  ('var_declaration2 -> NUMERO RBRACKET','var_declaration2',2,'p_var_declaration_3','parser.py',72),
  ('var_declaration2 -> VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2','var_declaration2',6,'p_var_declaration_3','parser.py',73),
  ('var_declaration2 -> STRING1 COMA var_declaration2','var_declaration2',3,'p_var_declaration_3','parser.py',74),
  ('var_declaration2 -> STRING1 RBRACKET','var_declaration2',2,'p_var_declaration_3','parser.py',75),
  ('fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement','fun_declaration',6,'p_fun_declaration','parser.py',80),
  ('params -> param_list','params',1,'p_params_1','parser.py',84),
  ('param_list -> param_list COMA param','param_list',3,'p_param_list_1','parser.py',88),
  ('param_list -> param','param_list',1,'p_param_list_2','parser.py',92),
  ('param -> VARIABLE','param',1,'p_param_1','parser.py',96),
  ('param -> VARIABLE LBRACKET RBRACKET','param',3,'p_param_2','parser.py',100),
  ('param -> empty_function','param',1,'p_param_3','parser.py',104),
  ('compount_stmt -> LLLAVE local_declarations statement_list RLLAVE','compount_stmt',4,'p_compount_stmt','parser.py',108),
  ('local_declarations -> var_declaration','local_declarations',1,'p_local_declarations_1','parser.py',116),
  ('local_declarations -> empty_function','local_declarations',1,'p_local_declarations_2','parser.py',120),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','parser.py',124),
  ('statement_list -> statement','statement_list',1,'p_statement_list_2','parser.py',128),
  ('statement_list -> empty_function','statement_list',1,'p_statement_list_3','parser.py',131),
  ('statement -> expression_stmt','statement',1,'p_statement','parser.py',135),
  ('statement -> compount_stmt','statement',1,'p_statement','parser.py',136),
  ('statement -> selection_stmt','statement',1,'p_statement','parser.py',137),
  ('statement -> iteration_stmt','statement',1,'p_statement','parser.py',138),
  ('statement -> show_in_screen','statement',1,'p_statement','parser.py',139),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',140),
  ('expression_stmt -> expression FINAL_DE_LINEA','expression_stmt',2,'p_expression_stmt_1','parser.py',145),
  ('expression_stmt -> FINAL_DE_LINEA','expression_stmt',1,'p_expression_stmt_2','parser.py',149),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt_1','parser.py',153),
  ('selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement','selection_stmt',7,'p_selection_stmt_2','parser.py',157),
  ('selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement','selection_stmt',7,'p_selection_stmt_3','parser.py',161),
  ('selection_stmt -> SWITCH LPAREN var_val RPAREN statement','selection_stmt',5,'p_selection_stmt_4','parser.py',165),
  ('selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA','selection_stmt',6,'p_selection_stmt_5','parser.py',169),
  ('selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA','selection_stmt',5,'p_selection_stmt_6','parser.py',173),
  ('selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA','selection_stmt',8,'p_selection_stmt_7','parser.py',177),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt_1','parser.py',181),
  ('iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement','iteration_stmt',9,'p_iteration_stmt_2','parser.py',185),
  ('iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement','iteration_stmt',7,'p_iteration_stmt_3','parser.py',189),
  ('return_stmt -> RETURN FINAL_DE_LINEA','return_stmt',2,'p_return_stmt_1','parser.py',193),
  ('return_stmt -> RETURN expression FINAL_DE_LINEA','return_stmt',3,'p_return_stmt_2','parser.py',197),
  ('expression -> var_val ASIGNACION expression','expression',3,'p_expression_1','parser.py',201),
  ('expression -> simple_expression','expression',1,'p_expression_2','parser.py',205),
  ('var_val -> VARIABLE','var_val',1,'p_var_1','parser.py',209),
  ('var_val -> VARIABLE LBRACKET expression RBRACKET','var_val',4,'p_var_2','parser.py',213),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','parser.py',217),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','parser.py',221),
  ('relop -> MENORQUE','relop',1,'p_relop','parser.py',226),
  ('relop -> MENORIGUAL','relop',1,'p_relop','parser.py',227),
  ('relop -> MAYORQUE','relop',1,'p_relop','parser.py',228),
  ('relop -> MAYORIGUAL','relop',1,'p_relop','parser.py',229),
  ('relop -> DESIGUALDAD','relop',1,'p_relop','parser.py',230),
  ('relop -> NEGACION','relop',1,'p_relop','parser.py',231),
  ('relop -> EQUALS','relop',1,'p_relop','parser.py',232),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','parser.py',237),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','parser.py',243),
  ('additive_expression -> term AUTODECREMENTO','additive_expression',2,'p_additive_expression_3','parser.py',248),
  ('additive_expression -> term AUTOINCREMENTO','additive_expression',2,'p_additive_expression_4','parser.py',252),
  ('additive_expression -> addop term','additive_expression',2,'p_additive_expression_5','parser.py',256),
  ('addop -> MAS','addop',1,'p_addop','parser.py',262),
  ('addop -> MENOS','addop',1,'p_addop','parser.py',263),
  ('term -> term mulop factor','term',3,'p_term_1','parser.py',268),
  ('term -> factor','term',1,'p_term_2','parser.py',272),
  ('term -> STRING1','term',1,'p_term_3','parser.py',276),
  ('term -> STRING2','term',1,'p_term_4','parser.py',280),
  ('mulop -> MULTIPLICACION','mulop',1,'p_mulop','parser.py',285),
  ('mulop -> DIVISION','mulop',1,'p_mulop','parser.py',286),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','parser.py',291),
  ('factor -> var_val','factor',1,'p_factor_2','parser.py',295),
  ('factor -> call','factor',1,'p_factor_3','parser.py',299),
  ('factor -> NUMERO','factor',1,'p_factor_4','parser.py',303),
  ('call -> IDENTIFIER LPAREN args RPAREN','call',4,'p_call_1','parser.py',307),
  ('args -> args_list','args',1,'p_args','parser.py',312),
  ('args -> empty_function','args',1,'p_args','parser.py',313),
  ('args_list -> args_list COMA expression','args_list',3,'p_args_list_1','parser.py',318),
  ('args_list -> expression','args_list',1,'p_args_list_2','parser.py',322),
  ('empty_function -> <empty>','empty_function',0,'p_empty_function','parser.py',326),
]
