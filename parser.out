Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    COMILLASDOBLES
    COMILLASIMPLE
    DOLLAR
    DOS_PUNTOS
    DOUBLE
    ENTERO
    FLOTANTE
    HASHTAG
    ID
    LBRACKET
    NULL
    OBJECT
    RBRACKET
    VAR

Grammar

Rule 0     S' -> php_code
Rule 1     php_code -> php_heading statements php_end
Rule 2     php_heading -> MENORQUE PREGUNTA PHP
Rule 3     php_end -> PREGUNTA MAYORQUE
Rule 4     statements -> statement
Rule 5     statements -> statements statement
Rule 6     statement -> var_declaration
Rule 7     statement -> var_modification
Rule 8     statement -> if_statement
Rule 9     statement -> for_loop
Rule 10    statement -> while_lopp
Rule 11    statement -> class
Rule 12    statement -> comentario
Rule 13    statement -> function
Rule 14    statement -> function_call
Rule 15    statement -> echo
Rule 16    var_declaration -> var_dcl FINAL_DE_LINEA
Rule 17    var_modification -> var_modi FINAL_DE_LINEA
Rule 18    function -> func
Rule 19    function_call -> func_call FINAL_DE_LINEA
Rule 20    expresion -> math_expr
Rule 21    expresion -> string
Rule 22    expresion -> boolean
Rule 23    expresion -> array
Rule 24    expresion -> var_accs
Rule 25    string_concats -> string_concat
Rule 26    string_concats -> string_concats string_concat
Rule 27    string_concat -> DOT string
Rule 28    string_concat -> DOT VARIABLE
Rule 29    string_concat -> DOT func_call
Rule 30    string -> STRING1
Rule 31    string -> STRING2
Rule 32    string -> string string_concats
Rule 33    string -> VARIABLE string_concats
Rule 34    var_dcl -> VARIABLE ASIGNACION string
Rule 35    var_modi -> VARIABLE CONCAT_ASIG string
Rule 36    var_modi -> VARIABLE CONCAT_ASIG VARIABLE
Rule 37    signo_mas_menos -> MAS MENOS
Rule 38    signo_mas_menos -> MAS MENOS signo_mas_menos
Rule 39    signo_menos_mas -> MENOS MAS
Rule 40    signo_menos_mas -> MENOS MAS signo_menos_mas
Rule 41    signo -> MAS
Rule 42    signo -> MENOS
Rule 43    signo -> signo_mas_menos
Rule 44    signo -> signo_menos_mas
Rule 45    math_oper -> MAS
Rule 46    math_oper -> MENOS
Rule 47    math_oper -> MULTIPLICACION
Rule 48    math_oper -> DIVISION
Rule 49    math_expr -> NUMERO
Rule 50    math_expr -> signo NUMERO
Rule 51    math_expr -> VARIABLE
Rule 52    math_expr -> signo VARIABLE
Rule 53    math_expr -> math_expr operaciones_mat
Rule 54    operacion_mat -> math_oper NUMERO
Rule 55    operacion_mat -> math_oper VARIABLE
Rule 56    operacion_mat -> signo NUMERO
Rule 57    operacion_mat -> signo VARIABLE
Rule 58    operaciones_mat -> operacion_mat
Rule 59    operaciones_mat -> operacion_mat operaciones_mat
Rule 60    var_dcl -> VARIABLE ASIGNACION math_expr
Rule 61    var_modi -> VARIABLE AUTOINCREMENTO
Rule 62    var_modi -> VARIABLE AUTODECREMENTO
Rule 63    var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr
Rule 64    var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr
Rule 65    if_statement -> main_if_statement scope
Rule 66    if_statement -> main_if_statement scope else scope
Rule 67    if_statement -> main_if_statement scope many_elseif
Rule 68    if_statement -> main_if_statement scope many_elseif else scope
Rule 69    many_elseif -> elseif_statement scope
Rule 70    many_elseif -> elseif_statement scope many_elseif
Rule 71    comp_bin_oprs -> MAYORQUE
Rule 72    comp_bin_oprs -> MENORQUE
Rule 73    comp_bin_oprs -> MAYORIGUAL
Rule 74    comp_bin_oprs -> MENORIGUAL
Rule 75    comp_bin_oprs -> SAME
Rule 76    comp_bin_oprs -> EQUALS
Rule 77    comp_bin_oprs -> DESIGUALDAD
Rule 78    comp_bin_oprs -> AND
Rule 79    comp_bin_oprs -> OR
Rule 80    bool_unary_oprs -> negacion
Rule 81    negacion -> NEGACION
Rule 82    negacion -> NEGACION negacion
Rule 83    boolean -> TRUE
Rule 84    boolean -> FALSE
Rule 85    boolean -> expresion comp_bin_oprs expresion
Rule 86    boolean -> bool_unary_oprs boolean
Rule 87    main_if_statement -> IF LPAREN boolean RPAREN
Rule 88    elseif_statement -> ELSEIF LPAREN boolean RPAREN
Rule 89    else -> ELSE
Rule 90    scope -> LLLAVE statements RLLAVE
Rule 91    scope -> LLLAVE RLLAVE
Rule 92    scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
Rule 93    scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE
Rule 94    scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
Rule 95    scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
Rule 96    scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE
Rule 97    scope -> LLLAVE return FINAL_DE_LINEA RLLAVE
Rule 98    return -> RETURN
Rule 99    return -> RETURN expresion
Rule 100   while_lopp -> WHILE LPAREN boolean RPAREN scope
Rule 101   for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
Rule 102   assigncacionArrow -> expresion ASIGNACION2 expresion
Rule 103   array_item -> assigncacionArrow
Rule 104   array_item -> expresion
Rule 105   array_items -> array_item
Rule 106   array_items -> array_item COMA array_items
Rule 107   array -> ARRAY LPAREN array_items RPAREN
Rule 108   var_dcl -> VARIABLE ASIGNACION array
Rule 109   arguments -> VARIABLE
Rule 110   arguments -> VARIABLE COMA arguments
Rule 111   args -> LPAREN RPAREN
Rule 112   args -> LPAREN arguments RPAREN
Rule 113   value -> expresion
Rule 114   values -> value
Rule 115   values -> value COMA values
Rule 116   func -> FUNCTION IDENTIFIER args scope
Rule 117   func_call -> IDENTIFIER LPAREN RPAREN
Rule 118   func_call -> IDENTIFIER LPAREN values RPAREN
Rule 119   var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion
Rule 120   var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion
Rule 121   var_accs -> VARIABLE ARROW IDENTIFIER
Rule 122   var_dcl -> VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER
Rule 123   func_call -> VARIABLE ARROW func_call
Rule 124   modf_acso -> PUBLIC
Rule 125   modf_acso -> PRIVATE
Rule 126   modf_acso -> PROTECTED
Rule 127   class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
Rule 128   mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA
Rule 129   mem_var_dcl -> COMENTARIO
Rule 130   mem_vars -> mem_var_dcl
Rule 131   mem_vars -> mem_var_dcl mem_vars
Rule 132   mem_func -> modf_acso FUNCTION IDENTIFIER args scope
Rule 133   mem_func -> FUNCTION IDENTIFIER args scope
Rule 134   mem_funcs -> mem_func
Rule 135   mem_funcs -> mem_func mem_funcs
Rule 136   var_dcl -> VARIABLE ASIGNACION NEW func_call
Rule 137   echo -> ECHO expresion FINAL_DE_LINEA
Rule 138   comentario -> COMENTARIO

Terminals, with rules where they appear

AMPERSANT            : 
AND                  : 78
ARRAY                : 107
ARROW                : 119 120 121 122 123
ASIGNACION           : 34 60 108 119 120 122 136
ASIGNACION2          : 102
ASIGNACION_AUMENTADA : 63
ASIGNACION_DISMINUIDA : 64
AUTODECREMENTO       : 62
AUTOINCREMENTO       : 61
BREAK                : 92 93
CLASS                : 127
COMA                 : 106 110 115
COMENTARIO           : 129 138
COMILLASDOBLES       : 
COMILLASIMPLE        : 
CONCAT_ASIG          : 35 36
CONTINUE             : 94 95
DESIGUALDAD          : 77
DIVISION             : 48
DOLLAR               : 
DOS_PUNTOS           : 
DOT                  : 27 28 29
DOUBLE               : 
ECHO                 : 137
ELSE                 : 89
ELSEIF               : 88
ENTERO               : 
EQUALS               : 76
FALSE                : 84
FINAL_DE_LINEA       : 16 17 19 92 93 94 95 96 97 101 101 128 137
FLOTANTE             : 
FOR                  : 101
FUNCTION             : 116 132 133
HASHTAG              : 
ID                   : 
IDENTIFIER           : 116 117 118 119 120 121 122 127 132 133
IF                   : 87
LBRACKET             : 
LLLAVE               : 90 91 92 93 94 95 96 97 127
LPAREN               : 87 88 100 101 107 111 112 117 118
MAS                  : 37 38 39 40 41 45
MAYORIGUAL           : 73
MAYORQUE             : 3 71
MENORIGUAL           : 74
MENORQUE             : 2 72
MENOS                : 37 38 39 40 42 46
MULTIPLICACION       : 47
NEGACION             : 81 82
NEW                  : 136
NULL                 : 
NUMERO               : 49 50 54 56
OBJECT               : 
OR                   : 79
PHP                  : 2
PREGUNTA             : 2 3
PRIVATE              : 125
PROTECTED            : 126
PUBLIC               : 124
RBRACKET             : 
RETURN               : 98 99
RLLAVE               : 90 91 92 93 94 95 96 97 127
RPAREN               : 87 88 100 101 107 111 112 117 118
SAME                 : 75
STRING1              : 30
STRING2              : 31
THIS                 : 119
TRUE                 : 83
VAR                  : 
VARIABLE             : 28 33 34 35 36 36 51 52 55 57 60 61 62 63 64 108 109 110 120 121 122 122 123 128 136
WHILE                : 100
error                : 

Nonterminals, with rules where they appear

args                 : 116 132 133
arguments            : 110 112
array                : 23 108
array_item           : 105 106
array_items          : 106 107
assigncacionArrow    : 103
bool_unary_oprs      : 86
boolean              : 22 86 87 88 100 101
class                : 11
comentario           : 12
comp_bin_oprs        : 85
echo                 : 15
else                 : 66 68
elseif_statement     : 69 70
expresion            : 85 85 99 102 102 104 113 119 120 137
for_loop             : 9
func                 : 18
func_call            : 19 29 123 136
function             : 13
function_call        : 14
if_statement         : 8
main_if_statement    : 65 66 67 68
many_elseif          : 67 68 70
math_expr            : 20 53 60 63 64
math_oper            : 54 55
mem_func             : 134 135
mem_funcs            : 127 135
mem_var_dcl          : 130 131
mem_vars             : 127 131
modf_acso            : 128 132
negacion             : 80 82
operacion_mat        : 58 59
operaciones_mat      : 53 59
php_code             : 0
php_end              : 1
php_heading          : 1
return               : 96 97
scope                : 65 66 66 67 68 68 69 70 100 101 116 132 133
signo                : 50 52 56 57
signo_mas_menos      : 38 43
signo_menos_mas      : 40 44
statement            : 4 5
statements           : 1 5 90 92 94 96
string               : 21 27 32 34 35
string_concat        : 25 26
string_concats       : 26 32 33
value                : 114 115
values               : 115 118
var_accs             : 24
var_dcl              : 16 101
var_declaration      : 6
var_modi             : 17 101
var_modification     : 7
while_lopp           : 10

Parsing method: LALR

state 0

    (0) S' -> . php_code
    (1) php_code -> . php_heading statements php_end
    (2) php_heading -> . MENORQUE PREGUNTA PHP

    MENORQUE        shift and go to state 3

    php_code                       shift and go to state 1
    php_heading                    shift and go to state 2

state 1

    (0) S' -> php_code .



state 2

    (1) php_code -> php_heading . statements php_end
    (4) statements -> . statement
    (5) statements -> . statements statement
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (65) if_statement -> . main_if_statement scope
    (66) if_statement -> . main_if_statement scope else scope
    (67) if_statement -> . main_if_statement scope many_elseif
    (68) if_statement -> . main_if_statement scope many_elseif else scope
    (101) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (100) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (127) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (138) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (137) echo -> . ECHO expresion FINAL_DE_LINEA
    (34) var_dcl -> . VARIABLE ASIGNACION string
    (60) var_dcl -> . VARIABLE ASIGNACION math_expr
    (108) var_dcl -> . VARIABLE ASIGNACION array
    (122) var_dcl -> . VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (35) var_modi -> . VARIABLE CONCAT_ASIG string
    (36) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (61) var_modi -> . VARIABLE AUTOINCREMENTO
    (62) var_modi -> . VARIABLE AUTODECREMENTO
    (63) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (64) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (119) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (120) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (87) main_if_statement -> . IF LPAREN boolean RPAREN
    (116) func -> . FUNCTION IDENTIFIER args scope
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    statements                     shift and go to state 4
    statement                      shift and go to state 5
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 3

    (2) php_heading -> MENORQUE . PREGUNTA PHP

    PREGUNTA        shift and go to state 31


state 4

    (1) php_code -> php_heading statements . php_end
    (5) statements -> statements . statement
    (3) php_end -> . PREGUNTA MAYORQUE
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (65) if_statement -> . main_if_statement scope
    (66) if_statement -> . main_if_statement scope else scope
    (67) if_statement -> . main_if_statement scope many_elseif
    (68) if_statement -> . main_if_statement scope many_elseif else scope
    (101) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (100) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (127) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (138) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (137) echo -> . ECHO expresion FINAL_DE_LINEA
    (34) var_dcl -> . VARIABLE ASIGNACION string
    (60) var_dcl -> . VARIABLE ASIGNACION math_expr
    (108) var_dcl -> . VARIABLE ASIGNACION array
    (122) var_dcl -> . VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (35) var_modi -> . VARIABLE CONCAT_ASIG string
    (36) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (61) var_modi -> . VARIABLE AUTOINCREMENTO
    (62) var_modi -> . VARIABLE AUTODECREMENTO
    (63) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (64) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (119) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (120) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (87) main_if_statement -> . IF LPAREN boolean RPAREN
    (116) func -> . FUNCTION IDENTIFIER args scope
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    PREGUNTA        shift and go to state 34
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    php_end                        shift and go to state 32
    statement                      shift and go to state 33
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 5

    (4) statements -> statement .

    PREGUNTA        reduce using rule 4 (statements -> statement .)
    FOR             reduce using rule 4 (statements -> statement .)
    WHILE           reduce using rule 4 (statements -> statement .)
    CLASS           reduce using rule 4 (statements -> statement .)
    COMENTARIO      reduce using rule 4 (statements -> statement .)
    ECHO            reduce using rule 4 (statements -> statement .)
    VARIABLE        reduce using rule 4 (statements -> statement .)
    THIS            reduce using rule 4 (statements -> statement .)
    IF              reduce using rule 4 (statements -> statement .)
    FUNCTION        reduce using rule 4 (statements -> statement .)
    IDENTIFIER      reduce using rule 4 (statements -> statement .)
    RLLAVE          reduce using rule 4 (statements -> statement .)
    BREAK           reduce using rule 4 (statements -> statement .)
    CONTINUE        reduce using rule 4 (statements -> statement .)
    RETURN          reduce using rule 4 (statements -> statement .)


state 6

    (6) statement -> var_declaration .

    PREGUNTA        reduce using rule 6 (statement -> var_declaration .)
    FOR             reduce using rule 6 (statement -> var_declaration .)
    WHILE           reduce using rule 6 (statement -> var_declaration .)
    CLASS           reduce using rule 6 (statement -> var_declaration .)
    COMENTARIO      reduce using rule 6 (statement -> var_declaration .)
    ECHO            reduce using rule 6 (statement -> var_declaration .)
    VARIABLE        reduce using rule 6 (statement -> var_declaration .)
    THIS            reduce using rule 6 (statement -> var_declaration .)
    IF              reduce using rule 6 (statement -> var_declaration .)
    FUNCTION        reduce using rule 6 (statement -> var_declaration .)
    IDENTIFIER      reduce using rule 6 (statement -> var_declaration .)
    RLLAVE          reduce using rule 6 (statement -> var_declaration .)
    BREAK           reduce using rule 6 (statement -> var_declaration .)
    CONTINUE        reduce using rule 6 (statement -> var_declaration .)
    RETURN          reduce using rule 6 (statement -> var_declaration .)


state 7

    (7) statement -> var_modification .

    PREGUNTA        reduce using rule 7 (statement -> var_modification .)
    FOR             reduce using rule 7 (statement -> var_modification .)
    WHILE           reduce using rule 7 (statement -> var_modification .)
    CLASS           reduce using rule 7 (statement -> var_modification .)
    COMENTARIO      reduce using rule 7 (statement -> var_modification .)
    ECHO            reduce using rule 7 (statement -> var_modification .)
    VARIABLE        reduce using rule 7 (statement -> var_modification .)
    THIS            reduce using rule 7 (statement -> var_modification .)
    IF              reduce using rule 7 (statement -> var_modification .)
    FUNCTION        reduce using rule 7 (statement -> var_modification .)
    IDENTIFIER      reduce using rule 7 (statement -> var_modification .)
    RLLAVE          reduce using rule 7 (statement -> var_modification .)
    BREAK           reduce using rule 7 (statement -> var_modification .)
    CONTINUE        reduce using rule 7 (statement -> var_modification .)
    RETURN          reduce using rule 7 (statement -> var_modification .)


state 8

    (8) statement -> if_statement .

    PREGUNTA        reduce using rule 8 (statement -> if_statement .)
    FOR             reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    CLASS           reduce using rule 8 (statement -> if_statement .)
    COMENTARIO      reduce using rule 8 (statement -> if_statement .)
    ECHO            reduce using rule 8 (statement -> if_statement .)
    VARIABLE        reduce using rule 8 (statement -> if_statement .)
    THIS            reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    FUNCTION        reduce using rule 8 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> if_statement .)
    RLLAVE          reduce using rule 8 (statement -> if_statement .)
    BREAK           reduce using rule 8 (statement -> if_statement .)
    CONTINUE        reduce using rule 8 (statement -> if_statement .)
    RETURN          reduce using rule 8 (statement -> if_statement .)


state 9

    (9) statement -> for_loop .

    PREGUNTA        reduce using rule 9 (statement -> for_loop .)
    FOR             reduce using rule 9 (statement -> for_loop .)
    WHILE           reduce using rule 9 (statement -> for_loop .)
    CLASS           reduce using rule 9 (statement -> for_loop .)
    COMENTARIO      reduce using rule 9 (statement -> for_loop .)
    ECHO            reduce using rule 9 (statement -> for_loop .)
    VARIABLE        reduce using rule 9 (statement -> for_loop .)
    THIS            reduce using rule 9 (statement -> for_loop .)
    IF              reduce using rule 9 (statement -> for_loop .)
    FUNCTION        reduce using rule 9 (statement -> for_loop .)
    IDENTIFIER      reduce using rule 9 (statement -> for_loop .)
    RLLAVE          reduce using rule 9 (statement -> for_loop .)
    BREAK           reduce using rule 9 (statement -> for_loop .)
    CONTINUE        reduce using rule 9 (statement -> for_loop .)
    RETURN          reduce using rule 9 (statement -> for_loop .)


state 10

    (10) statement -> while_lopp .

    PREGUNTA        reduce using rule 10 (statement -> while_lopp .)
    FOR             reduce using rule 10 (statement -> while_lopp .)
    WHILE           reduce using rule 10 (statement -> while_lopp .)
    CLASS           reduce using rule 10 (statement -> while_lopp .)
    COMENTARIO      reduce using rule 10 (statement -> while_lopp .)
    ECHO            reduce using rule 10 (statement -> while_lopp .)
    VARIABLE        reduce using rule 10 (statement -> while_lopp .)
    THIS            reduce using rule 10 (statement -> while_lopp .)
    IF              reduce using rule 10 (statement -> while_lopp .)
    FUNCTION        reduce using rule 10 (statement -> while_lopp .)
    IDENTIFIER      reduce using rule 10 (statement -> while_lopp .)
    RLLAVE          reduce using rule 10 (statement -> while_lopp .)
    BREAK           reduce using rule 10 (statement -> while_lopp .)
    CONTINUE        reduce using rule 10 (statement -> while_lopp .)
    RETURN          reduce using rule 10 (statement -> while_lopp .)


state 11

    (11) statement -> class .

    PREGUNTA        reduce using rule 11 (statement -> class .)
    FOR             reduce using rule 11 (statement -> class .)
    WHILE           reduce using rule 11 (statement -> class .)
    CLASS           reduce using rule 11 (statement -> class .)
    COMENTARIO      reduce using rule 11 (statement -> class .)
    ECHO            reduce using rule 11 (statement -> class .)
    VARIABLE        reduce using rule 11 (statement -> class .)
    THIS            reduce using rule 11 (statement -> class .)
    IF              reduce using rule 11 (statement -> class .)
    FUNCTION        reduce using rule 11 (statement -> class .)
    IDENTIFIER      reduce using rule 11 (statement -> class .)
    RLLAVE          reduce using rule 11 (statement -> class .)
    BREAK           reduce using rule 11 (statement -> class .)
    CONTINUE        reduce using rule 11 (statement -> class .)
    RETURN          reduce using rule 11 (statement -> class .)


state 12

    (12) statement -> comentario .

    PREGUNTA        reduce using rule 12 (statement -> comentario .)
    FOR             reduce using rule 12 (statement -> comentario .)
    WHILE           reduce using rule 12 (statement -> comentario .)
    CLASS           reduce using rule 12 (statement -> comentario .)
    COMENTARIO      reduce using rule 12 (statement -> comentario .)
    ECHO            reduce using rule 12 (statement -> comentario .)
    VARIABLE        reduce using rule 12 (statement -> comentario .)
    THIS            reduce using rule 12 (statement -> comentario .)
    IF              reduce using rule 12 (statement -> comentario .)
    FUNCTION        reduce using rule 12 (statement -> comentario .)
    IDENTIFIER      reduce using rule 12 (statement -> comentario .)
    RLLAVE          reduce using rule 12 (statement -> comentario .)
    BREAK           reduce using rule 12 (statement -> comentario .)
    CONTINUE        reduce using rule 12 (statement -> comentario .)
    RETURN          reduce using rule 12 (statement -> comentario .)


state 13

    (13) statement -> function .

    PREGUNTA        reduce using rule 13 (statement -> function .)
    FOR             reduce using rule 13 (statement -> function .)
    WHILE           reduce using rule 13 (statement -> function .)
    CLASS           reduce using rule 13 (statement -> function .)
    COMENTARIO      reduce using rule 13 (statement -> function .)
    ECHO            reduce using rule 13 (statement -> function .)
    VARIABLE        reduce using rule 13 (statement -> function .)
    THIS            reduce using rule 13 (statement -> function .)
    IF              reduce using rule 13 (statement -> function .)
    FUNCTION        reduce using rule 13 (statement -> function .)
    IDENTIFIER      reduce using rule 13 (statement -> function .)
    RLLAVE          reduce using rule 13 (statement -> function .)
    BREAK           reduce using rule 13 (statement -> function .)
    CONTINUE        reduce using rule 13 (statement -> function .)
    RETURN          reduce using rule 13 (statement -> function .)


state 14

    (14) statement -> function_call .

    PREGUNTA        reduce using rule 14 (statement -> function_call .)
    FOR             reduce using rule 14 (statement -> function_call .)
    WHILE           reduce using rule 14 (statement -> function_call .)
    CLASS           reduce using rule 14 (statement -> function_call .)
    COMENTARIO      reduce using rule 14 (statement -> function_call .)
    ECHO            reduce using rule 14 (statement -> function_call .)
    VARIABLE        reduce using rule 14 (statement -> function_call .)
    THIS            reduce using rule 14 (statement -> function_call .)
    IF              reduce using rule 14 (statement -> function_call .)
    FUNCTION        reduce using rule 14 (statement -> function_call .)
    IDENTIFIER      reduce using rule 14 (statement -> function_call .)
    RLLAVE          reduce using rule 14 (statement -> function_call .)
    BREAK           reduce using rule 14 (statement -> function_call .)
    CONTINUE        reduce using rule 14 (statement -> function_call .)
    RETURN          reduce using rule 14 (statement -> function_call .)


state 15

    (15) statement -> echo .

    PREGUNTA        reduce using rule 15 (statement -> echo .)
    FOR             reduce using rule 15 (statement -> echo .)
    WHILE           reduce using rule 15 (statement -> echo .)
    CLASS           reduce using rule 15 (statement -> echo .)
    COMENTARIO      reduce using rule 15 (statement -> echo .)
    ECHO            reduce using rule 15 (statement -> echo .)
    VARIABLE        reduce using rule 15 (statement -> echo .)
    THIS            reduce using rule 15 (statement -> echo .)
    IF              reduce using rule 15 (statement -> echo .)
    FUNCTION        reduce using rule 15 (statement -> echo .)
    IDENTIFIER      reduce using rule 15 (statement -> echo .)
    RLLAVE          reduce using rule 15 (statement -> echo .)
    BREAK           reduce using rule 15 (statement -> echo .)
    CONTINUE        reduce using rule 15 (statement -> echo .)
    RETURN          reduce using rule 15 (statement -> echo .)


state 16

    (16) var_declaration -> var_dcl . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 35


state 17

    (17) var_modification -> var_modi . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 36


state 18

    (65) if_statement -> main_if_statement . scope
    (66) if_statement -> main_if_statement . scope else scope
    (67) if_statement -> main_if_statement . scope many_elseif
    (68) if_statement -> main_if_statement . scope many_elseif else scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 37

state 19

    (101) for_loop -> FOR . LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope

    LPAREN          shift and go to state 39


state 20

    (100) while_lopp -> WHILE . LPAREN boolean RPAREN scope

    LPAREN          shift and go to state 40


state 21

    (127) class -> CLASS . IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE

    IDENTIFIER      shift and go to state 41


state 22

    (117) func_call -> IDENTIFIER . LPAREN RPAREN
    (118) func_call -> IDENTIFIER . LPAREN values RPAREN

    LPAREN          shift and go to state 42


state 23

    (138) comentario -> COMENTARIO .

    PREGUNTA        reduce using rule 138 (comentario -> COMENTARIO .)
    FOR             reduce using rule 138 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 138 (comentario -> COMENTARIO .)
    CLASS           reduce using rule 138 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 138 (comentario -> COMENTARIO .)
    ECHO            reduce using rule 138 (comentario -> COMENTARIO .)
    VARIABLE        reduce using rule 138 (comentario -> COMENTARIO .)
    THIS            reduce using rule 138 (comentario -> COMENTARIO .)
    IF              reduce using rule 138 (comentario -> COMENTARIO .)
    FUNCTION        reduce using rule 138 (comentario -> COMENTARIO .)
    IDENTIFIER      reduce using rule 138 (comentario -> COMENTARIO .)
    RLLAVE          reduce using rule 138 (comentario -> COMENTARIO .)
    BREAK           reduce using rule 138 (comentario -> COMENTARIO .)
    CONTINUE        reduce using rule 138 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 138 (comentario -> COMENTARIO .)


state 24

    (18) function -> func .

    PREGUNTA        reduce using rule 18 (function -> func .)
    FOR             reduce using rule 18 (function -> func .)
    WHILE           reduce using rule 18 (function -> func .)
    CLASS           reduce using rule 18 (function -> func .)
    COMENTARIO      reduce using rule 18 (function -> func .)
    ECHO            reduce using rule 18 (function -> func .)
    VARIABLE        reduce using rule 18 (function -> func .)
    THIS            reduce using rule 18 (function -> func .)
    IF              reduce using rule 18 (function -> func .)
    FUNCTION        reduce using rule 18 (function -> func .)
    IDENTIFIER      reduce using rule 18 (function -> func .)
    RLLAVE          reduce using rule 18 (function -> func .)
    BREAK           reduce using rule 18 (function -> func .)
    CONTINUE        reduce using rule 18 (function -> func .)
    RETURN          reduce using rule 18 (function -> func .)


state 25

    (19) function_call -> func_call . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 43


state 26

    (137) echo -> ECHO . expresion FINAL_DE_LINEA
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    expresion                      shift and go to state 44
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 27

    (34) var_dcl -> VARIABLE . ASIGNACION string
    (60) var_dcl -> VARIABLE . ASIGNACION math_expr
    (108) var_dcl -> VARIABLE . ASIGNACION array
    (122) var_dcl -> VARIABLE . ASIGNACION VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> VARIABLE . ASIGNACION NEW func_call
    (35) var_modi -> VARIABLE . CONCAT_ASIG string
    (36) var_modi -> VARIABLE . CONCAT_ASIG VARIABLE
    (61) var_modi -> VARIABLE . AUTOINCREMENTO
    (62) var_modi -> VARIABLE . AUTODECREMENTO
    (63) var_modi -> VARIABLE . ASIGNACION_AUMENTADA math_expr
    (64) var_modi -> VARIABLE . ASIGNACION_DISMINUIDA math_expr
    (120) var_modi -> VARIABLE . ARROW IDENTIFIER ASIGNACION expresion
    (123) func_call -> VARIABLE . ARROW func_call

    ASIGNACION      shift and go to state 65
    CONCAT_ASIG     shift and go to state 67
    AUTOINCREMENTO  shift and go to state 68
    AUTODECREMENTO  shift and go to state 69
    ASIGNACION_AUMENTADA shift and go to state 70
    ASIGNACION_DISMINUIDA shift and go to state 71
    ARROW           shift and go to state 66


state 28

    (119) var_modi -> THIS . ARROW IDENTIFIER ASIGNACION expresion

    ARROW           shift and go to state 72


state 29

    (87) main_if_statement -> IF . LPAREN boolean RPAREN

    LPAREN          shift and go to state 73


state 30

    (116) func -> FUNCTION . IDENTIFIER args scope

    IDENTIFIER      shift and go to state 74


state 31

    (2) php_heading -> MENORQUE PREGUNTA . PHP

    PHP             shift and go to state 75


state 32

    (1) php_code -> php_heading statements php_end .

    $end            reduce using rule 1 (php_code -> php_heading statements php_end .)


state 33

    (5) statements -> statements statement .

    PREGUNTA        reduce using rule 5 (statements -> statements statement .)
    FOR             reduce using rule 5 (statements -> statements statement .)
    WHILE           reduce using rule 5 (statements -> statements statement .)
    CLASS           reduce using rule 5 (statements -> statements statement .)
    COMENTARIO      reduce using rule 5 (statements -> statements statement .)
    ECHO            reduce using rule 5 (statements -> statements statement .)
    VARIABLE        reduce using rule 5 (statements -> statements statement .)
    THIS            reduce using rule 5 (statements -> statements statement .)
    IF              reduce using rule 5 (statements -> statements statement .)
    FUNCTION        reduce using rule 5 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 5 (statements -> statements statement .)
    RLLAVE          reduce using rule 5 (statements -> statements statement .)
    BREAK           reduce using rule 5 (statements -> statements statement .)
    CONTINUE        reduce using rule 5 (statements -> statements statement .)
    RETURN          reduce using rule 5 (statements -> statements statement .)


state 34

    (3) php_end -> PREGUNTA . MAYORQUE

    MAYORQUE        shift and go to state 76


state 35

    (16) var_declaration -> var_dcl FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    FOR             reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    WHILE           reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    CLASS           reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    ECHO            reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    THIS            reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    IF              reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    BREAK           reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    RETURN          reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)


state 36

    (17) var_modification -> var_modi FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    FOR             reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    WHILE           reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    CLASS           reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    ECHO            reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    THIS            reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    IF              reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    BREAK           reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    RETURN          reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)


state 37

    (65) if_statement -> main_if_statement scope .
    (66) if_statement -> main_if_statement scope . else scope
    (67) if_statement -> main_if_statement scope . many_elseif
    (68) if_statement -> main_if_statement scope . many_elseif else scope
    (89) else -> . ELSE
    (69) many_elseif -> . elseif_statement scope
    (70) many_elseif -> . elseif_statement scope many_elseif
    (88) elseif_statement -> . ELSEIF LPAREN boolean RPAREN

    PREGUNTA        reduce using rule 65 (if_statement -> main_if_statement scope .)
    FOR             reduce using rule 65 (if_statement -> main_if_statement scope .)
    WHILE           reduce using rule 65 (if_statement -> main_if_statement scope .)
    CLASS           reduce using rule 65 (if_statement -> main_if_statement scope .)
    COMENTARIO      reduce using rule 65 (if_statement -> main_if_statement scope .)
    ECHO            reduce using rule 65 (if_statement -> main_if_statement scope .)
    VARIABLE        reduce using rule 65 (if_statement -> main_if_statement scope .)
    THIS            reduce using rule 65 (if_statement -> main_if_statement scope .)
    IF              reduce using rule 65 (if_statement -> main_if_statement scope .)
    FUNCTION        reduce using rule 65 (if_statement -> main_if_statement scope .)
    IDENTIFIER      reduce using rule 65 (if_statement -> main_if_statement scope .)
    RLLAVE          reduce using rule 65 (if_statement -> main_if_statement scope .)
    BREAK           reduce using rule 65 (if_statement -> main_if_statement scope .)
    CONTINUE        reduce using rule 65 (if_statement -> main_if_statement scope .)
    RETURN          reduce using rule 65 (if_statement -> main_if_statement scope .)
    ELSE            shift and go to state 79
    ELSEIF          shift and go to state 81

    else                           shift and go to state 77
    many_elseif                    shift and go to state 78
    elseif_statement               shift and go to state 80

state 38

    (90) scope -> LLLAVE . statements RLLAVE
    (91) scope -> LLLAVE . RLLAVE
    (92) scope -> LLLAVE . statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> LLLAVE . BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> LLLAVE . statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> LLLAVE . CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> LLLAVE . statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> LLLAVE . return FINAL_DE_LINEA RLLAVE
    (4) statements -> . statement
    (5) statements -> . statements statement
    (98) return -> . RETURN
    (99) return -> . RETURN expresion
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (65) if_statement -> . main_if_statement scope
    (66) if_statement -> . main_if_statement scope else scope
    (67) if_statement -> . main_if_statement scope many_elseif
    (68) if_statement -> . main_if_statement scope many_elseif else scope
    (101) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (100) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (127) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (138) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (137) echo -> . ECHO expresion FINAL_DE_LINEA
    (34) var_dcl -> . VARIABLE ASIGNACION string
    (60) var_dcl -> . VARIABLE ASIGNACION math_expr
    (108) var_dcl -> . VARIABLE ASIGNACION array
    (122) var_dcl -> . VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (35) var_modi -> . VARIABLE CONCAT_ASIG string
    (36) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (61) var_modi -> . VARIABLE AUTOINCREMENTO
    (62) var_modi -> . VARIABLE AUTODECREMENTO
    (63) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (64) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (119) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (120) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (87) main_if_statement -> . IF LPAREN boolean RPAREN
    (116) func -> . FUNCTION IDENTIFIER args scope
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    RLLAVE          shift and go to state 83
    BREAK           shift and go to state 84
    CONTINUE        shift and go to state 85
    RETURN          shift and go to state 87
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    statements                     shift and go to state 82
    return                         shift and go to state 86
    statement                      shift and go to state 5
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 39

    (101) for_loop -> FOR LPAREN . var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (34) var_dcl -> . VARIABLE ASIGNACION string
    (60) var_dcl -> . VARIABLE ASIGNACION math_expr
    (108) var_dcl -> . VARIABLE ASIGNACION array
    (122) var_dcl -> . VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> . VARIABLE ASIGNACION NEW func_call

    VARIABLE        shift and go to state 89

    var_dcl                        shift and go to state 88

state 40

    (100) while_lopp -> WHILE LPAREN . boolean RPAREN scope
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (80) bool_unary_oprs -> . negacion
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    ARRAY           shift and go to state 58
    NEGACION        shift and go to state 64
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    boolean                        shift and go to state 90
    expresion                      shift and go to state 91
    bool_unary_oprs                shift and go to state 57
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    negacion                       shift and go to state 63
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 41

    (127) class -> CLASS IDENTIFIER . LLLAVE mem_vars mem_funcs RLLAVE

    LLLAVE          shift and go to state 92


state 42

    (117) func_call -> IDENTIFIER LPAREN . RPAREN
    (118) func_call -> IDENTIFIER LPAREN . values RPAREN
    (114) values -> . value
    (115) values -> . value COMA values
    (113) value -> . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    RPAREN          shift and go to state 93
    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    values                         shift and go to state 94
    value                          shift and go to state 95
    expresion                      shift and go to state 96
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 43

    (19) function_call -> func_call FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    FOR             reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    WHILE           reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    CLASS           reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    ECHO            reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    THIS            reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    IF              reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    BREAK           reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    RETURN          reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)


state 44

    (137) echo -> ECHO expresion . FINAL_DE_LINEA
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  shift and go to state 97
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 45

    (20) expresion -> math_expr .
    (53) math_expr -> math_expr . operaciones_mat
    (58) operaciones_mat -> . operacion_mat
    (59) operaciones_mat -> . operacion_mat operaciones_mat
    (54) operacion_mat -> . math_oper NUMERO
    (55) operacion_mat -> . math_oper VARIABLE
    (56) operacion_mat -> . signo NUMERO
    (57) operacion_mat -> . signo VARIABLE
    (45) math_oper -> . MAS
    (46) math_oper -> . MENOS
    (47) math_oper -> . MULTIPLICACION
    (48) math_oper -> . DIVISION
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 20 (expresion -> math_expr .)
    MAYORQUE        reduce using rule 20 (expresion -> math_expr .)
    MENORQUE        reduce using rule 20 (expresion -> math_expr .)
    MAYORIGUAL      reduce using rule 20 (expresion -> math_expr .)
    MENORIGUAL      reduce using rule 20 (expresion -> math_expr .)
    SAME            reduce using rule 20 (expresion -> math_expr .)
    EQUALS          reduce using rule 20 (expresion -> math_expr .)
    DESIGUALDAD     reduce using rule 20 (expresion -> math_expr .)
    AND             reduce using rule 20 (expresion -> math_expr .)
    OR              reduce using rule 20 (expresion -> math_expr .)
    COMA            reduce using rule 20 (expresion -> math_expr .)
    RPAREN          reduce using rule 20 (expresion -> math_expr .)
    ASIGNACION2     reduce using rule 20 (expresion -> math_expr .)
    MAS             shift and go to state 112
    MENOS           shift and go to state 113
    MULTIPLICACION  shift and go to state 114
    DIVISION        shift and go to state 115

    operaciones_mat                shift and go to state 108
    operacion_mat                  shift and go to state 109
    math_oper                      shift and go to state 110
    signo                          shift and go to state 111
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 46

    (21) expresion -> string .
    (32) string -> string . string_concats
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

    FINAL_DE_LINEA  reduce using rule 21 (expresion -> string .)
    MAYORQUE        reduce using rule 21 (expresion -> string .)
    MENORQUE        reduce using rule 21 (expresion -> string .)
    MAYORIGUAL      reduce using rule 21 (expresion -> string .)
    MENORIGUAL      reduce using rule 21 (expresion -> string .)
    SAME            reduce using rule 21 (expresion -> string .)
    EQUALS          reduce using rule 21 (expresion -> string .)
    DESIGUALDAD     reduce using rule 21 (expresion -> string .)
    AND             reduce using rule 21 (expresion -> string .)
    OR              reduce using rule 21 (expresion -> string .)
    COMA            reduce using rule 21 (expresion -> string .)
    RPAREN          reduce using rule 21 (expresion -> string .)
    ASIGNACION2     reduce using rule 21 (expresion -> string .)
    DOT             shift and go to state 118

    string_concats                 shift and go to state 116
    string_concat                  shift and go to state 117

state 47

    (22) expresion -> boolean .

    FINAL_DE_LINEA  reduce using rule 22 (expresion -> boolean .)
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)
    COMA            reduce using rule 22 (expresion -> boolean .)
    RPAREN          reduce using rule 22 (expresion -> boolean .)
    ASIGNACION2     reduce using rule 22 (expresion -> boolean .)


state 48

    (23) expresion -> array .

    FINAL_DE_LINEA  reduce using rule 23 (expresion -> array .)
    MAYORQUE        reduce using rule 23 (expresion -> array .)
    MENORQUE        reduce using rule 23 (expresion -> array .)
    MAYORIGUAL      reduce using rule 23 (expresion -> array .)
    MENORIGUAL      reduce using rule 23 (expresion -> array .)
    SAME            reduce using rule 23 (expresion -> array .)
    EQUALS          reduce using rule 23 (expresion -> array .)
    DESIGUALDAD     reduce using rule 23 (expresion -> array .)
    AND             reduce using rule 23 (expresion -> array .)
    OR              reduce using rule 23 (expresion -> array .)
    COMA            reduce using rule 23 (expresion -> array .)
    RPAREN          reduce using rule 23 (expresion -> array .)
    ASIGNACION2     reduce using rule 23 (expresion -> array .)


state 49

    (24) expresion -> var_accs .

    FINAL_DE_LINEA  reduce using rule 24 (expresion -> var_accs .)
    MAYORQUE        reduce using rule 24 (expresion -> var_accs .)
    MENORQUE        reduce using rule 24 (expresion -> var_accs .)
    MAYORIGUAL      reduce using rule 24 (expresion -> var_accs .)
    MENORIGUAL      reduce using rule 24 (expresion -> var_accs .)
    SAME            reduce using rule 24 (expresion -> var_accs .)
    EQUALS          reduce using rule 24 (expresion -> var_accs .)
    DESIGUALDAD     reduce using rule 24 (expresion -> var_accs .)
    AND             reduce using rule 24 (expresion -> var_accs .)
    OR              reduce using rule 24 (expresion -> var_accs .)
    COMA            reduce using rule 24 (expresion -> var_accs .)
    RPAREN          reduce using rule 24 (expresion -> var_accs .)
    ASIGNACION2     reduce using rule 24 (expresion -> var_accs .)


state 50

    (49) math_expr -> NUMERO .

    MAS             reduce using rule 49 (math_expr -> NUMERO .)
    MENOS           reduce using rule 49 (math_expr -> NUMERO .)
    MULTIPLICACION  reduce using rule 49 (math_expr -> NUMERO .)
    DIVISION        reduce using rule 49 (math_expr -> NUMERO .)
    FINAL_DE_LINEA  reduce using rule 49 (math_expr -> NUMERO .)
    MAYORQUE        reduce using rule 49 (math_expr -> NUMERO .)
    MENORQUE        reduce using rule 49 (math_expr -> NUMERO .)
    MAYORIGUAL      reduce using rule 49 (math_expr -> NUMERO .)
    MENORIGUAL      reduce using rule 49 (math_expr -> NUMERO .)
    SAME            reduce using rule 49 (math_expr -> NUMERO .)
    EQUALS          reduce using rule 49 (math_expr -> NUMERO .)
    DESIGUALDAD     reduce using rule 49 (math_expr -> NUMERO .)
    AND             reduce using rule 49 (math_expr -> NUMERO .)
    OR              reduce using rule 49 (math_expr -> NUMERO .)
    COMA            reduce using rule 49 (math_expr -> NUMERO .)
    RPAREN          reduce using rule 49 (math_expr -> NUMERO .)
    ASIGNACION2     reduce using rule 49 (math_expr -> NUMERO .)


state 51

    (50) math_expr -> signo . NUMERO
    (52) math_expr -> signo . VARIABLE

    NUMERO          shift and go to state 119
    VARIABLE        shift and go to state 120


state 52

    (51) math_expr -> VARIABLE .
    (33) string -> VARIABLE . string_concats
    (121) var_accs -> VARIABLE . ARROW IDENTIFIER
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

    MAS             reduce using rule 51 (math_expr -> VARIABLE .)
    MENOS           reduce using rule 51 (math_expr -> VARIABLE .)
    MULTIPLICACION  reduce using rule 51 (math_expr -> VARIABLE .)
    DIVISION        reduce using rule 51 (math_expr -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 51 (math_expr -> VARIABLE .)
    MAYORQUE        reduce using rule 51 (math_expr -> VARIABLE .)
    MENORQUE        reduce using rule 51 (math_expr -> VARIABLE .)
    MAYORIGUAL      reduce using rule 51 (math_expr -> VARIABLE .)
    MENORIGUAL      reduce using rule 51 (math_expr -> VARIABLE .)
    SAME            reduce using rule 51 (math_expr -> VARIABLE .)
    EQUALS          reduce using rule 51 (math_expr -> VARIABLE .)
    DESIGUALDAD     reduce using rule 51 (math_expr -> VARIABLE .)
    AND             reduce using rule 51 (math_expr -> VARIABLE .)
    OR              reduce using rule 51 (math_expr -> VARIABLE .)
    COMA            reduce using rule 51 (math_expr -> VARIABLE .)
    RPAREN          reduce using rule 51 (math_expr -> VARIABLE .)
    ASIGNACION2     reduce using rule 51 (math_expr -> VARIABLE .)
    ARROW           shift and go to state 122
    DOT             shift and go to state 118

    string_concats                 shift and go to state 121
    string_concat                  shift and go to state 117

state 53

    (30) string -> STRING1 .

    DOT             reduce using rule 30 (string -> STRING1 .)
    FINAL_DE_LINEA  reduce using rule 30 (string -> STRING1 .)
    MAYORQUE        reduce using rule 30 (string -> STRING1 .)
    MENORQUE        reduce using rule 30 (string -> STRING1 .)
    MAYORIGUAL      reduce using rule 30 (string -> STRING1 .)
    MENORIGUAL      reduce using rule 30 (string -> STRING1 .)
    SAME            reduce using rule 30 (string -> STRING1 .)
    EQUALS          reduce using rule 30 (string -> STRING1 .)
    DESIGUALDAD     reduce using rule 30 (string -> STRING1 .)
    AND             reduce using rule 30 (string -> STRING1 .)
    OR              reduce using rule 30 (string -> STRING1 .)
    COMA            reduce using rule 30 (string -> STRING1 .)
    RPAREN          reduce using rule 30 (string -> STRING1 .)
    ASIGNACION2     reduce using rule 30 (string -> STRING1 .)


state 54

    (31) string -> STRING2 .

    DOT             reduce using rule 31 (string -> STRING2 .)
    FINAL_DE_LINEA  reduce using rule 31 (string -> STRING2 .)
    MAYORQUE        reduce using rule 31 (string -> STRING2 .)
    MENORQUE        reduce using rule 31 (string -> STRING2 .)
    MAYORIGUAL      reduce using rule 31 (string -> STRING2 .)
    MENORIGUAL      reduce using rule 31 (string -> STRING2 .)
    SAME            reduce using rule 31 (string -> STRING2 .)
    EQUALS          reduce using rule 31 (string -> STRING2 .)
    DESIGUALDAD     reduce using rule 31 (string -> STRING2 .)
    AND             reduce using rule 31 (string -> STRING2 .)
    OR              reduce using rule 31 (string -> STRING2 .)
    COMA            reduce using rule 31 (string -> STRING2 .)
    RPAREN          reduce using rule 31 (string -> STRING2 .)
    ASIGNACION2     reduce using rule 31 (string -> STRING2 .)


state 55

    (83) boolean -> TRUE .

    FINAL_DE_LINEA  reduce using rule 83 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 83 (boolean -> TRUE .)
    MENORQUE        reduce using rule 83 (boolean -> TRUE .)
    MAYORIGUAL      reduce using rule 83 (boolean -> TRUE .)
    MENORIGUAL      reduce using rule 83 (boolean -> TRUE .)
    SAME            reduce using rule 83 (boolean -> TRUE .)
    EQUALS          reduce using rule 83 (boolean -> TRUE .)
    DESIGUALDAD     reduce using rule 83 (boolean -> TRUE .)
    AND             reduce using rule 83 (boolean -> TRUE .)
    OR              reduce using rule 83 (boolean -> TRUE .)
    RPAREN          reduce using rule 83 (boolean -> TRUE .)
    COMA            reduce using rule 83 (boolean -> TRUE .)
    ASIGNACION2     reduce using rule 83 (boolean -> TRUE .)


state 56

    (84) boolean -> FALSE .

    FINAL_DE_LINEA  reduce using rule 84 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 84 (boolean -> FALSE .)
    MENORQUE        reduce using rule 84 (boolean -> FALSE .)
    MAYORIGUAL      reduce using rule 84 (boolean -> FALSE .)
    MENORIGUAL      reduce using rule 84 (boolean -> FALSE .)
    SAME            reduce using rule 84 (boolean -> FALSE .)
    EQUALS          reduce using rule 84 (boolean -> FALSE .)
    DESIGUALDAD     reduce using rule 84 (boolean -> FALSE .)
    AND             reduce using rule 84 (boolean -> FALSE .)
    OR              reduce using rule 84 (boolean -> FALSE .)
    RPAREN          reduce using rule 84 (boolean -> FALSE .)
    COMA            reduce using rule 84 (boolean -> FALSE .)
    ASIGNACION2     reduce using rule 84 (boolean -> FALSE .)


state 57

    (86) boolean -> bool_unary_oprs . boolean
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (80) bool_unary_oprs -> . negacion
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    ARRAY           shift and go to state 58
    NEGACION        shift and go to state 64
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    bool_unary_oprs                shift and go to state 57
    boolean                        shift and go to state 123
    expresion                      shift and go to state 91
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    negacion                       shift and go to state 63
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 58

    (107) array -> ARRAY . LPAREN array_items RPAREN

    LPAREN          shift and go to state 124


state 59

    (41) signo -> MAS .
    (37) signo_mas_menos -> MAS . MENOS
    (38) signo_mas_menos -> MAS . MENOS signo_mas_menos

    NUMERO          reduce using rule 41 (signo -> MAS .)
    VARIABLE        reduce using rule 41 (signo -> MAS .)
    MENOS           shift and go to state 125


state 60

    (42) signo -> MENOS .
    (39) signo_menos_mas -> MENOS . MAS
    (40) signo_menos_mas -> MENOS . MAS signo_menos_mas

    NUMERO          reduce using rule 42 (signo -> MENOS .)
    VARIABLE        reduce using rule 42 (signo -> MENOS .)
    MAS             shift and go to state 126


state 61

    (43) signo -> signo_mas_menos .

    NUMERO          reduce using rule 43 (signo -> signo_mas_menos .)
    VARIABLE        reduce using rule 43 (signo -> signo_mas_menos .)


state 62

    (44) signo -> signo_menos_mas .

    NUMERO          reduce using rule 44 (signo -> signo_menos_mas .)
    VARIABLE        reduce using rule 44 (signo -> signo_menos_mas .)


state 63

    (80) bool_unary_oprs -> negacion .

    TRUE            reduce using rule 80 (bool_unary_oprs -> negacion .)
    FALSE           reduce using rule 80 (bool_unary_oprs -> negacion .)
    NUMERO          reduce using rule 80 (bool_unary_oprs -> negacion .)
    VARIABLE        reduce using rule 80 (bool_unary_oprs -> negacion .)
    STRING1         reduce using rule 80 (bool_unary_oprs -> negacion .)
    STRING2         reduce using rule 80 (bool_unary_oprs -> negacion .)
    ARRAY           reduce using rule 80 (bool_unary_oprs -> negacion .)
    NEGACION        reduce using rule 80 (bool_unary_oprs -> negacion .)
    MAS             reduce using rule 80 (bool_unary_oprs -> negacion .)
    MENOS           reduce using rule 80 (bool_unary_oprs -> negacion .)


state 64

    (81) negacion -> NEGACION .
    (82) negacion -> NEGACION . negacion
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

  ! shift/reduce conflict for NEGACION resolved as shift
    TRUE            reduce using rule 81 (negacion -> NEGACION .)
    FALSE           reduce using rule 81 (negacion -> NEGACION .)
    NUMERO          reduce using rule 81 (negacion -> NEGACION .)
    VARIABLE        reduce using rule 81 (negacion -> NEGACION .)
    STRING1         reduce using rule 81 (negacion -> NEGACION .)
    STRING2         reduce using rule 81 (negacion -> NEGACION .)
    ARRAY           reduce using rule 81 (negacion -> NEGACION .)
    MAS             reduce using rule 81 (negacion -> NEGACION .)
    MENOS           reduce using rule 81 (negacion -> NEGACION .)
    NEGACION        shift and go to state 64

  ! NEGACION        [ reduce using rule 81 (negacion -> NEGACION .) ]

    negacion                       shift and go to state 127

state 65

    (34) var_dcl -> VARIABLE ASIGNACION . string
    (60) var_dcl -> VARIABLE ASIGNACION . math_expr
    (108) var_dcl -> VARIABLE ASIGNACION . array
    (122) var_dcl -> VARIABLE ASIGNACION . VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> VARIABLE ASIGNACION . NEW func_call
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    VARIABLE        shift and go to state 128
    NEW             shift and go to state 132
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    NUMERO          shift and go to state 50
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    string                         shift and go to state 129
    math_expr                      shift and go to state 130
    array                          shift and go to state 131
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 66

    (120) var_modi -> VARIABLE ARROW . IDENTIFIER ASIGNACION expresion
    (123) func_call -> VARIABLE ARROW . func_call
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 134
    VARIABLE        shift and go to state 133

    func_call                      shift and go to state 135

state 67

    (35) var_modi -> VARIABLE CONCAT_ASIG . string
    (36) var_modi -> VARIABLE CONCAT_ASIG . VARIABLE
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats

    VARIABLE        shift and go to state 136
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54

    string                         shift and go to state 137

state 68

    (61) var_modi -> VARIABLE AUTOINCREMENTO .

    FINAL_DE_LINEA  reduce using rule 61 (var_modi -> VARIABLE AUTOINCREMENTO .)
    RPAREN          reduce using rule 61 (var_modi -> VARIABLE AUTOINCREMENTO .)


state 69

    (62) var_modi -> VARIABLE AUTODECREMENTO .

    FINAL_DE_LINEA  reduce using rule 62 (var_modi -> VARIABLE AUTODECREMENTO .)
    RPAREN          reduce using rule 62 (var_modi -> VARIABLE AUTODECREMENTO .)


state 70

    (63) var_modi -> VARIABLE ASIGNACION_AUMENTADA . math_expr
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 138
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    math_expr                      shift and go to state 139
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 71

    (64) var_modi -> VARIABLE ASIGNACION_DISMINUIDA . math_expr
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 138
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    math_expr                      shift and go to state 140
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 72

    (119) var_modi -> THIS ARROW . IDENTIFIER ASIGNACION expresion

    IDENTIFIER      shift and go to state 141


state 73

    (87) main_if_statement -> IF LPAREN . boolean RPAREN
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (80) bool_unary_oprs -> . negacion
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    ARRAY           shift and go to state 58
    NEGACION        shift and go to state 64
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    boolean                        shift and go to state 142
    expresion                      shift and go to state 91
    bool_unary_oprs                shift and go to state 57
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    negacion                       shift and go to state 63
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 74

    (116) func -> FUNCTION IDENTIFIER . args scope
    (111) args -> . LPAREN RPAREN
    (112) args -> . LPAREN arguments RPAREN

    LPAREN          shift and go to state 144

    args                           shift and go to state 143

state 75

    (2) php_heading -> MENORQUE PREGUNTA PHP .

    FOR             reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    WHILE           reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    CLASS           reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    COMENTARIO      reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    ECHO            reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    VARIABLE        reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    THIS            reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    IF              reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    FUNCTION        reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    IDENTIFIER      reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)


state 76

    (3) php_end -> PREGUNTA MAYORQUE .

    $end            reduce using rule 3 (php_end -> PREGUNTA MAYORQUE .)


state 77

    (66) if_statement -> main_if_statement scope else . scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 145

state 78

    (67) if_statement -> main_if_statement scope many_elseif .
    (68) if_statement -> main_if_statement scope many_elseif . else scope
    (89) else -> . ELSE

    PREGUNTA        reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    FOR             reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    WHILE           reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    CLASS           reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    COMENTARIO      reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    ECHO            reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    VARIABLE        reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    THIS            reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    IF              reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    FUNCTION        reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    IDENTIFIER      reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    RLLAVE          reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    BREAK           reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    CONTINUE        reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    RETURN          reduce using rule 67 (if_statement -> main_if_statement scope many_elseif .)
    ELSE            shift and go to state 79

    else                           shift and go to state 146

state 79

    (89) else -> ELSE .

    LLLAVE          reduce using rule 89 (else -> ELSE .)


state 80

    (69) many_elseif -> elseif_statement . scope
    (70) many_elseif -> elseif_statement . scope many_elseif
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 147

state 81

    (88) elseif_statement -> ELSEIF . LPAREN boolean RPAREN

    LPAREN          shift and go to state 148


state 82

    (90) scope -> LLLAVE statements . RLLAVE
    (92) scope -> LLLAVE statements . BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> LLLAVE statements . CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> LLLAVE statements . return FINAL_DE_LINEA RLLAVE
    (5) statements -> statements . statement
    (98) return -> . RETURN
    (99) return -> . RETURN expresion
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (65) if_statement -> . main_if_statement scope
    (66) if_statement -> . main_if_statement scope else scope
    (67) if_statement -> . main_if_statement scope many_elseif
    (68) if_statement -> . main_if_statement scope many_elseif else scope
    (101) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (100) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (127) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (138) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (137) echo -> . ECHO expresion FINAL_DE_LINEA
    (34) var_dcl -> . VARIABLE ASIGNACION string
    (60) var_dcl -> . VARIABLE ASIGNACION math_expr
    (108) var_dcl -> . VARIABLE ASIGNACION array
    (122) var_dcl -> . VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (35) var_modi -> . VARIABLE CONCAT_ASIG string
    (36) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (61) var_modi -> . VARIABLE AUTOINCREMENTO
    (62) var_modi -> . VARIABLE AUTODECREMENTO
    (63) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (64) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (119) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (120) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (87) main_if_statement -> . IF LPAREN boolean RPAREN
    (116) func -> . FUNCTION IDENTIFIER args scope
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    RLLAVE          shift and go to state 149
    BREAK           shift and go to state 150
    CONTINUE        shift and go to state 151
    RETURN          shift and go to state 87
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    return                         shift and go to state 152
    statement                      shift and go to state 33
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 83

    (91) scope -> LLLAVE RLLAVE .

    ELSE            reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    ELSEIF          reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    PREGUNTA        reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    FOR             reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    WHILE           reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    CLASS           reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    COMENTARIO      reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    ECHO            reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    VARIABLE        reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    THIS            reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    IF              reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    FUNCTION        reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    IDENTIFIER      reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    BREAK           reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    CONTINUE        reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    RETURN          reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    PUBLIC          reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    PRIVATE         reduce using rule 91 (scope -> LLLAVE RLLAVE .)
    PROTECTED       reduce using rule 91 (scope -> LLLAVE RLLAVE .)


state 84

    (93) scope -> LLLAVE BREAK . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 153


state 85

    (95) scope -> LLLAVE CONTINUE . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 154


state 86

    (97) scope -> LLLAVE return . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 155


state 87

    (98) return -> RETURN .
    (99) return -> RETURN . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    FINAL_DE_LINEA  reduce using rule 98 (return -> RETURN .)
    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    expresion                      shift and go to state 156
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 88

    (101) for_loop -> FOR LPAREN var_dcl . FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope

    FINAL_DE_LINEA  shift and go to state 157


state 89

    (34) var_dcl -> VARIABLE . ASIGNACION string
    (60) var_dcl -> VARIABLE . ASIGNACION math_expr
    (108) var_dcl -> VARIABLE . ASIGNACION array
    (122) var_dcl -> VARIABLE . ASIGNACION VARIABLE ARROW IDENTIFIER
    (136) var_dcl -> VARIABLE . ASIGNACION NEW func_call

    ASIGNACION      shift and go to state 65


state 90

    (100) while_lopp -> WHILE LPAREN boolean . RPAREN scope
    (22) expresion -> boolean .

    RPAREN          shift and go to state 158
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 91

    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 92

    (127) class -> CLASS IDENTIFIER LLLAVE . mem_vars mem_funcs RLLAVE
    (130) mem_vars -> . mem_var_dcl
    (131) mem_vars -> . mem_var_dcl mem_vars
    (128) mem_var_dcl -> . modf_acso VARIABLE FINAL_DE_LINEA
    (129) mem_var_dcl -> . COMENTARIO
    (124) modf_acso -> . PUBLIC
    (125) modf_acso -> . PRIVATE
    (126) modf_acso -> . PROTECTED

    COMENTARIO      shift and go to state 162
    PUBLIC          shift and go to state 163
    PRIVATE         shift and go to state 164
    PROTECTED       shift and go to state 165

    mem_vars                       shift and go to state 159
    mem_var_dcl                    shift and go to state 160
    modf_acso                      shift and go to state 161

state 93

    (117) func_call -> IDENTIFIER LPAREN RPAREN .

    FINAL_DE_LINEA  reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    DOT             reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MAYORQUE        reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MENORQUE        reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MAYORIGUAL      reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MENORIGUAL      reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    SAME            reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    EQUALS          reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    DESIGUALDAD     reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    COMA            reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)
    ASIGNACION2     reduce using rule 117 (func_call -> IDENTIFIER LPAREN RPAREN .)


state 94

    (118) func_call -> IDENTIFIER LPAREN values . RPAREN

    RPAREN          shift and go to state 166


state 95

    (114) values -> value .
    (115) values -> value . COMA values

    RPAREN          reduce using rule 114 (values -> value .)
    COMA            shift and go to state 167


state 96

    (113) value -> expresion .
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    COMA            reduce using rule 113 (value -> expresion .)
    RPAREN          reduce using rule 113 (value -> expresion .)
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 97

    (137) echo -> ECHO expresion FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    FOR             reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    WHILE           reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    CLASS           reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    ECHO            reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    THIS            reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    IF              reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    BREAK           reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)
    RETURN          reduce using rule 137 (echo -> ECHO expresion FINAL_DE_LINEA .)


state 98

    (85) boolean -> expresion comp_bin_oprs . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    expresion                      shift and go to state 168
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 99

    (71) comp_bin_oprs -> MAYORQUE .

    NUMERO          reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    VARIABLE        reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    STRING1         reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    STRING2         reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    TRUE            reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    FALSE           reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    ARRAY           reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    MAS             reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    MENOS           reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)
    NEGACION        reduce using rule 71 (comp_bin_oprs -> MAYORQUE .)


state 100

    (72) comp_bin_oprs -> MENORQUE .

    NUMERO          reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    VARIABLE        reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    STRING1         reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    STRING2         reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    TRUE            reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    FALSE           reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    ARRAY           reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    MAS             reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    MENOS           reduce using rule 72 (comp_bin_oprs -> MENORQUE .)
    NEGACION        reduce using rule 72 (comp_bin_oprs -> MENORQUE .)


state 101

    (73) comp_bin_oprs -> MAYORIGUAL .

    NUMERO          reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    VARIABLE        reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    STRING1         reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    STRING2         reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    TRUE            reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    FALSE           reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    ARRAY           reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    MAS             reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    MENOS           reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)
    NEGACION        reduce using rule 73 (comp_bin_oprs -> MAYORIGUAL .)


state 102

    (74) comp_bin_oprs -> MENORIGUAL .

    NUMERO          reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    VARIABLE        reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    STRING1         reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    STRING2         reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    TRUE            reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    FALSE           reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    ARRAY           reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    MAS             reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    MENOS           reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)
    NEGACION        reduce using rule 74 (comp_bin_oprs -> MENORIGUAL .)


state 103

    (75) comp_bin_oprs -> SAME .

    NUMERO          reduce using rule 75 (comp_bin_oprs -> SAME .)
    VARIABLE        reduce using rule 75 (comp_bin_oprs -> SAME .)
    STRING1         reduce using rule 75 (comp_bin_oprs -> SAME .)
    STRING2         reduce using rule 75 (comp_bin_oprs -> SAME .)
    TRUE            reduce using rule 75 (comp_bin_oprs -> SAME .)
    FALSE           reduce using rule 75 (comp_bin_oprs -> SAME .)
    ARRAY           reduce using rule 75 (comp_bin_oprs -> SAME .)
    MAS             reduce using rule 75 (comp_bin_oprs -> SAME .)
    MENOS           reduce using rule 75 (comp_bin_oprs -> SAME .)
    NEGACION        reduce using rule 75 (comp_bin_oprs -> SAME .)


state 104

    (76) comp_bin_oprs -> EQUALS .

    NUMERO          reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    VARIABLE        reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    STRING1         reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    STRING2         reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    TRUE            reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    FALSE           reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    ARRAY           reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    MAS             reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    MENOS           reduce using rule 76 (comp_bin_oprs -> EQUALS .)
    NEGACION        reduce using rule 76 (comp_bin_oprs -> EQUALS .)


state 105

    (77) comp_bin_oprs -> DESIGUALDAD .

    NUMERO          reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    VARIABLE        reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    STRING1         reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    STRING2         reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    TRUE            reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    FALSE           reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    ARRAY           reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    MAS             reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    MENOS           reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)
    NEGACION        reduce using rule 77 (comp_bin_oprs -> DESIGUALDAD .)


state 106

    (78) comp_bin_oprs -> AND .

    NUMERO          reduce using rule 78 (comp_bin_oprs -> AND .)
    VARIABLE        reduce using rule 78 (comp_bin_oprs -> AND .)
    STRING1         reduce using rule 78 (comp_bin_oprs -> AND .)
    STRING2         reduce using rule 78 (comp_bin_oprs -> AND .)
    TRUE            reduce using rule 78 (comp_bin_oprs -> AND .)
    FALSE           reduce using rule 78 (comp_bin_oprs -> AND .)
    ARRAY           reduce using rule 78 (comp_bin_oprs -> AND .)
    MAS             reduce using rule 78 (comp_bin_oprs -> AND .)
    MENOS           reduce using rule 78 (comp_bin_oprs -> AND .)
    NEGACION        reduce using rule 78 (comp_bin_oprs -> AND .)


state 107

    (79) comp_bin_oprs -> OR .

    NUMERO          reduce using rule 79 (comp_bin_oprs -> OR .)
    VARIABLE        reduce using rule 79 (comp_bin_oprs -> OR .)
    STRING1         reduce using rule 79 (comp_bin_oprs -> OR .)
    STRING2         reduce using rule 79 (comp_bin_oprs -> OR .)
    TRUE            reduce using rule 79 (comp_bin_oprs -> OR .)
    FALSE           reduce using rule 79 (comp_bin_oprs -> OR .)
    ARRAY           reduce using rule 79 (comp_bin_oprs -> OR .)
    MAS             reduce using rule 79 (comp_bin_oprs -> OR .)
    MENOS           reduce using rule 79 (comp_bin_oprs -> OR .)
    NEGACION        reduce using rule 79 (comp_bin_oprs -> OR .)


state 108

    (53) math_expr -> math_expr operaciones_mat .

    MAS             reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    MENOS           reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    MULTIPLICACION  reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    DIVISION        reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    FINAL_DE_LINEA  reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    MAYORQUE        reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    MENORQUE        reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    MAYORIGUAL      reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    MENORIGUAL      reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    SAME            reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    EQUALS          reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    DESIGUALDAD     reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    AND             reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    OR              reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    COMA            reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    RPAREN          reduce using rule 53 (math_expr -> math_expr operaciones_mat .)
    ASIGNACION2     reduce using rule 53 (math_expr -> math_expr operaciones_mat .)


state 109

    (58) operaciones_mat -> operacion_mat .
    (59) operaciones_mat -> operacion_mat . operaciones_mat
    (58) operaciones_mat -> . operacion_mat
    (59) operaciones_mat -> . operacion_mat operaciones_mat
    (54) operacion_mat -> . math_oper NUMERO
    (55) operacion_mat -> . math_oper VARIABLE
    (56) operacion_mat -> . signo NUMERO
    (57) operacion_mat -> . signo VARIABLE
    (45) math_oper -> . MAS
    (46) math_oper -> . MENOS
    (47) math_oper -> . MULTIPLICACION
    (48) math_oper -> . DIVISION
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    FINAL_DE_LINEA  reduce using rule 58 (operaciones_mat -> operacion_mat .)
    MAYORQUE        reduce using rule 58 (operaciones_mat -> operacion_mat .)
    MENORQUE        reduce using rule 58 (operaciones_mat -> operacion_mat .)
    MAYORIGUAL      reduce using rule 58 (operaciones_mat -> operacion_mat .)
    MENORIGUAL      reduce using rule 58 (operaciones_mat -> operacion_mat .)
    SAME            reduce using rule 58 (operaciones_mat -> operacion_mat .)
    EQUALS          reduce using rule 58 (operaciones_mat -> operacion_mat .)
    DESIGUALDAD     reduce using rule 58 (operaciones_mat -> operacion_mat .)
    AND             reduce using rule 58 (operaciones_mat -> operacion_mat .)
    OR              reduce using rule 58 (operaciones_mat -> operacion_mat .)
    COMA            reduce using rule 58 (operaciones_mat -> operacion_mat .)
    RPAREN          reduce using rule 58 (operaciones_mat -> operacion_mat .)
    ASIGNACION2     reduce using rule 58 (operaciones_mat -> operacion_mat .)
    MAS             shift and go to state 112
    MENOS           shift and go to state 113
    MULTIPLICACION  shift and go to state 114
    DIVISION        shift and go to state 115

  ! MAS             [ reduce using rule 58 (operaciones_mat -> operacion_mat .) ]
  ! MENOS           [ reduce using rule 58 (operaciones_mat -> operacion_mat .) ]
  ! MULTIPLICACION  [ reduce using rule 58 (operaciones_mat -> operacion_mat .) ]
  ! DIVISION        [ reduce using rule 58 (operaciones_mat -> operacion_mat .) ]

    operacion_mat                  shift and go to state 109
    operaciones_mat                shift and go to state 169
    math_oper                      shift and go to state 110
    signo                          shift and go to state 111
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 110

    (54) operacion_mat -> math_oper . NUMERO
    (55) operacion_mat -> math_oper . VARIABLE

    NUMERO          shift and go to state 170
    VARIABLE        shift and go to state 171


state 111

    (56) operacion_mat -> signo . NUMERO
    (57) operacion_mat -> signo . VARIABLE

    NUMERO          shift and go to state 172
    VARIABLE        shift and go to state 173


state 112

    (45) math_oper -> MAS .
    (41) signo -> MAS .
    (37) signo_mas_menos -> MAS . MENOS
    (38) signo_mas_menos -> MAS . MENOS signo_mas_menos

  ! reduce/reduce conflict for NUMERO resolved using rule 41 (signo -> MAS .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 41 (signo -> MAS .)
    NUMERO          reduce using rule 41 (signo -> MAS .)
    VARIABLE        reduce using rule 41 (signo -> MAS .)
    MENOS           shift and go to state 125

  ! NUMERO          [ reduce using rule 45 (math_oper -> MAS .) ]
  ! VARIABLE        [ reduce using rule 45 (math_oper -> MAS .) ]


state 113

    (46) math_oper -> MENOS .
    (42) signo -> MENOS .
    (39) signo_menos_mas -> MENOS . MAS
    (40) signo_menos_mas -> MENOS . MAS signo_menos_mas

  ! reduce/reduce conflict for NUMERO resolved using rule 42 (signo -> MENOS .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 42 (signo -> MENOS .)
    NUMERO          reduce using rule 42 (signo -> MENOS .)
    VARIABLE        reduce using rule 42 (signo -> MENOS .)
    MAS             shift and go to state 126

  ! NUMERO          [ reduce using rule 46 (math_oper -> MENOS .) ]
  ! VARIABLE        [ reduce using rule 46 (math_oper -> MENOS .) ]


state 114

    (47) math_oper -> MULTIPLICACION .

    NUMERO          reduce using rule 47 (math_oper -> MULTIPLICACION .)
    VARIABLE        reduce using rule 47 (math_oper -> MULTIPLICACION .)


state 115

    (48) math_oper -> DIVISION .

    NUMERO          reduce using rule 48 (math_oper -> DIVISION .)
    VARIABLE        reduce using rule 48 (math_oper -> DIVISION .)


state 116

    (32) string -> string string_concats .
    (26) string_concats -> string_concats . string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 32 (string -> string string_concats .)
    MAYORQUE        reduce using rule 32 (string -> string string_concats .)
    MENORQUE        reduce using rule 32 (string -> string string_concats .)
    MAYORIGUAL      reduce using rule 32 (string -> string string_concats .)
    MENORIGUAL      reduce using rule 32 (string -> string string_concats .)
    SAME            reduce using rule 32 (string -> string string_concats .)
    EQUALS          reduce using rule 32 (string -> string string_concats .)
    DESIGUALDAD     reduce using rule 32 (string -> string string_concats .)
    AND             reduce using rule 32 (string -> string string_concats .)
    OR              reduce using rule 32 (string -> string string_concats .)
    COMA            reduce using rule 32 (string -> string string_concats .)
    RPAREN          reduce using rule 32 (string -> string string_concats .)
    ASIGNACION2     reduce using rule 32 (string -> string string_concats .)
    DOT             shift and go to state 118

  ! DOT             [ reduce using rule 32 (string -> string string_concats .) ]

    string_concat                  shift and go to state 174

state 117

    (25) string_concats -> string_concat .

    DOT             reduce using rule 25 (string_concats -> string_concat .)
    FINAL_DE_LINEA  reduce using rule 25 (string_concats -> string_concat .)
    MAYORQUE        reduce using rule 25 (string_concats -> string_concat .)
    MENORQUE        reduce using rule 25 (string_concats -> string_concat .)
    MAYORIGUAL      reduce using rule 25 (string_concats -> string_concat .)
    MENORIGUAL      reduce using rule 25 (string_concats -> string_concat .)
    SAME            reduce using rule 25 (string_concats -> string_concat .)
    EQUALS          reduce using rule 25 (string_concats -> string_concat .)
    DESIGUALDAD     reduce using rule 25 (string_concats -> string_concat .)
    AND             reduce using rule 25 (string_concats -> string_concat .)
    OR              reduce using rule 25 (string_concats -> string_concat .)
    COMA            reduce using rule 25 (string_concats -> string_concat .)
    RPAREN          reduce using rule 25 (string_concats -> string_concat .)
    ASIGNACION2     reduce using rule 25 (string_concats -> string_concat .)


state 118

    (27) string_concat -> DOT . string
    (28) string_concat -> DOT . VARIABLE
    (29) string_concat -> DOT . func_call
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    VARIABLE        shift and go to state 176
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    IDENTIFIER      shift and go to state 22

    string                         shift and go to state 175
    func_call                      shift and go to state 177

state 119

    (50) math_expr -> signo NUMERO .

    MAS             reduce using rule 50 (math_expr -> signo NUMERO .)
    MENOS           reduce using rule 50 (math_expr -> signo NUMERO .)
    MULTIPLICACION  reduce using rule 50 (math_expr -> signo NUMERO .)
    DIVISION        reduce using rule 50 (math_expr -> signo NUMERO .)
    FINAL_DE_LINEA  reduce using rule 50 (math_expr -> signo NUMERO .)
    MAYORQUE        reduce using rule 50 (math_expr -> signo NUMERO .)
    MENORQUE        reduce using rule 50 (math_expr -> signo NUMERO .)
    MAYORIGUAL      reduce using rule 50 (math_expr -> signo NUMERO .)
    MENORIGUAL      reduce using rule 50 (math_expr -> signo NUMERO .)
    SAME            reduce using rule 50 (math_expr -> signo NUMERO .)
    EQUALS          reduce using rule 50 (math_expr -> signo NUMERO .)
    DESIGUALDAD     reduce using rule 50 (math_expr -> signo NUMERO .)
    AND             reduce using rule 50 (math_expr -> signo NUMERO .)
    OR              reduce using rule 50 (math_expr -> signo NUMERO .)
    COMA            reduce using rule 50 (math_expr -> signo NUMERO .)
    RPAREN          reduce using rule 50 (math_expr -> signo NUMERO .)
    ASIGNACION2     reduce using rule 50 (math_expr -> signo NUMERO .)


state 120

    (52) math_expr -> signo VARIABLE .

    MAS             reduce using rule 52 (math_expr -> signo VARIABLE .)
    MENOS           reduce using rule 52 (math_expr -> signo VARIABLE .)
    MULTIPLICACION  reduce using rule 52 (math_expr -> signo VARIABLE .)
    DIVISION        reduce using rule 52 (math_expr -> signo VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 52 (math_expr -> signo VARIABLE .)
    MAYORQUE        reduce using rule 52 (math_expr -> signo VARIABLE .)
    MENORQUE        reduce using rule 52 (math_expr -> signo VARIABLE .)
    MAYORIGUAL      reduce using rule 52 (math_expr -> signo VARIABLE .)
    MENORIGUAL      reduce using rule 52 (math_expr -> signo VARIABLE .)
    SAME            reduce using rule 52 (math_expr -> signo VARIABLE .)
    EQUALS          reduce using rule 52 (math_expr -> signo VARIABLE .)
    DESIGUALDAD     reduce using rule 52 (math_expr -> signo VARIABLE .)
    AND             reduce using rule 52 (math_expr -> signo VARIABLE .)
    OR              reduce using rule 52 (math_expr -> signo VARIABLE .)
    COMA            reduce using rule 52 (math_expr -> signo VARIABLE .)
    RPAREN          reduce using rule 52 (math_expr -> signo VARIABLE .)
    ASIGNACION2     reduce using rule 52 (math_expr -> signo VARIABLE .)


state 121

    (33) string -> VARIABLE string_concats .
    (26) string_concats -> string_concats . string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 33 (string -> VARIABLE string_concats .)
    MAYORQUE        reduce using rule 33 (string -> VARIABLE string_concats .)
    MENORQUE        reduce using rule 33 (string -> VARIABLE string_concats .)
    MAYORIGUAL      reduce using rule 33 (string -> VARIABLE string_concats .)
    MENORIGUAL      reduce using rule 33 (string -> VARIABLE string_concats .)
    SAME            reduce using rule 33 (string -> VARIABLE string_concats .)
    EQUALS          reduce using rule 33 (string -> VARIABLE string_concats .)
    DESIGUALDAD     reduce using rule 33 (string -> VARIABLE string_concats .)
    AND             reduce using rule 33 (string -> VARIABLE string_concats .)
    OR              reduce using rule 33 (string -> VARIABLE string_concats .)
    COMA            reduce using rule 33 (string -> VARIABLE string_concats .)
    RPAREN          reduce using rule 33 (string -> VARIABLE string_concats .)
    ASIGNACION2     reduce using rule 33 (string -> VARIABLE string_concats .)
    DOT             shift and go to state 118

  ! DOT             [ reduce using rule 33 (string -> VARIABLE string_concats .) ]

    string_concat                  shift and go to state 174

state 122

    (121) var_accs -> VARIABLE ARROW . IDENTIFIER

    IDENTIFIER      shift and go to state 178


state 123

    (86) boolean -> bool_unary_oprs boolean .
    (22) expresion -> boolean .

  ! reduce/reduce conflict for MAYORQUE resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for SAME resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for EQUALS resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for AND resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for OR resolved using rule 22 (expresion -> boolean .)
    FINAL_DE_LINEA  reduce using rule 86 (boolean -> bool_unary_oprs boolean .)
    RPAREN          reduce using rule 86 (boolean -> bool_unary_oprs boolean .)
    COMA            reduce using rule 86 (boolean -> bool_unary_oprs boolean .)
    ASIGNACION2     reduce using rule 86 (boolean -> bool_unary_oprs boolean .)
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)

  ! MAYORQUE        [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! MENORQUE        [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! MAYORIGUAL      [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! MENORIGUAL      [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! SAME            [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! EQUALS          [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! DESIGUALDAD     [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! AND             [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]
  ! OR              [ reduce using rule 86 (boolean -> bool_unary_oprs boolean .) ]


state 124

    (107) array -> ARRAY LPAREN . array_items RPAREN
    (105) array_items -> . array_item
    (106) array_items -> . array_item COMA array_items
    (103) array_item -> . assigncacionArrow
    (104) array_item -> . expresion
    (102) assigncacionArrow -> . expresion ASIGNACION2 expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    array_items                    shift and go to state 179
    array_item                     shift and go to state 180
    assigncacionArrow              shift and go to state 181
    expresion                      shift and go to state 182
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 125

    (37) signo_mas_menos -> MAS MENOS .
    (38) signo_mas_menos -> MAS MENOS . signo_mas_menos
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos

    NUMERO          reduce using rule 37 (signo_mas_menos -> MAS MENOS .)
    VARIABLE        reduce using rule 37 (signo_mas_menos -> MAS MENOS .)
    MAS             shift and go to state 183

    signo_mas_menos                shift and go to state 184

state 126

    (39) signo_menos_mas -> MENOS MAS .
    (40) signo_menos_mas -> MENOS MAS . signo_menos_mas
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    NUMERO          reduce using rule 39 (signo_menos_mas -> MENOS MAS .)
    VARIABLE        reduce using rule 39 (signo_menos_mas -> MENOS MAS .)
    MENOS           shift and go to state 185

    signo_menos_mas                shift and go to state 186

state 127

    (82) negacion -> NEGACION negacion .

    TRUE            reduce using rule 82 (negacion -> NEGACION negacion .)
    FALSE           reduce using rule 82 (negacion -> NEGACION negacion .)
    NUMERO          reduce using rule 82 (negacion -> NEGACION negacion .)
    VARIABLE        reduce using rule 82 (negacion -> NEGACION negacion .)
    STRING1         reduce using rule 82 (negacion -> NEGACION negacion .)
    STRING2         reduce using rule 82 (negacion -> NEGACION negacion .)
    ARRAY           reduce using rule 82 (negacion -> NEGACION negacion .)
    NEGACION        reduce using rule 82 (negacion -> NEGACION negacion .)
    MAS             reduce using rule 82 (negacion -> NEGACION negacion .)
    MENOS           reduce using rule 82 (negacion -> NEGACION negacion .)


state 128

    (122) var_dcl -> VARIABLE ASIGNACION VARIABLE . ARROW IDENTIFIER
    (33) string -> VARIABLE . string_concats
    (51) math_expr -> VARIABLE .
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

    ARROW           shift and go to state 187
    MAS             reduce using rule 51 (math_expr -> VARIABLE .)
    MENOS           reduce using rule 51 (math_expr -> VARIABLE .)
    MULTIPLICACION  reduce using rule 51 (math_expr -> VARIABLE .)
    DIVISION        reduce using rule 51 (math_expr -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 51 (math_expr -> VARIABLE .)
    DOT             shift and go to state 118

    string_concats                 shift and go to state 121
    string_concat                  shift and go to state 117

state 129

    (34) var_dcl -> VARIABLE ASIGNACION string .
    (32) string -> string . string_concats
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

    FINAL_DE_LINEA  reduce using rule 34 (var_dcl -> VARIABLE ASIGNACION string .)
    DOT             shift and go to state 118

    string_concats                 shift and go to state 116
    string_concat                  shift and go to state 117

state 130

    (60) var_dcl -> VARIABLE ASIGNACION math_expr .
    (53) math_expr -> math_expr . operaciones_mat
    (58) operaciones_mat -> . operacion_mat
    (59) operaciones_mat -> . operacion_mat operaciones_mat
    (54) operacion_mat -> . math_oper NUMERO
    (55) operacion_mat -> . math_oper VARIABLE
    (56) operacion_mat -> . signo NUMERO
    (57) operacion_mat -> . signo VARIABLE
    (45) math_oper -> . MAS
    (46) math_oper -> . MENOS
    (47) math_oper -> . MULTIPLICACION
    (48) math_oper -> . DIVISION
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 60 (var_dcl -> VARIABLE ASIGNACION math_expr .)
    MAS             shift and go to state 112
    MENOS           shift and go to state 113
    MULTIPLICACION  shift and go to state 114
    DIVISION        shift and go to state 115

    operaciones_mat                shift and go to state 108
    operacion_mat                  shift and go to state 109
    math_oper                      shift and go to state 110
    signo                          shift and go to state 111
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 131

    (108) var_dcl -> VARIABLE ASIGNACION array .

    FINAL_DE_LINEA  reduce using rule 108 (var_dcl -> VARIABLE ASIGNACION array .)


state 132

    (136) var_dcl -> VARIABLE ASIGNACION NEW . func_call
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 22
    VARIABLE        shift and go to state 133

    func_call                      shift and go to state 188

state 133

    (123) func_call -> VARIABLE . ARROW func_call

    ARROW           shift and go to state 189


state 134

    (120) var_modi -> VARIABLE ARROW IDENTIFIER . ASIGNACION expresion
    (117) func_call -> IDENTIFIER . LPAREN RPAREN
    (118) func_call -> IDENTIFIER . LPAREN values RPAREN

    ASIGNACION      shift and go to state 190
    LPAREN          shift and go to state 42


state 135

    (123) func_call -> VARIABLE ARROW func_call .

    FINAL_DE_LINEA  reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    DOT             reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    MAYORQUE        reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    MENORQUE        reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    MAYORIGUAL      reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    MENORIGUAL      reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    SAME            reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    EQUALS          reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    DESIGUALDAD     reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    AND             reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    OR              reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    COMA            reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    RPAREN          reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)
    ASIGNACION2     reduce using rule 123 (func_call -> VARIABLE ARROW func_call .)


state 136

    (36) var_modi -> VARIABLE CONCAT_ASIG VARIABLE .
    (33) string -> VARIABLE . string_concats
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

    FINAL_DE_LINEA  reduce using rule 36 (var_modi -> VARIABLE CONCAT_ASIG VARIABLE .)
    RPAREN          reduce using rule 36 (var_modi -> VARIABLE CONCAT_ASIG VARIABLE .)
    DOT             shift and go to state 118

    string_concats                 shift and go to state 121
    string_concat                  shift and go to state 117

state 137

    (35) var_modi -> VARIABLE CONCAT_ASIG string .
    (32) string -> string . string_concats
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

    FINAL_DE_LINEA  reduce using rule 35 (var_modi -> VARIABLE CONCAT_ASIG string .)
    RPAREN          reduce using rule 35 (var_modi -> VARIABLE CONCAT_ASIG string .)
    DOT             shift and go to state 118

    string_concats                 shift and go to state 116
    string_concat                  shift and go to state 117

state 138

    (51) math_expr -> VARIABLE .

    MAS             reduce using rule 51 (math_expr -> VARIABLE .)
    MENOS           reduce using rule 51 (math_expr -> VARIABLE .)
    MULTIPLICACION  reduce using rule 51 (math_expr -> VARIABLE .)
    DIVISION        reduce using rule 51 (math_expr -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 51 (math_expr -> VARIABLE .)
    RPAREN          reduce using rule 51 (math_expr -> VARIABLE .)


state 139

    (63) var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr .
    (53) math_expr -> math_expr . operaciones_mat
    (58) operaciones_mat -> . operacion_mat
    (59) operaciones_mat -> . operacion_mat operaciones_mat
    (54) operacion_mat -> . math_oper NUMERO
    (55) operacion_mat -> . math_oper VARIABLE
    (56) operacion_mat -> . signo NUMERO
    (57) operacion_mat -> . signo VARIABLE
    (45) math_oper -> . MAS
    (46) math_oper -> . MENOS
    (47) math_oper -> . MULTIPLICACION
    (48) math_oper -> . DIVISION
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 63 (var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr .)
    RPAREN          reduce using rule 63 (var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr .)
    MAS             shift and go to state 112
    MENOS           shift and go to state 113
    MULTIPLICACION  shift and go to state 114
    DIVISION        shift and go to state 115

    operaciones_mat                shift and go to state 108
    operacion_mat                  shift and go to state 109
    math_oper                      shift and go to state 110
    signo                          shift and go to state 111
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 140

    (64) var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr .
    (53) math_expr -> math_expr . operaciones_mat
    (58) operaciones_mat -> . operacion_mat
    (59) operaciones_mat -> . operacion_mat operaciones_mat
    (54) operacion_mat -> . math_oper NUMERO
    (55) operacion_mat -> . math_oper VARIABLE
    (56) operacion_mat -> . signo NUMERO
    (57) operacion_mat -> . signo VARIABLE
    (45) math_oper -> . MAS
    (46) math_oper -> . MENOS
    (47) math_oper -> . MULTIPLICACION
    (48) math_oper -> . DIVISION
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 64 (var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr .)
    RPAREN          reduce using rule 64 (var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr .)
    MAS             shift and go to state 112
    MENOS           shift and go to state 113
    MULTIPLICACION  shift and go to state 114
    DIVISION        shift and go to state 115

    operaciones_mat                shift and go to state 108
    operacion_mat                  shift and go to state 109
    math_oper                      shift and go to state 110
    signo                          shift and go to state 111
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 141

    (119) var_modi -> THIS ARROW IDENTIFIER . ASIGNACION expresion

    ASIGNACION      shift and go to state 191


state 142

    (87) main_if_statement -> IF LPAREN boolean . RPAREN
    (22) expresion -> boolean .

    RPAREN          shift and go to state 192
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 143

    (116) func -> FUNCTION IDENTIFIER args . scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 193

state 144

    (111) args -> LPAREN . RPAREN
    (112) args -> LPAREN . arguments RPAREN
    (109) arguments -> . VARIABLE
    (110) arguments -> . VARIABLE COMA arguments

    RPAREN          shift and go to state 194
    VARIABLE        shift and go to state 196

    arguments                      shift and go to state 195

state 145

    (66) if_statement -> main_if_statement scope else scope .

    PREGUNTA        reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    FOR             reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    WHILE           reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    CLASS           reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    COMENTARIO      reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    ECHO            reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    VARIABLE        reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    THIS            reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    IF              reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    FUNCTION        reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    IDENTIFIER      reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    RLLAVE          reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    BREAK           reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    CONTINUE        reduce using rule 66 (if_statement -> main_if_statement scope else scope .)
    RETURN          reduce using rule 66 (if_statement -> main_if_statement scope else scope .)


state 146

    (68) if_statement -> main_if_statement scope many_elseif else . scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 197

state 147

    (69) many_elseif -> elseif_statement scope .
    (70) many_elseif -> elseif_statement scope . many_elseif
    (69) many_elseif -> . elseif_statement scope
    (70) many_elseif -> . elseif_statement scope many_elseif
    (88) elseif_statement -> . ELSEIF LPAREN boolean RPAREN

    ELSE            reduce using rule 69 (many_elseif -> elseif_statement scope .)
    PREGUNTA        reduce using rule 69 (many_elseif -> elseif_statement scope .)
    FOR             reduce using rule 69 (many_elseif -> elseif_statement scope .)
    WHILE           reduce using rule 69 (many_elseif -> elseif_statement scope .)
    CLASS           reduce using rule 69 (many_elseif -> elseif_statement scope .)
    COMENTARIO      reduce using rule 69 (many_elseif -> elseif_statement scope .)
    ECHO            reduce using rule 69 (many_elseif -> elseif_statement scope .)
    VARIABLE        reduce using rule 69 (many_elseif -> elseif_statement scope .)
    THIS            reduce using rule 69 (many_elseif -> elseif_statement scope .)
    IF              reduce using rule 69 (many_elseif -> elseif_statement scope .)
    FUNCTION        reduce using rule 69 (many_elseif -> elseif_statement scope .)
    IDENTIFIER      reduce using rule 69 (many_elseif -> elseif_statement scope .)
    RLLAVE          reduce using rule 69 (many_elseif -> elseif_statement scope .)
    BREAK           reduce using rule 69 (many_elseif -> elseif_statement scope .)
    CONTINUE        reduce using rule 69 (many_elseif -> elseif_statement scope .)
    RETURN          reduce using rule 69 (many_elseif -> elseif_statement scope .)
    ELSEIF          shift and go to state 81

    elseif_statement               shift and go to state 80
    many_elseif                    shift and go to state 198

state 148

    (88) elseif_statement -> ELSEIF LPAREN . boolean RPAREN
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (80) bool_unary_oprs -> . negacion
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    ARRAY           shift and go to state 58
    NEGACION        shift and go to state 64
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    boolean                        shift and go to state 199
    expresion                      shift and go to state 91
    bool_unary_oprs                shift and go to state 57
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    negacion                       shift and go to state 63
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 149

    (90) scope -> LLLAVE statements RLLAVE .

    ELSE            reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    ELSEIF          reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    PREGUNTA        reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    FOR             reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    WHILE           reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    CLASS           reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    COMENTARIO      reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    ECHO            reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    VARIABLE        reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    THIS            reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    IF              reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    FUNCTION        reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    IDENTIFIER      reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    RLLAVE          reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    BREAK           reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    CONTINUE        reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    RETURN          reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    PUBLIC          reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    PRIVATE         reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)
    PROTECTED       reduce using rule 90 (scope -> LLLAVE statements RLLAVE .)


state 150

    (92) scope -> LLLAVE statements BREAK . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 200


state 151

    (94) scope -> LLLAVE statements CONTINUE . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 201


state 152

    (96) scope -> LLLAVE statements return . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 202


state 153

    (93) scope -> LLLAVE BREAK FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 203


state 154

    (95) scope -> LLLAVE CONTINUE FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 204


state 155

    (97) scope -> LLLAVE return FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 205


state 156

    (99) return -> RETURN expresion .
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  reduce using rule 99 (return -> RETURN expresion .)
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 157

    (101) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA . boolean FINAL_DE_LINEA var_modi RPAREN scope
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (80) bool_unary_oprs -> . negacion
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    ARRAY           shift and go to state 58
    NEGACION        shift and go to state 64
    MAS             shift and go to state 59
    MENOS           shift and go to state 60

    boolean                        shift and go to state 206
    expresion                      shift and go to state 91
    bool_unary_oprs                shift and go to state 57
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    negacion                       shift and go to state 63
    signo                          shift and go to state 51
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62

state 158

    (100) while_lopp -> WHILE LPAREN boolean RPAREN . scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 207

state 159

    (127) class -> CLASS IDENTIFIER LLLAVE mem_vars . mem_funcs RLLAVE
    (134) mem_funcs -> . mem_func
    (135) mem_funcs -> . mem_func mem_funcs
    (132) mem_func -> . modf_acso FUNCTION IDENTIFIER args scope
    (133) mem_func -> . FUNCTION IDENTIFIER args scope
    (124) modf_acso -> . PUBLIC
    (125) modf_acso -> . PRIVATE
    (126) modf_acso -> . PROTECTED

    FUNCTION        shift and go to state 211
    PUBLIC          shift and go to state 163
    PRIVATE         shift and go to state 164
    PROTECTED       shift and go to state 165

    mem_funcs                      shift and go to state 208
    mem_func                       shift and go to state 209
    modf_acso                      shift and go to state 210

state 160

    (130) mem_vars -> mem_var_dcl .
    (131) mem_vars -> mem_var_dcl . mem_vars
    (130) mem_vars -> . mem_var_dcl
    (131) mem_vars -> . mem_var_dcl mem_vars
    (128) mem_var_dcl -> . modf_acso VARIABLE FINAL_DE_LINEA
    (129) mem_var_dcl -> . COMENTARIO
    (124) modf_acso -> . PUBLIC
    (125) modf_acso -> . PRIVATE
    (126) modf_acso -> . PROTECTED

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
    FUNCTION        reduce using rule 130 (mem_vars -> mem_var_dcl .)
    COMENTARIO      shift and go to state 162
    PUBLIC          shift and go to state 163
    PRIVATE         shift and go to state 164
    PROTECTED       shift and go to state 165

  ! PUBLIC          [ reduce using rule 130 (mem_vars -> mem_var_dcl .) ]
  ! PRIVATE         [ reduce using rule 130 (mem_vars -> mem_var_dcl .) ]
  ! PROTECTED       [ reduce using rule 130 (mem_vars -> mem_var_dcl .) ]

    mem_var_dcl                    shift and go to state 160
    mem_vars                       shift and go to state 212
    modf_acso                      shift and go to state 161

state 161

    (128) mem_var_dcl -> modf_acso . VARIABLE FINAL_DE_LINEA

    VARIABLE        shift and go to state 213


state 162

    (129) mem_var_dcl -> COMENTARIO .

    COMENTARIO      reduce using rule 129 (mem_var_dcl -> COMENTARIO .)
    PUBLIC          reduce using rule 129 (mem_var_dcl -> COMENTARIO .)
    PRIVATE         reduce using rule 129 (mem_var_dcl -> COMENTARIO .)
    PROTECTED       reduce using rule 129 (mem_var_dcl -> COMENTARIO .)
    FUNCTION        reduce using rule 129 (mem_var_dcl -> COMENTARIO .)


state 163

    (124) modf_acso -> PUBLIC .

    VARIABLE        reduce using rule 124 (modf_acso -> PUBLIC .)
    FUNCTION        reduce using rule 124 (modf_acso -> PUBLIC .)


state 164

    (125) modf_acso -> PRIVATE .

    VARIABLE        reduce using rule 125 (modf_acso -> PRIVATE .)
    FUNCTION        reduce using rule 125 (modf_acso -> PRIVATE .)


state 165

    (126) modf_acso -> PROTECTED .

    VARIABLE        reduce using rule 126 (modf_acso -> PROTECTED .)
    FUNCTION        reduce using rule 126 (modf_acso -> PROTECTED .)


state 166

    (118) func_call -> IDENTIFIER LPAREN values RPAREN .

    FINAL_DE_LINEA  reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    DOT             reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MAYORQUE        reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MENORQUE        reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MAYORIGUAL      reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MENORIGUAL      reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    SAME            reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    EQUALS          reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    DESIGUALDAD     reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    AND             reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    OR              reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    COMA            reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    RPAREN          reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    ASIGNACION2     reduce using rule 118 (func_call -> IDENTIFIER LPAREN values RPAREN .)


state 167

    (115) values -> value COMA . values
    (114) values -> . value
    (115) values -> . value COMA values
    (113) value -> . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    value                          shift and go to state 95
    values                         shift and go to state 214
    expresion                      shift and go to state 96
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 168

    (85) boolean -> expresion comp_bin_oprs expresion .
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    FINAL_DE_LINEA  reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .)
    RPAREN          reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .)
    COMA            reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .)
    ASIGNACION2     reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .)
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

  ! MAYORQUE        [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! MENORQUE        [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! MENORIGUAL      [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! SAME            [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! EQUALS          [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! AND             [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! OR              [ reduce using rule 85 (boolean -> expresion comp_bin_oprs expresion .) ]

    comp_bin_oprs                  shift and go to state 98

state 169

    (59) operaciones_mat -> operacion_mat operaciones_mat .

    MAS             reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    MENOS           reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    MULTIPLICACION  reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    DIVISION        reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    FINAL_DE_LINEA  reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    MAYORQUE        reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    MENORQUE        reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    MAYORIGUAL      reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    MENORIGUAL      reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    SAME            reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    EQUALS          reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    DESIGUALDAD     reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    AND             reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    OR              reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    COMA            reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    RPAREN          reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)
    ASIGNACION2     reduce using rule 59 (operaciones_mat -> operacion_mat operaciones_mat .)


state 170

    (54) operacion_mat -> math_oper NUMERO .

    MAS             reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    MENOS           reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    MULTIPLICACION  reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    DIVISION        reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    FINAL_DE_LINEA  reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    MAYORQUE        reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    MENORQUE        reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    MAYORIGUAL      reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    MENORIGUAL      reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    SAME            reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    EQUALS          reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    DESIGUALDAD     reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    AND             reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    OR              reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    COMA            reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    RPAREN          reduce using rule 54 (operacion_mat -> math_oper NUMERO .)
    ASIGNACION2     reduce using rule 54 (operacion_mat -> math_oper NUMERO .)


state 171

    (55) operacion_mat -> math_oper VARIABLE .

    MAS             reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    MENOS           reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    MULTIPLICACION  reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    DIVISION        reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    MAYORQUE        reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    MENORQUE        reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    MAYORIGUAL      reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    MENORIGUAL      reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    SAME            reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    EQUALS          reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    DESIGUALDAD     reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    AND             reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    OR              reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    COMA            reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    RPAREN          reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)
    ASIGNACION2     reduce using rule 55 (operacion_mat -> math_oper VARIABLE .)


state 172

    (56) operacion_mat -> signo NUMERO .

    MAS             reduce using rule 56 (operacion_mat -> signo NUMERO .)
    MENOS           reduce using rule 56 (operacion_mat -> signo NUMERO .)
    MULTIPLICACION  reduce using rule 56 (operacion_mat -> signo NUMERO .)
    DIVISION        reduce using rule 56 (operacion_mat -> signo NUMERO .)
    FINAL_DE_LINEA  reduce using rule 56 (operacion_mat -> signo NUMERO .)
    MAYORQUE        reduce using rule 56 (operacion_mat -> signo NUMERO .)
    MENORQUE        reduce using rule 56 (operacion_mat -> signo NUMERO .)
    MAYORIGUAL      reduce using rule 56 (operacion_mat -> signo NUMERO .)
    MENORIGUAL      reduce using rule 56 (operacion_mat -> signo NUMERO .)
    SAME            reduce using rule 56 (operacion_mat -> signo NUMERO .)
    EQUALS          reduce using rule 56 (operacion_mat -> signo NUMERO .)
    DESIGUALDAD     reduce using rule 56 (operacion_mat -> signo NUMERO .)
    AND             reduce using rule 56 (operacion_mat -> signo NUMERO .)
    OR              reduce using rule 56 (operacion_mat -> signo NUMERO .)
    COMA            reduce using rule 56 (operacion_mat -> signo NUMERO .)
    RPAREN          reduce using rule 56 (operacion_mat -> signo NUMERO .)
    ASIGNACION2     reduce using rule 56 (operacion_mat -> signo NUMERO .)


state 173

    (57) operacion_mat -> signo VARIABLE .

    MAS             reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    MENOS           reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    MULTIPLICACION  reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    DIVISION        reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    MAYORQUE        reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    MENORQUE        reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    MAYORIGUAL      reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    MENORIGUAL      reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    SAME            reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    EQUALS          reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    DESIGUALDAD     reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    AND             reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    OR              reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    COMA            reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    RPAREN          reduce using rule 57 (operacion_mat -> signo VARIABLE .)
    ASIGNACION2     reduce using rule 57 (operacion_mat -> signo VARIABLE .)


state 174

    (26) string_concats -> string_concats string_concat .

    DOT             reduce using rule 26 (string_concats -> string_concats string_concat .)
    FINAL_DE_LINEA  reduce using rule 26 (string_concats -> string_concats string_concat .)
    MAYORQUE        reduce using rule 26 (string_concats -> string_concats string_concat .)
    MENORQUE        reduce using rule 26 (string_concats -> string_concats string_concat .)
    MAYORIGUAL      reduce using rule 26 (string_concats -> string_concats string_concat .)
    MENORIGUAL      reduce using rule 26 (string_concats -> string_concats string_concat .)
    SAME            reduce using rule 26 (string_concats -> string_concats string_concat .)
    EQUALS          reduce using rule 26 (string_concats -> string_concats string_concat .)
    DESIGUALDAD     reduce using rule 26 (string_concats -> string_concats string_concat .)
    AND             reduce using rule 26 (string_concats -> string_concats string_concat .)
    OR              reduce using rule 26 (string_concats -> string_concats string_concat .)
    COMA            reduce using rule 26 (string_concats -> string_concats string_concat .)
    RPAREN          reduce using rule 26 (string_concats -> string_concats string_concat .)
    ASIGNACION2     reduce using rule 26 (string_concats -> string_concats string_concat .)


state 175

    (27) string_concat -> DOT string .
    (32) string -> string . string_concats
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 27 (string_concat -> DOT string .)
    MAYORQUE        reduce using rule 27 (string_concat -> DOT string .)
    MENORQUE        reduce using rule 27 (string_concat -> DOT string .)
    MAYORIGUAL      reduce using rule 27 (string_concat -> DOT string .)
    MENORIGUAL      reduce using rule 27 (string_concat -> DOT string .)
    SAME            reduce using rule 27 (string_concat -> DOT string .)
    EQUALS          reduce using rule 27 (string_concat -> DOT string .)
    DESIGUALDAD     reduce using rule 27 (string_concat -> DOT string .)
    AND             reduce using rule 27 (string_concat -> DOT string .)
    OR              reduce using rule 27 (string_concat -> DOT string .)
    COMA            reduce using rule 27 (string_concat -> DOT string .)
    RPAREN          reduce using rule 27 (string_concat -> DOT string .)
    ASIGNACION2     reduce using rule 27 (string_concat -> DOT string .)
    DOT             shift and go to state 118

  ! DOT             [ reduce using rule 27 (string_concat -> DOT string .) ]

    string_concats                 shift and go to state 116
    string_concat                  shift and go to state 117

state 176

    (28) string_concat -> DOT VARIABLE .
    (33) string -> VARIABLE . string_concats
    (123) func_call -> VARIABLE . ARROW func_call
    (25) string_concats -> . string_concat
    (26) string_concats -> . string_concats string_concat
    (27) string_concat -> . DOT string
    (28) string_concat -> . DOT VARIABLE
    (29) string_concat -> . DOT func_call

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 28 (string_concat -> DOT VARIABLE .)
    MAYORQUE        reduce using rule 28 (string_concat -> DOT VARIABLE .)
    MENORQUE        reduce using rule 28 (string_concat -> DOT VARIABLE .)
    MAYORIGUAL      reduce using rule 28 (string_concat -> DOT VARIABLE .)
    MENORIGUAL      reduce using rule 28 (string_concat -> DOT VARIABLE .)
    SAME            reduce using rule 28 (string_concat -> DOT VARIABLE .)
    EQUALS          reduce using rule 28 (string_concat -> DOT VARIABLE .)
    DESIGUALDAD     reduce using rule 28 (string_concat -> DOT VARIABLE .)
    AND             reduce using rule 28 (string_concat -> DOT VARIABLE .)
    OR              reduce using rule 28 (string_concat -> DOT VARIABLE .)
    COMA            reduce using rule 28 (string_concat -> DOT VARIABLE .)
    RPAREN          reduce using rule 28 (string_concat -> DOT VARIABLE .)
    ASIGNACION2     reduce using rule 28 (string_concat -> DOT VARIABLE .)
    ARROW           shift and go to state 189
    DOT             shift and go to state 118

  ! DOT             [ reduce using rule 28 (string_concat -> DOT VARIABLE .) ]

    string_concats                 shift and go to state 121
    string_concat                  shift and go to state 117

state 177

    (29) string_concat -> DOT func_call .

    DOT             reduce using rule 29 (string_concat -> DOT func_call .)
    FINAL_DE_LINEA  reduce using rule 29 (string_concat -> DOT func_call .)
    MAYORQUE        reduce using rule 29 (string_concat -> DOT func_call .)
    MENORQUE        reduce using rule 29 (string_concat -> DOT func_call .)
    MAYORIGUAL      reduce using rule 29 (string_concat -> DOT func_call .)
    MENORIGUAL      reduce using rule 29 (string_concat -> DOT func_call .)
    SAME            reduce using rule 29 (string_concat -> DOT func_call .)
    EQUALS          reduce using rule 29 (string_concat -> DOT func_call .)
    DESIGUALDAD     reduce using rule 29 (string_concat -> DOT func_call .)
    AND             reduce using rule 29 (string_concat -> DOT func_call .)
    OR              reduce using rule 29 (string_concat -> DOT func_call .)
    COMA            reduce using rule 29 (string_concat -> DOT func_call .)
    RPAREN          reduce using rule 29 (string_concat -> DOT func_call .)
    ASIGNACION2     reduce using rule 29 (string_concat -> DOT func_call .)


state 178

    (121) var_accs -> VARIABLE ARROW IDENTIFIER .

    FINAL_DE_LINEA  reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MAYORQUE        reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENORQUE        reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MAYORIGUAL      reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENORIGUAL      reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    SAME            reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    EQUALS          reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    DESIGUALDAD     reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    AND             reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    OR              reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    COMA            reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    RPAREN          reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    ASIGNACION2     reduce using rule 121 (var_accs -> VARIABLE ARROW IDENTIFIER .)


state 179

    (107) array -> ARRAY LPAREN array_items . RPAREN

    RPAREN          shift and go to state 215


state 180

    (105) array_items -> array_item .
    (106) array_items -> array_item . COMA array_items

    RPAREN          reduce using rule 105 (array_items -> array_item .)
    COMA            shift and go to state 216


state 181

    (103) array_item -> assigncacionArrow .

    COMA            reduce using rule 103 (array_item -> assigncacionArrow .)
    RPAREN          reduce using rule 103 (array_item -> assigncacionArrow .)


state 182

    (104) array_item -> expresion .
    (102) assigncacionArrow -> expresion . ASIGNACION2 expresion
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    COMA            reduce using rule 104 (array_item -> expresion .)
    RPAREN          reduce using rule 104 (array_item -> expresion .)
    ASIGNACION2     shift and go to state 217
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 183

    (37) signo_mas_menos -> MAS . MENOS
    (38) signo_mas_menos -> MAS . MENOS signo_mas_menos

    MENOS           shift and go to state 125


state 184

    (38) signo_mas_menos -> MAS MENOS signo_mas_menos .

    NUMERO          reduce using rule 38 (signo_mas_menos -> MAS MENOS signo_mas_menos .)
    VARIABLE        reduce using rule 38 (signo_mas_menos -> MAS MENOS signo_mas_menos .)


state 185

    (39) signo_menos_mas -> MENOS . MAS
    (40) signo_menos_mas -> MENOS . MAS signo_menos_mas

    MAS             shift and go to state 126


state 186

    (40) signo_menos_mas -> MENOS MAS signo_menos_mas .

    NUMERO          reduce using rule 40 (signo_menos_mas -> MENOS MAS signo_menos_mas .)
    VARIABLE        reduce using rule 40 (signo_menos_mas -> MENOS MAS signo_menos_mas .)


state 187

    (122) var_dcl -> VARIABLE ASIGNACION VARIABLE ARROW . IDENTIFIER

    IDENTIFIER      shift and go to state 218


state 188

    (136) var_dcl -> VARIABLE ASIGNACION NEW func_call .

    FINAL_DE_LINEA  reduce using rule 136 (var_dcl -> VARIABLE ASIGNACION NEW func_call .)


state 189

    (123) func_call -> VARIABLE ARROW . func_call
    (117) func_call -> . IDENTIFIER LPAREN RPAREN
    (118) func_call -> . IDENTIFIER LPAREN values RPAREN
    (123) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 22
    VARIABLE        shift and go to state 133

    func_call                      shift and go to state 135

state 190

    (120) var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    expresion                      shift and go to state 219
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 191

    (119) var_modi -> THIS ARROW IDENTIFIER ASIGNACION . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    expresion                      shift and go to state 220
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 192

    (87) main_if_statement -> IF LPAREN boolean RPAREN .

    LLLAVE          reduce using rule 87 (main_if_statement -> IF LPAREN boolean RPAREN .)


state 193

    (116) func -> FUNCTION IDENTIFIER args scope .

    PREGUNTA        reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    FOR             reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    WHILE           reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    CLASS           reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    COMENTARIO      reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    ECHO            reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    VARIABLE        reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    THIS            reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    IF              reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    FUNCTION        reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    IDENTIFIER      reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    RLLAVE          reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    BREAK           reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    CONTINUE        reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)
    RETURN          reduce using rule 116 (func -> FUNCTION IDENTIFIER args scope .)


state 194

    (111) args -> LPAREN RPAREN .

    LLLAVE          reduce using rule 111 (args -> LPAREN RPAREN .)


state 195

    (112) args -> LPAREN arguments . RPAREN

    RPAREN          shift and go to state 221


state 196

    (109) arguments -> VARIABLE .
    (110) arguments -> VARIABLE . COMA arguments

    RPAREN          reduce using rule 109 (arguments -> VARIABLE .)
    COMA            shift and go to state 222


state 197

    (68) if_statement -> main_if_statement scope many_elseif else scope .

    PREGUNTA        reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    FOR             reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    WHILE           reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    CLASS           reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    COMENTARIO      reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    ECHO            reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    VARIABLE        reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    THIS            reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    IF              reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    FUNCTION        reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    IDENTIFIER      reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    RLLAVE          reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    BREAK           reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    CONTINUE        reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)
    RETURN          reduce using rule 68 (if_statement -> main_if_statement scope many_elseif else scope .)


state 198

    (70) many_elseif -> elseif_statement scope many_elseif .

    ELSE            reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    PREGUNTA        reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    FOR             reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    WHILE           reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    CLASS           reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    COMENTARIO      reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    ECHO            reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    VARIABLE        reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    THIS            reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    IF              reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    FUNCTION        reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    IDENTIFIER      reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    RLLAVE          reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    BREAK           reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    CONTINUE        reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)
    RETURN          reduce using rule 70 (many_elseif -> elseif_statement scope many_elseif .)


state 199

    (88) elseif_statement -> ELSEIF LPAREN boolean . RPAREN
    (22) expresion -> boolean .

    RPAREN          shift and go to state 223
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 200

    (92) scope -> LLLAVE statements BREAK FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 224


state 201

    (94) scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 225


state 202

    (96) scope -> LLLAVE statements return FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 226


state 203

    (93) scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 93 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)


state 204

    (95) scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 95 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)


state 205

    (97) scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 97 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)


state 206

    (101) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean . FINAL_DE_LINEA var_modi RPAREN scope
    (22) expresion -> boolean .

    FINAL_DE_LINEA  shift and go to state 227
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 207

    (100) while_lopp -> WHILE LPAREN boolean RPAREN scope .

    PREGUNTA        reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    FOR             reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    WHILE           reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    CLASS           reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    COMENTARIO      reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    ECHO            reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    VARIABLE        reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    THIS            reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    IF              reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    FUNCTION        reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    IDENTIFIER      reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    RLLAVE          reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    BREAK           reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    CONTINUE        reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    RETURN          reduce using rule 100 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)


state 208

    (127) class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs . RLLAVE

    RLLAVE          shift and go to state 228


state 209

    (134) mem_funcs -> mem_func .
    (135) mem_funcs -> mem_func . mem_funcs
    (134) mem_funcs -> . mem_func
    (135) mem_funcs -> . mem_func mem_funcs
    (132) mem_func -> . modf_acso FUNCTION IDENTIFIER args scope
    (133) mem_func -> . FUNCTION IDENTIFIER args scope
    (124) modf_acso -> . PUBLIC
    (125) modf_acso -> . PRIVATE
    (126) modf_acso -> . PROTECTED

    RLLAVE          reduce using rule 134 (mem_funcs -> mem_func .)
    FUNCTION        shift and go to state 211
    PUBLIC          shift and go to state 163
    PRIVATE         shift and go to state 164
    PROTECTED       shift and go to state 165

    mem_func                       shift and go to state 209
    mem_funcs                      shift and go to state 229
    modf_acso                      shift and go to state 210

state 210

    (132) mem_func -> modf_acso . FUNCTION IDENTIFIER args scope

    FUNCTION        shift and go to state 230


state 211

    (133) mem_func -> FUNCTION . IDENTIFIER args scope

    IDENTIFIER      shift and go to state 231


state 212

    (131) mem_vars -> mem_var_dcl mem_vars .

    FUNCTION        reduce using rule 131 (mem_vars -> mem_var_dcl mem_vars .)
    PUBLIC          reduce using rule 131 (mem_vars -> mem_var_dcl mem_vars .)
    PRIVATE         reduce using rule 131 (mem_vars -> mem_var_dcl mem_vars .)
    PROTECTED       reduce using rule 131 (mem_vars -> mem_var_dcl mem_vars .)


state 213

    (128) mem_var_dcl -> modf_acso VARIABLE . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 232


state 214

    (115) values -> value COMA values .

    RPAREN          reduce using rule 115 (values -> value COMA values .)


state 215

    (107) array -> ARRAY LPAREN array_items RPAREN .

    FINAL_DE_LINEA  reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    MAYORQUE        reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    MENORQUE        reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    MAYORIGUAL      reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    MENORIGUAL      reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    SAME            reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    EQUALS          reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    DESIGUALDAD     reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    AND             reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    OR              reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    COMA            reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    RPAREN          reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)
    ASIGNACION2     reduce using rule 107 (array -> ARRAY LPAREN array_items RPAREN .)


state 216

    (106) array_items -> array_item COMA . array_items
    (105) array_items -> . array_item
    (106) array_items -> . array_item COMA array_items
    (103) array_item -> . assigncacionArrow
    (104) array_item -> . expresion
    (102) assigncacionArrow -> . expresion ASIGNACION2 expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    array_item                     shift and go to state 180
    array_items                    shift and go to state 233
    assigncacionArrow              shift and go to state 181
    expresion                      shift and go to state 182
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 217

    (102) assigncacionArrow -> expresion ASIGNACION2 . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (49) math_expr -> . NUMERO
    (50) math_expr -> . signo NUMERO
    (51) math_expr -> . VARIABLE
    (52) math_expr -> . signo VARIABLE
    (53) math_expr -> . math_expr operaciones_mat
    (30) string -> . STRING1
    (31) string -> . STRING2
    (32) string -> . string string_concats
    (33) string -> . VARIABLE string_concats
    (83) boolean -> . TRUE
    (84) boolean -> . FALSE
    (85) boolean -> . expresion comp_bin_oprs expresion
    (86) boolean -> . bool_unary_oprs boolean
    (107) array -> . ARRAY LPAREN array_items RPAREN
    (121) var_accs -> . VARIABLE ARROW IDENTIFIER
    (41) signo -> . MAS
    (42) signo -> . MENOS
    (43) signo -> . signo_mas_menos
    (44) signo -> . signo_menos_mas
    (80) bool_unary_oprs -> . negacion
    (37) signo_mas_menos -> . MAS MENOS
    (38) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (39) signo_menos_mas -> . MENOS MAS
    (40) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (81) negacion -> . NEGACION
    (82) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 50
    VARIABLE        shift and go to state 52
    STRING1         shift and go to state 53
    STRING2         shift and go to state 54
    TRUE            shift and go to state 55
    FALSE           shift and go to state 56
    ARRAY           shift and go to state 58
    MAS             shift and go to state 59
    MENOS           shift and go to state 60
    NEGACION        shift and go to state 64

    expresion                      shift and go to state 234
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    signo                          shift and go to state 51
    bool_unary_oprs                shift and go to state 57
    signo_mas_menos                shift and go to state 61
    signo_menos_mas                shift and go to state 62
    negacion                       shift and go to state 63

state 218

    (122) var_dcl -> VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER .

    FINAL_DE_LINEA  reduce using rule 122 (var_dcl -> VARIABLE ASIGNACION VARIABLE ARROW IDENTIFIER .)


state 219

    (120) var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion .
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  reduce using rule 120 (var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion .)
    RPAREN          reduce using rule 120 (var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion .)
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 220

    (119) var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion .
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  reduce using rule 119 (var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion .)
    RPAREN          reduce using rule 119 (var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion .)
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 221

    (112) args -> LPAREN arguments RPAREN .

    LLLAVE          reduce using rule 112 (args -> LPAREN arguments RPAREN .)


state 222

    (110) arguments -> VARIABLE COMA . arguments
    (109) arguments -> . VARIABLE
    (110) arguments -> . VARIABLE COMA arguments

    VARIABLE        shift and go to state 196

    arguments                      shift and go to state 235

state 223

    (88) elseif_statement -> ELSEIF LPAREN boolean RPAREN .

    LLLAVE          reduce using rule 88 (elseif_statement -> ELSEIF LPAREN boolean RPAREN .)


state 224

    (92) scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 92 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)


state 225

    (94) scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 94 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)


state 226

    (96) scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 96 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)


state 227

    (101) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA . var_modi RPAREN scope
    (35) var_modi -> . VARIABLE CONCAT_ASIG string
    (36) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (61) var_modi -> . VARIABLE AUTOINCREMENTO
    (62) var_modi -> . VARIABLE AUTODECREMENTO
    (63) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (64) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (119) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (120) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion

    VARIABLE        shift and go to state 237
    THIS            shift and go to state 28

    var_modi                       shift and go to state 236

state 228

    (127) class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .

    PREGUNTA        reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    FOR             reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    WHILE           reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    CLASS           reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    COMENTARIO      reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    ECHO            reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    VARIABLE        reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    THIS            reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    IF              reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    FUNCTION        reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    IDENTIFIER      reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    RLLAVE          reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    BREAK           reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    CONTINUE        reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    RETURN          reduce using rule 127 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)


state 229

    (135) mem_funcs -> mem_func mem_funcs .

    RLLAVE          reduce using rule 135 (mem_funcs -> mem_func mem_funcs .)


state 230

    (132) mem_func -> modf_acso FUNCTION . IDENTIFIER args scope

    IDENTIFIER      shift and go to state 238


state 231

    (133) mem_func -> FUNCTION IDENTIFIER . args scope
    (111) args -> . LPAREN RPAREN
    (112) args -> . LPAREN arguments RPAREN

    LPAREN          shift and go to state 144

    args                           shift and go to state 239

state 232

    (128) mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .

    COMENTARIO      reduce using rule 128 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    PUBLIC          reduce using rule 128 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    PRIVATE         reduce using rule 128 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    PROTECTED       reduce using rule 128 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 128 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)


state 233

    (106) array_items -> array_item COMA array_items .

    RPAREN          reduce using rule 106 (array_items -> array_item COMA array_items .)


state 234

    (102) assigncacionArrow -> expresion ASIGNACION2 expresion .
    (85) boolean -> expresion . comp_bin_oprs expresion
    (71) comp_bin_oprs -> . MAYORQUE
    (72) comp_bin_oprs -> . MENORQUE
    (73) comp_bin_oprs -> . MAYORIGUAL
    (74) comp_bin_oprs -> . MENORIGUAL
    (75) comp_bin_oprs -> . SAME
    (76) comp_bin_oprs -> . EQUALS
    (77) comp_bin_oprs -> . DESIGUALDAD
    (78) comp_bin_oprs -> . AND
    (79) comp_bin_oprs -> . OR

    COMA            reduce using rule 102 (assigncacionArrow -> expresion ASIGNACION2 expresion .)
    RPAREN          reduce using rule 102 (assigncacionArrow -> expresion ASIGNACION2 expresion .)
    MAYORQUE        shift and go to state 99
    MENORQUE        shift and go to state 100
    MAYORIGUAL      shift and go to state 101
    MENORIGUAL      shift and go to state 102
    SAME            shift and go to state 103
    EQUALS          shift and go to state 104
    DESIGUALDAD     shift and go to state 105
    AND             shift and go to state 106
    OR              shift and go to state 107

    comp_bin_oprs                  shift and go to state 98

state 235

    (110) arguments -> VARIABLE COMA arguments .

    RPAREN          reduce using rule 110 (arguments -> VARIABLE COMA arguments .)


state 236

    (101) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi . RPAREN scope

    RPAREN          shift and go to state 240


state 237

    (35) var_modi -> VARIABLE . CONCAT_ASIG string
    (36) var_modi -> VARIABLE . CONCAT_ASIG VARIABLE
    (61) var_modi -> VARIABLE . AUTOINCREMENTO
    (62) var_modi -> VARIABLE . AUTODECREMENTO
    (63) var_modi -> VARIABLE . ASIGNACION_AUMENTADA math_expr
    (64) var_modi -> VARIABLE . ASIGNACION_DISMINUIDA math_expr
    (120) var_modi -> VARIABLE . ARROW IDENTIFIER ASIGNACION expresion

    CONCAT_ASIG     shift and go to state 67
    AUTOINCREMENTO  shift and go to state 68
    AUTODECREMENTO  shift and go to state 69
    ASIGNACION_AUMENTADA shift and go to state 70
    ASIGNACION_DISMINUIDA shift and go to state 71
    ARROW           shift and go to state 241


state 238

    (132) mem_func -> modf_acso FUNCTION IDENTIFIER . args scope
    (111) args -> . LPAREN RPAREN
    (112) args -> . LPAREN arguments RPAREN

    LPAREN          shift and go to state 144

    args                           shift and go to state 242

state 239

    (133) mem_func -> FUNCTION IDENTIFIER args . scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 243

state 240

    (101) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN . scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 244

state 241

    (120) var_modi -> VARIABLE ARROW . IDENTIFIER ASIGNACION expresion

    IDENTIFIER      shift and go to state 245


state 242

    (132) mem_func -> modf_acso FUNCTION IDENTIFIER args . scope
    (90) scope -> . LLLAVE statements RLLAVE
    (91) scope -> . LLLAVE RLLAVE
    (92) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (93) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (94) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (95) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (96) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (97) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 246

state 243

    (133) mem_func -> FUNCTION IDENTIFIER args scope .

    FUNCTION        reduce using rule 133 (mem_func -> FUNCTION IDENTIFIER args scope .)
    PUBLIC          reduce using rule 133 (mem_func -> FUNCTION IDENTIFIER args scope .)
    PRIVATE         reduce using rule 133 (mem_func -> FUNCTION IDENTIFIER args scope .)
    PROTECTED       reduce using rule 133 (mem_func -> FUNCTION IDENTIFIER args scope .)
    RLLAVE          reduce using rule 133 (mem_func -> FUNCTION IDENTIFIER args scope .)


state 244

    (101) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .

    PREGUNTA        reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    FOR             reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    WHILE           reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    CLASS           reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    COMENTARIO      reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    ECHO            reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    VARIABLE        reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    THIS            reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    IF              reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    FUNCTION        reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    IDENTIFIER      reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    RLLAVE          reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    BREAK           reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    CONTINUE        reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    RETURN          reduce using rule 101 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)


state 245

    (120) var_modi -> VARIABLE ARROW IDENTIFIER . ASIGNACION expresion

    ASIGNACION      shift and go to state 190


state 246

    (132) mem_func -> modf_acso FUNCTION IDENTIFIER args scope .

    FUNCTION        reduce using rule 132 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    PUBLIC          reduce using rule 132 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    PRIVATE         reduce using rule 132 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    PROTECTED       reduce using rule 132 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    RLLAVE          reduce using rule 132 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEGACION in state 64 resolved as shift
WARNING: shift/reduce conflict for MAS in state 109 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 109 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 109 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 109 resolved as shift
WARNING: shift/reduce conflict for DOT in state 116 resolved as shift
WARNING: shift/reduce conflict for DOT in state 121 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 160 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 160 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 160 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 168 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 168 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 168 resolved as shift
WARNING: shift/reduce conflict for SAME in state 168 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 168 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 168 resolved as shift
WARNING: shift/reduce conflict for AND in state 168 resolved as shift
WARNING: shift/reduce conflict for OR in state 168 resolved as shift
WARNING: shift/reduce conflict for DOT in state 175 resolved as shift
WARNING: shift/reduce conflict for DOT in state 176 resolved as shift
WARNING: reduce/reduce conflict in state 112 resolved using rule (signo -> MAS)
WARNING: rejected rule (math_oper -> MAS) in state 112
WARNING: reduce/reduce conflict in state 113 resolved using rule (signo -> MENOS)
WARNING: rejected rule (math_oper -> MENOS) in state 113
WARNING: reduce/reduce conflict in state 123 resolved using rule (expresion -> boolean)
WARNING: rejected rule (boolean -> bool_unary_oprs boolean) in state 123
WARNING: Rule (math_oper -> MAS) is never reduced
WARNING: Rule (math_oper -> MENOS) is never reduced
