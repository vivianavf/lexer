Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    AND
    ARRAY
    ASIGNACION2
    ASIGNACION_AUMENTADA
    ASIGNACION_DISMINUIDA
    CLASS
    COMENTARIO
    COMILLASDOBLES
    COMILLASIMPLE
    CONTINUE
    DECLARE
    DOLLAR
    DOT
    DOUBLE
    ENTERO
    FALSE
    FLOTANTE
    HASHTAG
    ID
    ISSET
    LIST
    MATCH
    NEW
    NULL
    OBJECT
    OR
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    SAME
    STATIC
    TRUE
    UNSET
    VAR
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> header_declaration declaration_list footer_declaration
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> declaration
Rule 4     declaration -> var_declaration
Rule 5     declaration -> selection_stmt
Rule 6     declaration -> iteration_stmt
Rule 7     declaration -> fun_declaration
Rule 8     declaration -> show_in_screen
Rule 9     declaration -> expression_stmt
Rule 10    header_declaration -> MENORQUE PREGUNTA PHP
Rule 11    footer_declaration -> PREGUNTA MAYORQUE
Rule 12    show_in_screen -> ECHO var_val FINAL_DE_LINEA
Rule 13    show_in_screen -> ECHO STRING1 FINAL_DE_LINEA
Rule 14    show_in_screen -> ECHO STRING2 FINAL_DE_LINEA
Rule 15    show_in_screen -> ECHO selection_stmt
Rule 16    var_declaration -> var_declaration2 FINAL_DE_LINEA
Rule 17    var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA
Rule 18    var_declaration2 -> VARIABLE
Rule 19    var_declaration2 -> VARIABLE COMA var_declaration2
Rule 20    var_declaration2 -> VARIABLE ASIGNACION NUMERO COMA var_declaration2
Rule 21    var_declaration2 -> VARIABLE ASIGNACION NUMERO
Rule 22    var_declaration2 -> VARIABLE ASIGNACION VARIABLE COMA var_declaration2
Rule 23    var_declaration2 -> VARIABLE ASIGNACION VARIABLE
Rule 24    var_declaration2 -> COMA
Rule 25    var_declaration2 -> VARIABLE ASIGNACION VARIABLE simple_expression
Rule 26    var_declaration2 -> VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
Rule 27    var_declaration2 -> NUMERO COMA var_declaration2
Rule 28    var_declaration2 -> NUMERO RBRACKET
Rule 29    var_declaration2 -> VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
Rule 30    var_declaration2 -> STRING1 COMA var_declaration2
Rule 31    var_declaration2 -> STRING1 RBRACKET
Rule 32    fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement
Rule 33    params -> param_list
Rule 34    param_list -> param_list COMA param
Rule 35    param_list -> param
Rule 36    param -> VARIABLE
Rule 37    param -> VARIABLE LBRACKET RBRACKET
Rule 38    param -> empty_function
Rule 39    compount_stmt -> LLLAVE local_declarations statement_list RLLAVE
Rule 40    local_declarations -> var_declaration
Rule 41    local_declarations -> empty_function
Rule 42    statement_list -> statement_list statement
Rule 43    statement_list -> statement
Rule 44    statement_list -> empty_function
Rule 45    statement -> expression_stmt
Rule 46    statement -> compount_stmt
Rule 47    statement -> selection_stmt
Rule 48    statement -> iteration_stmt
Rule 49    statement -> show_in_screen
Rule 50    statement -> return_stmt
Rule 51    expression_stmt -> expression FINAL_DE_LINEA
Rule 52    expression_stmt -> FINAL_DE_LINEA
Rule 53    selection_stmt -> IF LPAREN expression RPAREN statement
Rule 54    selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement
Rule 55    selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement
Rule 56    selection_stmt -> SWITCH LPAREN var_val RPAREN statement
Rule 57    selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
Rule 58    selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
Rule 59    selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
Rule 60    iteration_stmt -> WHILE LPAREN expression RPAREN statement
Rule 61    iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
Rule 62    iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement
Rule 63    return_stmt -> RETURN FINAL_DE_LINEA
Rule 64    return_stmt -> RETURN expression FINAL_DE_LINEA
Rule 65    expression -> var_val ASIGNACION expression
Rule 66    expression -> simple_expression
Rule 67    var_val -> VARIABLE
Rule 68    var_val -> VARIABLE LBRACKET expression RBRACKET
Rule 69    simple_expression -> additive_expression relop additive_expression
Rule 70    simple_expression -> additive_expression
Rule 71    relop -> MENORQUE
Rule 72    relop -> MENORIGUAL
Rule 73    relop -> MAYORQUE
Rule 74    relop -> MAYORIGUAL
Rule 75    relop -> DESIGUALDAD
Rule 76    relop -> NEGACION
Rule 77    relop -> EQUALS
Rule 78    additive_expression -> additive_expression addop term
Rule 79    additive_expression -> term
Rule 80    additive_expression -> term AUTODECREMENTO
Rule 81    additive_expression -> term AUTOINCREMENTO
Rule 82    additive_expression -> addop term
Rule 83    addop -> MAS
Rule 84    addop -> MENOS
Rule 85    term -> term mulop factor
Rule 86    term -> factor
Rule 87    term -> STRING1
Rule 88    term -> STRING2
Rule 89    mulop -> MULTIPLICACION
Rule 90    mulop -> DIVISION
Rule 91    factor -> LPAREN expression RPAREN
Rule 92    factor -> var_val
Rule 93    factor -> call
Rule 94    factor -> NUMERO
Rule 95    call -> IDENTIFIER LPAREN args RPAREN
Rule 96    args -> args_list
Rule 97    args -> empty_function
Rule 98    args_list -> args_list COMA expression
Rule 99    args_list -> expression
Rule 100   empty_function -> <empty>

Terminals, with rules where they appear

AMPERSANT            : 
AND                  : 
ARRAY                : 
AS                   : 62
ASIGNACION           : 20 21 22 23 25 26 29 65
ASIGNACION2          : 
ASIGNACION_AUMENTADA : 
ASIGNACION_DISMINUIDA : 
AUTODECREMENTO       : 80
AUTOINCREMENTO       : 81
BREAK                : 57 58
CASE                 : 57
CLASS                : 
COMA                 : 19 20 22 24 26 27 29 30 34 98
COMENTARIO           : 
COMILLASDOBLES       : 
COMILLASIMPLE        : 
CONTINUE             : 
DECLARE              : 
DEFAULT              : 58
DESIGUALDAD          : 75
DIVISION             : 90
DOLLAR               : 
DOS_PUNTOS           : 57 58 59
DOT                  : 
DOUBLE               : 
ECHO                 : 12 13 14 15
ELSE                 : 54
ELSEIF               : 55
ENTERO               : 
EQUALS               : 77
FALSE                : 
FINAL_DE_LINEA       : 12 13 14 16 17 51 52 57 58 59 61 61 63 64
FLOTANTE             : 
FOR                  : 61
FOREACH              : 62
FUNCTION             : 32
HASHTAG              : 
ID                   : 
IDENTIFIER           : 32 95
IF                   : 53 54 55
ISSET                : 
LBRACKET             : 17 26 29 37 68
LIST                 : 
LLLAVE               : 39
LPAREN               : 32 53 54 55 56 60 61 62 91 95
MAS                  : 83
MATCH                : 
MAYORIGUAL           : 74
MAYORQUE             : 11 73
MENORIGUAL           : 72
MENORQUE             : 10 71
MENOS                : 84
MULTIPLICACION       : 89
NEGACION             : 76
NEW                  : 
NULL                 : 
NUMERO               : 17 20 21 26 27 28 57 94
OBJECT               : 
OR                   : 
PHP                  : 10
PREGUNTA             : 10 11 59
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACKET             : 17 28 31 37 68
RETURN               : 63 64
RLLAVE               : 39
RPAREN               : 32 53 54 55 56 60 61 62 91 95
SAME                 : 
STATIC               : 
STRING1              : 13 29 30 31 87
STRING2              : 14 88
SWITCH               : 56
TRUE                 : 
UNSET                : 
VAR                  : 
VARIABLE             : 17 18 19 20 21 22 22 23 23 25 25 26 29 36 37 59 59 67 68
VOID                 : 
WHILE                : 60
error                : 

Nonterminals, with rules where they appear

additive_expression  : 61 69 69 70 78
addop                : 78 82
args                 : 95
args_list            : 96 98
call                 : 93
compount_stmt        : 46
declaration          : 2 3
declaration_list     : 1 2
empty_function       : 38 41 44 97
expression           : 51 53 54 55 59 59 60 61 64 65 68 91 98 99
expression_stmt      : 9 45
factor               : 85 86
footer_declaration   : 1
fun_declaration      : 7
header_declaration   : 1
iteration_stmt       : 6 48
local_declarations   : 39
mulop                : 85
param                : 34 35
param_list           : 33 34
params               : 32
program              : 0
relop                : 59 69
return_stmt          : 50
selection_stmt       : 5 15 47
show_in_screen       : 8 49
simple_expression    : 25 66
statement            : 32 42 43 53 54 54 55 55 56 57 58 60 61 62
statement_list       : 39 42
term                 : 78 79 80 81 82 85
var_declaration      : 4 40
var_declaration2     : 16 19 20 22 26 27 29 30 61
var_val              : 12 56 62 62 65 92

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . header_declaration declaration_list footer_declaration
    (10) header_declaration -> . MENORQUE PREGUNTA PHP

    MENORQUE        shift and go to state 3

    program                        shift and go to state 1
    header_declaration             shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> header_declaration . declaration_list footer_declaration
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . declaration
    (4) declaration -> . var_declaration
    (5) declaration -> . selection_stmt
    (6) declaration -> . iteration_stmt
    (7) declaration -> . fun_declaration
    (8) declaration -> . show_in_screen
    (9) declaration -> . expression_stmt
    (16) var_declaration -> . var_declaration2 FINAL_DE_LINEA
    (17) var_declaration -> . VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (32) fun_declaration -> . FUNCTION IDENTIFIER LPAREN params RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 14
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    FUNCTION        shift and go to state 27
    ECHO            shift and go to state 29
    FINAL_DE_LINEA  shift and go to state 13
    COMA            shift and go to state 32
    NUMERO          shift and go to state 15
    STRING1         shift and go to state 30
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    IDENTIFIER      shift and go to state 28

    declaration_list               shift and go to state 4
    declaration                    shift and go to state 5
    var_declaration                shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    fun_declaration                shift and go to state 9
    show_in_screen                 shift and go to state 10
    expression_stmt                shift and go to state 11
    var_declaration2               shift and go to state 12
    expression                     shift and go to state 18
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 3

    (10) header_declaration -> MENORQUE . PREGUNTA PHP

    PREGUNTA        shift and go to state 40


state 4

    (1) program -> header_declaration declaration_list . footer_declaration
    (2) declaration_list -> declaration_list . declaration
    (11) footer_declaration -> . PREGUNTA MAYORQUE
    (4) declaration -> . var_declaration
    (5) declaration -> . selection_stmt
    (6) declaration -> . iteration_stmt
    (7) declaration -> . fun_declaration
    (8) declaration -> . show_in_screen
    (9) declaration -> . expression_stmt
    (16) var_declaration -> . var_declaration2 FINAL_DE_LINEA
    (17) var_declaration -> . VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (32) fun_declaration -> . FUNCTION IDENTIFIER LPAREN params RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    PREGUNTA        shift and go to state 43
    VARIABLE        shift and go to state 14
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    FUNCTION        shift and go to state 27
    ECHO            shift and go to state 29
    FINAL_DE_LINEA  shift and go to state 13
    COMA            shift and go to state 32
    NUMERO          shift and go to state 15
    STRING1         shift and go to state 30
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    IDENTIFIER      shift and go to state 28

    footer_declaration             shift and go to state 41
    declaration                    shift and go to state 42
    var_declaration                shift and go to state 6
    selection_stmt                 shift and go to state 7
    iteration_stmt                 shift and go to state 8
    fun_declaration                shift and go to state 9
    show_in_screen                 shift and go to state 10
    expression_stmt                shift and go to state 11
    var_declaration2               shift and go to state 12
    expression                     shift and go to state 18
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 5

    (3) declaration_list -> declaration .

    PREGUNTA        reduce using rule 3 (declaration_list -> declaration .)
    VARIABLE        reduce using rule 3 (declaration_list -> declaration .)
    IF              reduce using rule 3 (declaration_list -> declaration .)
    SWITCH          reduce using rule 3 (declaration_list -> declaration .)
    CASE            reduce using rule 3 (declaration_list -> declaration .)
    DEFAULT         reduce using rule 3 (declaration_list -> declaration .)
    WHILE           reduce using rule 3 (declaration_list -> declaration .)
    FOR             reduce using rule 3 (declaration_list -> declaration .)
    FOREACH         reduce using rule 3 (declaration_list -> declaration .)
    FUNCTION        reduce using rule 3 (declaration_list -> declaration .)
    ECHO            reduce using rule 3 (declaration_list -> declaration .)
    FINAL_DE_LINEA  reduce using rule 3 (declaration_list -> declaration .)
    COMA            reduce using rule 3 (declaration_list -> declaration .)
    NUMERO          reduce using rule 3 (declaration_list -> declaration .)
    STRING1         reduce using rule 3 (declaration_list -> declaration .)
    STRING2         reduce using rule 3 (declaration_list -> declaration .)
    MAS             reduce using rule 3 (declaration_list -> declaration .)
    MENOS           reduce using rule 3 (declaration_list -> declaration .)
    LPAREN          reduce using rule 3 (declaration_list -> declaration .)
    IDENTIFIER      reduce using rule 3 (declaration_list -> declaration .)


state 6

    (4) declaration -> var_declaration .

    PREGUNTA        reduce using rule 4 (declaration -> var_declaration .)
    VARIABLE        reduce using rule 4 (declaration -> var_declaration .)
    IF              reduce using rule 4 (declaration -> var_declaration .)
    SWITCH          reduce using rule 4 (declaration -> var_declaration .)
    CASE            reduce using rule 4 (declaration -> var_declaration .)
    DEFAULT         reduce using rule 4 (declaration -> var_declaration .)
    WHILE           reduce using rule 4 (declaration -> var_declaration .)
    FOR             reduce using rule 4 (declaration -> var_declaration .)
    FOREACH         reduce using rule 4 (declaration -> var_declaration .)
    FUNCTION        reduce using rule 4 (declaration -> var_declaration .)
    ECHO            reduce using rule 4 (declaration -> var_declaration .)
    FINAL_DE_LINEA  reduce using rule 4 (declaration -> var_declaration .)
    COMA            reduce using rule 4 (declaration -> var_declaration .)
    NUMERO          reduce using rule 4 (declaration -> var_declaration .)
    STRING1         reduce using rule 4 (declaration -> var_declaration .)
    STRING2         reduce using rule 4 (declaration -> var_declaration .)
    MAS             reduce using rule 4 (declaration -> var_declaration .)
    MENOS           reduce using rule 4 (declaration -> var_declaration .)
    LPAREN          reduce using rule 4 (declaration -> var_declaration .)
    IDENTIFIER      reduce using rule 4 (declaration -> var_declaration .)


state 7

    (5) declaration -> selection_stmt .

    PREGUNTA        reduce using rule 5 (declaration -> selection_stmt .)
    VARIABLE        reduce using rule 5 (declaration -> selection_stmt .)
    IF              reduce using rule 5 (declaration -> selection_stmt .)
    SWITCH          reduce using rule 5 (declaration -> selection_stmt .)
    CASE            reduce using rule 5 (declaration -> selection_stmt .)
    DEFAULT         reduce using rule 5 (declaration -> selection_stmt .)
    WHILE           reduce using rule 5 (declaration -> selection_stmt .)
    FOR             reduce using rule 5 (declaration -> selection_stmt .)
    FOREACH         reduce using rule 5 (declaration -> selection_stmt .)
    FUNCTION        reduce using rule 5 (declaration -> selection_stmt .)
    ECHO            reduce using rule 5 (declaration -> selection_stmt .)
    FINAL_DE_LINEA  reduce using rule 5 (declaration -> selection_stmt .)
    COMA            reduce using rule 5 (declaration -> selection_stmt .)
    NUMERO          reduce using rule 5 (declaration -> selection_stmt .)
    STRING1         reduce using rule 5 (declaration -> selection_stmt .)
    STRING2         reduce using rule 5 (declaration -> selection_stmt .)
    MAS             reduce using rule 5 (declaration -> selection_stmt .)
    MENOS           reduce using rule 5 (declaration -> selection_stmt .)
    LPAREN          reduce using rule 5 (declaration -> selection_stmt .)
    IDENTIFIER      reduce using rule 5 (declaration -> selection_stmt .)


state 8

    (6) declaration -> iteration_stmt .

    PREGUNTA        reduce using rule 6 (declaration -> iteration_stmt .)
    VARIABLE        reduce using rule 6 (declaration -> iteration_stmt .)
    IF              reduce using rule 6 (declaration -> iteration_stmt .)
    SWITCH          reduce using rule 6 (declaration -> iteration_stmt .)
    CASE            reduce using rule 6 (declaration -> iteration_stmt .)
    DEFAULT         reduce using rule 6 (declaration -> iteration_stmt .)
    WHILE           reduce using rule 6 (declaration -> iteration_stmt .)
    FOR             reduce using rule 6 (declaration -> iteration_stmt .)
    FOREACH         reduce using rule 6 (declaration -> iteration_stmt .)
    FUNCTION        reduce using rule 6 (declaration -> iteration_stmt .)
    ECHO            reduce using rule 6 (declaration -> iteration_stmt .)
    FINAL_DE_LINEA  reduce using rule 6 (declaration -> iteration_stmt .)
    COMA            reduce using rule 6 (declaration -> iteration_stmt .)
    NUMERO          reduce using rule 6 (declaration -> iteration_stmt .)
    STRING1         reduce using rule 6 (declaration -> iteration_stmt .)
    STRING2         reduce using rule 6 (declaration -> iteration_stmt .)
    MAS             reduce using rule 6 (declaration -> iteration_stmt .)
    MENOS           reduce using rule 6 (declaration -> iteration_stmt .)
    LPAREN          reduce using rule 6 (declaration -> iteration_stmt .)
    IDENTIFIER      reduce using rule 6 (declaration -> iteration_stmt .)


state 9

    (7) declaration -> fun_declaration .

    PREGUNTA        reduce using rule 7 (declaration -> fun_declaration .)
    VARIABLE        reduce using rule 7 (declaration -> fun_declaration .)
    IF              reduce using rule 7 (declaration -> fun_declaration .)
    SWITCH          reduce using rule 7 (declaration -> fun_declaration .)
    CASE            reduce using rule 7 (declaration -> fun_declaration .)
    DEFAULT         reduce using rule 7 (declaration -> fun_declaration .)
    WHILE           reduce using rule 7 (declaration -> fun_declaration .)
    FOR             reduce using rule 7 (declaration -> fun_declaration .)
    FOREACH         reduce using rule 7 (declaration -> fun_declaration .)
    FUNCTION        reduce using rule 7 (declaration -> fun_declaration .)
    ECHO            reduce using rule 7 (declaration -> fun_declaration .)
    FINAL_DE_LINEA  reduce using rule 7 (declaration -> fun_declaration .)
    COMA            reduce using rule 7 (declaration -> fun_declaration .)
    NUMERO          reduce using rule 7 (declaration -> fun_declaration .)
    STRING1         reduce using rule 7 (declaration -> fun_declaration .)
    STRING2         reduce using rule 7 (declaration -> fun_declaration .)
    MAS             reduce using rule 7 (declaration -> fun_declaration .)
    MENOS           reduce using rule 7 (declaration -> fun_declaration .)
    LPAREN          reduce using rule 7 (declaration -> fun_declaration .)
    IDENTIFIER      reduce using rule 7 (declaration -> fun_declaration .)


state 10

    (8) declaration -> show_in_screen .

    PREGUNTA        reduce using rule 8 (declaration -> show_in_screen .)
    VARIABLE        reduce using rule 8 (declaration -> show_in_screen .)
    IF              reduce using rule 8 (declaration -> show_in_screen .)
    SWITCH          reduce using rule 8 (declaration -> show_in_screen .)
    CASE            reduce using rule 8 (declaration -> show_in_screen .)
    DEFAULT         reduce using rule 8 (declaration -> show_in_screen .)
    WHILE           reduce using rule 8 (declaration -> show_in_screen .)
    FOR             reduce using rule 8 (declaration -> show_in_screen .)
    FOREACH         reduce using rule 8 (declaration -> show_in_screen .)
    FUNCTION        reduce using rule 8 (declaration -> show_in_screen .)
    ECHO            reduce using rule 8 (declaration -> show_in_screen .)
    FINAL_DE_LINEA  reduce using rule 8 (declaration -> show_in_screen .)
    COMA            reduce using rule 8 (declaration -> show_in_screen .)
    NUMERO          reduce using rule 8 (declaration -> show_in_screen .)
    STRING1         reduce using rule 8 (declaration -> show_in_screen .)
    STRING2         reduce using rule 8 (declaration -> show_in_screen .)
    MAS             reduce using rule 8 (declaration -> show_in_screen .)
    MENOS           reduce using rule 8 (declaration -> show_in_screen .)
    LPAREN          reduce using rule 8 (declaration -> show_in_screen .)
    IDENTIFIER      reduce using rule 8 (declaration -> show_in_screen .)


state 11

    (9) declaration -> expression_stmt .

    PREGUNTA        reduce using rule 9 (declaration -> expression_stmt .)
    VARIABLE        reduce using rule 9 (declaration -> expression_stmt .)
    IF              reduce using rule 9 (declaration -> expression_stmt .)
    SWITCH          reduce using rule 9 (declaration -> expression_stmt .)
    CASE            reduce using rule 9 (declaration -> expression_stmt .)
    DEFAULT         reduce using rule 9 (declaration -> expression_stmt .)
    WHILE           reduce using rule 9 (declaration -> expression_stmt .)
    FOR             reduce using rule 9 (declaration -> expression_stmt .)
    FOREACH         reduce using rule 9 (declaration -> expression_stmt .)
    FUNCTION        reduce using rule 9 (declaration -> expression_stmt .)
    ECHO            reduce using rule 9 (declaration -> expression_stmt .)
    FINAL_DE_LINEA  reduce using rule 9 (declaration -> expression_stmt .)
    COMA            reduce using rule 9 (declaration -> expression_stmt .)
    NUMERO          reduce using rule 9 (declaration -> expression_stmt .)
    STRING1         reduce using rule 9 (declaration -> expression_stmt .)
    STRING2         reduce using rule 9 (declaration -> expression_stmt .)
    MAS             reduce using rule 9 (declaration -> expression_stmt .)
    MENOS           reduce using rule 9 (declaration -> expression_stmt .)
    LPAREN          reduce using rule 9 (declaration -> expression_stmt .)
    IDENTIFIER      reduce using rule 9 (declaration -> expression_stmt .)


state 12

    (16) var_declaration -> var_declaration2 . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 44


state 13

    (52) expression_stmt -> FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    IF              reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    SWITCH          reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    CASE            reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    WHILE           reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    FOR             reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    FOREACH         reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    ECHO            reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    COMA            reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    NUMERO          reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    STRING1         reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    STRING2         reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    MAS             reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    MENOS           reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    LPAREN          reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    BREAK           reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    ELSE            reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)
    RETURN          reduce using rule 52 (expression_stmt -> FINAL_DE_LINEA .)


state 14

    (17) var_declaration -> VARIABLE . LBRACKET NUMERO RBRACKET FINAL_DE_LINEA
    (59) selection_stmt -> VARIABLE . relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (18) var_declaration2 -> VARIABLE .
    (19) var_declaration2 -> VARIABLE . COMA var_declaration2
    (20) var_declaration2 -> VARIABLE . ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> VARIABLE . ASIGNACION NUMERO
    (22) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE
    (25) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> VARIABLE . ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (29) var_declaration2 -> VARIABLE . ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (67) var_val -> VARIABLE .
    (68) var_val -> VARIABLE . LBRACKET expression RBRACKET
    (71) relop -> . MENORQUE
    (72) relop -> . MENORIGUAL
    (73) relop -> . MAYORQUE
    (74) relop -> . MAYORIGUAL
    (75) relop -> . DESIGUALDAD
    (76) relop -> . NEGACION
    (77) relop -> . EQUALS

  ! shift/reduce conflict for ASIGNACION resolved as shift
  ! reduce/reduce conflict for FINAL_DE_LINEA resolved using rule 18 (var_declaration2 -> VARIABLE .)
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for NEGACION resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    LBRACKET        shift and go to state 45
    FINAL_DE_LINEA  reduce using rule 18 (var_declaration2 -> VARIABLE .)
    COMA            shift and go to state 47
    ASIGNACION      shift and go to state 48
    AUTODECREMENTO  reduce using rule 67 (var_val -> VARIABLE .)
    AUTOINCREMENTO  reduce using rule 67 (var_val -> VARIABLE .)
    MULTIPLICACION  reduce using rule 67 (var_val -> VARIABLE .)
    DIVISION        reduce using rule 67 (var_val -> VARIABLE .)
    MAS             reduce using rule 67 (var_val -> VARIABLE .)
    MENOS           reduce using rule 67 (var_val -> VARIABLE .)
    MENORQUE        shift and go to state 49
    MENORIGUAL      shift and go to state 50
    MAYORQUE        shift and go to state 51
    MAYORIGUAL      shift and go to state 52
    DESIGUALDAD     shift and go to state 53
    NEGACION        shift and go to state 54
    EQUALS          shift and go to state 55

  ! ASIGNACION      [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! MENORQUE        [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! MENORIGUAL      [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! MAYORQUE        [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! MAYORIGUAL      [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! DESIGUALDAD     [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! NEGACION        [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! EQUALS          [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! FINAL_DE_LINEA  [ reduce using rule 67 (var_val -> VARIABLE .) ]

    relop                          shift and go to state 46

state 15

    (27) var_declaration2 -> NUMERO . COMA var_declaration2
    (28) var_declaration2 -> NUMERO . RBRACKET
    (94) factor -> NUMERO .

    COMA            shift and go to state 56
    RBRACKET        shift and go to state 57
    AUTODECREMENTO  reduce using rule 94 (factor -> NUMERO .)
    AUTOINCREMENTO  reduce using rule 94 (factor -> NUMERO .)
    MULTIPLICACION  reduce using rule 94 (factor -> NUMERO .)
    DIVISION        reduce using rule 94 (factor -> NUMERO .)
    MENORQUE        reduce using rule 94 (factor -> NUMERO .)
    MENORIGUAL      reduce using rule 94 (factor -> NUMERO .)
    MAYORQUE        reduce using rule 94 (factor -> NUMERO .)
    MAYORIGUAL      reduce using rule 94 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 94 (factor -> NUMERO .)
    NEGACION        reduce using rule 94 (factor -> NUMERO .)
    EQUALS          reduce using rule 94 (factor -> NUMERO .)
    MAS             reduce using rule 94 (factor -> NUMERO .)
    MENOS           reduce using rule 94 (factor -> NUMERO .)
    FINAL_DE_LINEA  reduce using rule 94 (factor -> NUMERO .)


state 16

    (53) selection_stmt -> IF . LPAREN expression RPAREN statement
    (54) selection_stmt -> IF . LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> IF . LPAREN expression RPAREN statement ELSEIF statement

    LPAREN          shift and go to state 58


state 17

    (91) factor -> LPAREN . expression RPAREN
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 59
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 18

    (51) expression_stmt -> expression . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 63


state 19

    (56) selection_stmt -> SWITCH . LPAREN var_val RPAREN statement

    LPAREN          shift and go to state 64


state 20

    (65) expression -> var_val . ASIGNACION expression
    (92) factor -> var_val .

    ASIGNACION      shift and go to state 65
    AUTODECREMENTO  reduce using rule 92 (factor -> var_val .)
    AUTOINCREMENTO  reduce using rule 92 (factor -> var_val .)
    MULTIPLICACION  reduce using rule 92 (factor -> var_val .)
    DIVISION        reduce using rule 92 (factor -> var_val .)
    MENORQUE        reduce using rule 92 (factor -> var_val .)
    MENORIGUAL      reduce using rule 92 (factor -> var_val .)
    MAYORQUE        reduce using rule 92 (factor -> var_val .)
    MAYORIGUAL      reduce using rule 92 (factor -> var_val .)
    DESIGUALDAD     reduce using rule 92 (factor -> var_val .)
    NEGACION        reduce using rule 92 (factor -> var_val .)
    EQUALS          reduce using rule 92 (factor -> var_val .)
    MAS             reduce using rule 92 (factor -> var_val .)
    MENOS           reduce using rule 92 (factor -> var_val .)
    FINAL_DE_LINEA  reduce using rule 92 (factor -> var_val .)
    RPAREN          reduce using rule 92 (factor -> var_val .)
    RBRACKET        reduce using rule 92 (factor -> var_val .)
    COMA            reduce using rule 92 (factor -> var_val .)
    DOS_PUNTOS      reduce using rule 92 (factor -> var_val .)


state 21

    (57) selection_stmt -> CASE . NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA

    NUMERO          shift and go to state 66


state 22

    (58) selection_stmt -> DEFAULT . DOS_PUNTOS statement BREAK FINAL_DE_LINEA

    DOS_PUNTOS      shift and go to state 67


state 23

    (60) iteration_stmt -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 68


state 24

    (61) iteration_stmt -> FOR . LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement

    LPAREN          shift and go to state 69


state 25

    (69) simple_expression -> additive_expression . relop additive_expression
    (70) simple_expression -> additive_expression .
    (78) additive_expression -> additive_expression . addop term
    (71) relop -> . MENORQUE
    (72) relop -> . MENORIGUAL
    (73) relop -> . MAYORQUE
    (74) relop -> . MAYORIGUAL
    (75) relop -> . DESIGUALDAD
    (76) relop -> . NEGACION
    (77) relop -> . EQUALS
    (83) addop -> . MAS
    (84) addop -> . MENOS

    FINAL_DE_LINEA  reduce using rule 70 (simple_expression -> additive_expression .)
    RPAREN          reduce using rule 70 (simple_expression -> additive_expression .)
    RBRACKET        reduce using rule 70 (simple_expression -> additive_expression .)
    COMA            reduce using rule 70 (simple_expression -> additive_expression .)
    DOS_PUNTOS      reduce using rule 70 (simple_expression -> additive_expression .)
    MENORQUE        shift and go to state 49
    MENORIGUAL      shift and go to state 50
    MAYORQUE        shift and go to state 51
    MAYORIGUAL      shift and go to state 52
    DESIGUALDAD     shift and go to state 53
    NEGACION        shift and go to state 54
    EQUALS          shift and go to state 55
    MAS             shift and go to state 37
    MENOS           shift and go to state 38

    relop                          shift and go to state 70
    addop                          shift and go to state 71

state 26

    (62) iteration_stmt -> FOREACH . LPAREN var_val AS var_val RPAREN statement

    LPAREN          shift and go to state 72


state 27

    (32) fun_declaration -> FUNCTION . IDENTIFIER LPAREN params RPAREN statement

    IDENTIFIER      shift and go to state 73


state 28

    (95) call -> IDENTIFIER . LPAREN args RPAREN

    LPAREN          shift and go to state 74


state 29

    (12) show_in_screen -> ECHO . var_val FINAL_DE_LINEA
    (13) show_in_screen -> ECHO . STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> ECHO . STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> ECHO . selection_stmt
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA

    STRING1         shift and go to state 76
    STRING2         shift and go to state 77
    VARIABLE        shift and go to state 79
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22

    var_val                        shift and go to state 75
    selection_stmt                 shift and go to state 78

state 30

    (30) var_declaration2 -> STRING1 . COMA var_declaration2
    (31) var_declaration2 -> STRING1 . RBRACKET
    (87) term -> STRING1 .

    COMA            shift and go to state 80
    RBRACKET        shift and go to state 81
    AUTODECREMENTO  reduce using rule 87 (term -> STRING1 .)
    AUTOINCREMENTO  reduce using rule 87 (term -> STRING1 .)
    MULTIPLICACION  reduce using rule 87 (term -> STRING1 .)
    DIVISION        reduce using rule 87 (term -> STRING1 .)
    MENORQUE        reduce using rule 87 (term -> STRING1 .)
    MENORIGUAL      reduce using rule 87 (term -> STRING1 .)
    MAYORQUE        reduce using rule 87 (term -> STRING1 .)
    MAYORIGUAL      reduce using rule 87 (term -> STRING1 .)
    DESIGUALDAD     reduce using rule 87 (term -> STRING1 .)
    NEGACION        reduce using rule 87 (term -> STRING1 .)
    EQUALS          reduce using rule 87 (term -> STRING1 .)
    MAS             reduce using rule 87 (term -> STRING1 .)
    MENOS           reduce using rule 87 (term -> STRING1 .)
    FINAL_DE_LINEA  reduce using rule 87 (term -> STRING1 .)


state 31

    (88) term -> STRING2 .

    AUTODECREMENTO  reduce using rule 88 (term -> STRING2 .)
    AUTOINCREMENTO  reduce using rule 88 (term -> STRING2 .)
    MULTIPLICACION  reduce using rule 88 (term -> STRING2 .)
    DIVISION        reduce using rule 88 (term -> STRING2 .)
    MENORQUE        reduce using rule 88 (term -> STRING2 .)
    MENORIGUAL      reduce using rule 88 (term -> STRING2 .)
    MAYORQUE        reduce using rule 88 (term -> STRING2 .)
    MAYORIGUAL      reduce using rule 88 (term -> STRING2 .)
    DESIGUALDAD     reduce using rule 88 (term -> STRING2 .)
    NEGACION        reduce using rule 88 (term -> STRING2 .)
    EQUALS          reduce using rule 88 (term -> STRING2 .)
    MAS             reduce using rule 88 (term -> STRING2 .)
    MENOS           reduce using rule 88 (term -> STRING2 .)
    FINAL_DE_LINEA  reduce using rule 88 (term -> STRING2 .)
    RPAREN          reduce using rule 88 (term -> STRING2 .)
    RBRACKET        reduce using rule 88 (term -> STRING2 .)
    COMA            reduce using rule 88 (term -> STRING2 .)
    DOS_PUNTOS      reduce using rule 88 (term -> STRING2 .)


state 32

    (24) var_declaration2 -> COMA .

    FINAL_DE_LINEA  reduce using rule 24 (var_declaration2 -> COMA .)


state 33

    (66) expression -> simple_expression .

    FINAL_DE_LINEA  reduce using rule 66 (expression -> simple_expression .)
    RPAREN          reduce using rule 66 (expression -> simple_expression .)
    RBRACKET        reduce using rule 66 (expression -> simple_expression .)
    COMA            reduce using rule 66 (expression -> simple_expression .)
    DOS_PUNTOS      reduce using rule 66 (expression -> simple_expression .)


state 34

    (82) additive_expression -> addop . term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    VARIABLE        shift and go to state 60
    IDENTIFIER      shift and go to state 28

    term                           shift and go to state 82
    factor                         shift and go to state 36
    var_val                        shift and go to state 83
    call                           shift and go to state 39

state 35

    (79) additive_expression -> term .
    (80) additive_expression -> term . AUTODECREMENTO
    (81) additive_expression -> term . AUTOINCREMENTO
    (85) term -> term . mulop factor
    (89) mulop -> . MULTIPLICACION
    (90) mulop -> . DIVISION

    MENORQUE        reduce using rule 79 (additive_expression -> term .)
    MENORIGUAL      reduce using rule 79 (additive_expression -> term .)
    MAYORQUE        reduce using rule 79 (additive_expression -> term .)
    MAYORIGUAL      reduce using rule 79 (additive_expression -> term .)
    DESIGUALDAD     reduce using rule 79 (additive_expression -> term .)
    NEGACION        reduce using rule 79 (additive_expression -> term .)
    EQUALS          reduce using rule 79 (additive_expression -> term .)
    MAS             reduce using rule 79 (additive_expression -> term .)
    MENOS           reduce using rule 79 (additive_expression -> term .)
    FINAL_DE_LINEA  reduce using rule 79 (additive_expression -> term .)
    RPAREN          reduce using rule 79 (additive_expression -> term .)
    RBRACKET        reduce using rule 79 (additive_expression -> term .)
    COMA            reduce using rule 79 (additive_expression -> term .)
    DOS_PUNTOS      reduce using rule 79 (additive_expression -> term .)
    AUTODECREMENTO  shift and go to state 84
    AUTOINCREMENTO  shift and go to state 85
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88

    mulop                          shift and go to state 86

state 36

    (86) term -> factor .

    AUTODECREMENTO  reduce using rule 86 (term -> factor .)
    AUTOINCREMENTO  reduce using rule 86 (term -> factor .)
    MULTIPLICACION  reduce using rule 86 (term -> factor .)
    DIVISION        reduce using rule 86 (term -> factor .)
    MENORQUE        reduce using rule 86 (term -> factor .)
    MENORIGUAL      reduce using rule 86 (term -> factor .)
    MAYORQUE        reduce using rule 86 (term -> factor .)
    MAYORIGUAL      reduce using rule 86 (term -> factor .)
    DESIGUALDAD     reduce using rule 86 (term -> factor .)
    NEGACION        reduce using rule 86 (term -> factor .)
    EQUALS          reduce using rule 86 (term -> factor .)
    MAS             reduce using rule 86 (term -> factor .)
    MENOS           reduce using rule 86 (term -> factor .)
    FINAL_DE_LINEA  reduce using rule 86 (term -> factor .)
    RPAREN          reduce using rule 86 (term -> factor .)
    RBRACKET        reduce using rule 86 (term -> factor .)
    COMA            reduce using rule 86 (term -> factor .)
    DOS_PUNTOS      reduce using rule 86 (term -> factor .)


state 37

    (83) addop -> MAS .

    STRING1         reduce using rule 83 (addop -> MAS .)
    STRING2         reduce using rule 83 (addop -> MAS .)
    LPAREN          reduce using rule 83 (addop -> MAS .)
    NUMERO          reduce using rule 83 (addop -> MAS .)
    VARIABLE        reduce using rule 83 (addop -> MAS .)
    IDENTIFIER      reduce using rule 83 (addop -> MAS .)


state 38

    (84) addop -> MENOS .

    STRING1         reduce using rule 84 (addop -> MENOS .)
    STRING2         reduce using rule 84 (addop -> MENOS .)
    LPAREN          reduce using rule 84 (addop -> MENOS .)
    NUMERO          reduce using rule 84 (addop -> MENOS .)
    VARIABLE        reduce using rule 84 (addop -> MENOS .)
    IDENTIFIER      reduce using rule 84 (addop -> MENOS .)


state 39

    (93) factor -> call .

    AUTODECREMENTO  reduce using rule 93 (factor -> call .)
    AUTOINCREMENTO  reduce using rule 93 (factor -> call .)
    MULTIPLICACION  reduce using rule 93 (factor -> call .)
    DIVISION        reduce using rule 93 (factor -> call .)
    MENORQUE        reduce using rule 93 (factor -> call .)
    MENORIGUAL      reduce using rule 93 (factor -> call .)
    MAYORQUE        reduce using rule 93 (factor -> call .)
    MAYORIGUAL      reduce using rule 93 (factor -> call .)
    DESIGUALDAD     reduce using rule 93 (factor -> call .)
    NEGACION        reduce using rule 93 (factor -> call .)
    EQUALS          reduce using rule 93 (factor -> call .)
    MAS             reduce using rule 93 (factor -> call .)
    MENOS           reduce using rule 93 (factor -> call .)
    FINAL_DE_LINEA  reduce using rule 93 (factor -> call .)
    RPAREN          reduce using rule 93 (factor -> call .)
    RBRACKET        reduce using rule 93 (factor -> call .)
    COMA            reduce using rule 93 (factor -> call .)
    DOS_PUNTOS      reduce using rule 93 (factor -> call .)


state 40

    (10) header_declaration -> MENORQUE PREGUNTA . PHP

    PHP             shift and go to state 89


state 41

    (1) program -> header_declaration declaration_list footer_declaration .

    $end            reduce using rule 1 (program -> header_declaration declaration_list footer_declaration .)


state 42

    (2) declaration_list -> declaration_list declaration .

    PREGUNTA        reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VARIABLE        reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    SWITCH          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CASE            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DEFAULT         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FOREACH         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FUNCTION        reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ECHO            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    FINAL_DE_LINEA  reduce using rule 2 (declaration_list -> declaration_list declaration .)
    COMA            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    NUMERO          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STRING1         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STRING2         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    MAS             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    MENOS           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IDENTIFIER      reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 43

    (11) footer_declaration -> PREGUNTA . MAYORQUE

    MAYORQUE        shift and go to state 90


state 44

    (16) var_declaration -> var_declaration2 FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    IF              reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    SWITCH          reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    CASE            reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    WHILE           reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    FOR             reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    FOREACH         reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    ECHO            reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    COMA            reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    NUMERO          reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    STRING1         reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    STRING2         reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    MAS             reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    MENOS           reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    LPAREN          reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    RETURN          reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 16 (var_declaration -> var_declaration2 FINAL_DE_LINEA .)


state 45

    (17) var_declaration -> VARIABLE LBRACKET . NUMERO RBRACKET FINAL_DE_LINEA
    (68) var_val -> VARIABLE LBRACKET . expression RBRACKET
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    NUMERO          shift and go to state 91
    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 92
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 46

    (59) selection_stmt -> VARIABLE relop . VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA

    VARIABLE        shift and go to state 93


state 47

    (19) var_declaration2 -> VARIABLE COMA . var_declaration2
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 95

state 48

    (20) var_declaration2 -> VARIABLE ASIGNACION . NUMERO COMA var_declaration2
    (21) var_declaration2 -> VARIABLE ASIGNACION . NUMERO
    (22) var_declaration2 -> VARIABLE ASIGNACION . VARIABLE COMA var_declaration2
    (23) var_declaration2 -> VARIABLE ASIGNACION . VARIABLE
    (25) var_declaration2 -> VARIABLE ASIGNACION . VARIABLE simple_expression
    (26) var_declaration2 -> VARIABLE ASIGNACION . LBRACKET NUMERO COMA var_declaration2
    (29) var_declaration2 -> VARIABLE ASIGNACION . LBRACKET STRING1 COMA var_declaration2

    NUMERO          shift and go to state 99
    VARIABLE        shift and go to state 98
    LBRACKET        shift and go to state 100


state 49

    (71) relop -> MENORQUE .

    VARIABLE        reduce using rule 71 (relop -> MENORQUE .)
    STRING1         reduce using rule 71 (relop -> MENORQUE .)
    STRING2         reduce using rule 71 (relop -> MENORQUE .)
    MAS             reduce using rule 71 (relop -> MENORQUE .)
    MENOS           reduce using rule 71 (relop -> MENORQUE .)
    LPAREN          reduce using rule 71 (relop -> MENORQUE .)
    NUMERO          reduce using rule 71 (relop -> MENORQUE .)
    IDENTIFIER      reduce using rule 71 (relop -> MENORQUE .)


state 50

    (72) relop -> MENORIGUAL .

    VARIABLE        reduce using rule 72 (relop -> MENORIGUAL .)
    STRING1         reduce using rule 72 (relop -> MENORIGUAL .)
    STRING2         reduce using rule 72 (relop -> MENORIGUAL .)
    MAS             reduce using rule 72 (relop -> MENORIGUAL .)
    MENOS           reduce using rule 72 (relop -> MENORIGUAL .)
    LPAREN          reduce using rule 72 (relop -> MENORIGUAL .)
    NUMERO          reduce using rule 72 (relop -> MENORIGUAL .)
    IDENTIFIER      reduce using rule 72 (relop -> MENORIGUAL .)


state 51

    (73) relop -> MAYORQUE .

    VARIABLE        reduce using rule 73 (relop -> MAYORQUE .)
    STRING1         reduce using rule 73 (relop -> MAYORQUE .)
    STRING2         reduce using rule 73 (relop -> MAYORQUE .)
    MAS             reduce using rule 73 (relop -> MAYORQUE .)
    MENOS           reduce using rule 73 (relop -> MAYORQUE .)
    LPAREN          reduce using rule 73 (relop -> MAYORQUE .)
    NUMERO          reduce using rule 73 (relop -> MAYORQUE .)
    IDENTIFIER      reduce using rule 73 (relop -> MAYORQUE .)


state 52

    (74) relop -> MAYORIGUAL .

    VARIABLE        reduce using rule 74 (relop -> MAYORIGUAL .)
    STRING1         reduce using rule 74 (relop -> MAYORIGUAL .)
    STRING2         reduce using rule 74 (relop -> MAYORIGUAL .)
    MAS             reduce using rule 74 (relop -> MAYORIGUAL .)
    MENOS           reduce using rule 74 (relop -> MAYORIGUAL .)
    LPAREN          reduce using rule 74 (relop -> MAYORIGUAL .)
    NUMERO          reduce using rule 74 (relop -> MAYORIGUAL .)
    IDENTIFIER      reduce using rule 74 (relop -> MAYORIGUAL .)


state 53

    (75) relop -> DESIGUALDAD .

    VARIABLE        reduce using rule 75 (relop -> DESIGUALDAD .)
    STRING1         reduce using rule 75 (relop -> DESIGUALDAD .)
    STRING2         reduce using rule 75 (relop -> DESIGUALDAD .)
    MAS             reduce using rule 75 (relop -> DESIGUALDAD .)
    MENOS           reduce using rule 75 (relop -> DESIGUALDAD .)
    LPAREN          reduce using rule 75 (relop -> DESIGUALDAD .)
    NUMERO          reduce using rule 75 (relop -> DESIGUALDAD .)
    IDENTIFIER      reduce using rule 75 (relop -> DESIGUALDAD .)


state 54

    (76) relop -> NEGACION .

    VARIABLE        reduce using rule 76 (relop -> NEGACION .)
    STRING1         reduce using rule 76 (relop -> NEGACION .)
    STRING2         reduce using rule 76 (relop -> NEGACION .)
    MAS             reduce using rule 76 (relop -> NEGACION .)
    MENOS           reduce using rule 76 (relop -> NEGACION .)
    LPAREN          reduce using rule 76 (relop -> NEGACION .)
    NUMERO          reduce using rule 76 (relop -> NEGACION .)
    IDENTIFIER      reduce using rule 76 (relop -> NEGACION .)


state 55

    (77) relop -> EQUALS .

    VARIABLE        reduce using rule 77 (relop -> EQUALS .)
    STRING1         reduce using rule 77 (relop -> EQUALS .)
    STRING2         reduce using rule 77 (relop -> EQUALS .)
    MAS             reduce using rule 77 (relop -> EQUALS .)
    MENOS           reduce using rule 77 (relop -> EQUALS .)
    LPAREN          reduce using rule 77 (relop -> EQUALS .)
    NUMERO          reduce using rule 77 (relop -> EQUALS .)
    IDENTIFIER      reduce using rule 77 (relop -> EQUALS .)


state 56

    (27) var_declaration2 -> NUMERO COMA . var_declaration2
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 101

state 57

    (28) var_declaration2 -> NUMERO RBRACKET .

    FINAL_DE_LINEA  reduce using rule 28 (var_declaration2 -> NUMERO RBRACKET .)


state 58

    (53) selection_stmt -> IF LPAREN . expression RPAREN statement
    (54) selection_stmt -> IF LPAREN . expression RPAREN statement ELSE statement
    (55) selection_stmt -> IF LPAREN . expression RPAREN statement ELSEIF statement
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 102
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 59

    (91) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 103


state 60

    (67) var_val -> VARIABLE .
    (68) var_val -> VARIABLE . LBRACKET expression RBRACKET

    ASIGNACION      reduce using rule 67 (var_val -> VARIABLE .)
    AUTODECREMENTO  reduce using rule 67 (var_val -> VARIABLE .)
    AUTOINCREMENTO  reduce using rule 67 (var_val -> VARIABLE .)
    MULTIPLICACION  reduce using rule 67 (var_val -> VARIABLE .)
    DIVISION        reduce using rule 67 (var_val -> VARIABLE .)
    MENORQUE        reduce using rule 67 (var_val -> VARIABLE .)
    MENORIGUAL      reduce using rule 67 (var_val -> VARIABLE .)
    MAYORQUE        reduce using rule 67 (var_val -> VARIABLE .)
    MAYORIGUAL      reduce using rule 67 (var_val -> VARIABLE .)
    DESIGUALDAD     reduce using rule 67 (var_val -> VARIABLE .)
    NEGACION        reduce using rule 67 (var_val -> VARIABLE .)
    EQUALS          reduce using rule 67 (var_val -> VARIABLE .)
    MAS             reduce using rule 67 (var_val -> VARIABLE .)
    MENOS           reduce using rule 67 (var_val -> VARIABLE .)
    RPAREN          reduce using rule 67 (var_val -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 67 (var_val -> VARIABLE .)
    RBRACKET        reduce using rule 67 (var_val -> VARIABLE .)
    COMA            reduce using rule 67 (var_val -> VARIABLE .)
    DOS_PUNTOS      reduce using rule 67 (var_val -> VARIABLE .)
    AS              reduce using rule 67 (var_val -> VARIABLE .)
    LBRACKET        shift and go to state 104


state 61

    (87) term -> STRING1 .

    AUTODECREMENTO  reduce using rule 87 (term -> STRING1 .)
    AUTOINCREMENTO  reduce using rule 87 (term -> STRING1 .)
    MULTIPLICACION  reduce using rule 87 (term -> STRING1 .)
    DIVISION        reduce using rule 87 (term -> STRING1 .)
    MENORQUE        reduce using rule 87 (term -> STRING1 .)
    MENORIGUAL      reduce using rule 87 (term -> STRING1 .)
    MAYORQUE        reduce using rule 87 (term -> STRING1 .)
    MAYORIGUAL      reduce using rule 87 (term -> STRING1 .)
    DESIGUALDAD     reduce using rule 87 (term -> STRING1 .)
    NEGACION        reduce using rule 87 (term -> STRING1 .)
    EQUALS          reduce using rule 87 (term -> STRING1 .)
    MAS             reduce using rule 87 (term -> STRING1 .)
    MENOS           reduce using rule 87 (term -> STRING1 .)
    RPAREN          reduce using rule 87 (term -> STRING1 .)
    FINAL_DE_LINEA  reduce using rule 87 (term -> STRING1 .)
    RBRACKET        reduce using rule 87 (term -> STRING1 .)
    COMA            reduce using rule 87 (term -> STRING1 .)
    DOS_PUNTOS      reduce using rule 87 (term -> STRING1 .)


state 62

    (94) factor -> NUMERO .

    AUTODECREMENTO  reduce using rule 94 (factor -> NUMERO .)
    AUTOINCREMENTO  reduce using rule 94 (factor -> NUMERO .)
    MULTIPLICACION  reduce using rule 94 (factor -> NUMERO .)
    DIVISION        reduce using rule 94 (factor -> NUMERO .)
    MENORQUE        reduce using rule 94 (factor -> NUMERO .)
    MENORIGUAL      reduce using rule 94 (factor -> NUMERO .)
    MAYORQUE        reduce using rule 94 (factor -> NUMERO .)
    MAYORIGUAL      reduce using rule 94 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 94 (factor -> NUMERO .)
    NEGACION        reduce using rule 94 (factor -> NUMERO .)
    EQUALS          reduce using rule 94 (factor -> NUMERO .)
    MAS             reduce using rule 94 (factor -> NUMERO .)
    MENOS           reduce using rule 94 (factor -> NUMERO .)
    RPAREN          reduce using rule 94 (factor -> NUMERO .)
    FINAL_DE_LINEA  reduce using rule 94 (factor -> NUMERO .)
    RBRACKET        reduce using rule 94 (factor -> NUMERO .)
    COMA            reduce using rule 94 (factor -> NUMERO .)
    DOS_PUNTOS      reduce using rule 94 (factor -> NUMERO .)


state 63

    (51) expression_stmt -> expression FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    IF              reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    SWITCH          reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    CASE            reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    WHILE           reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    FOR             reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    FOREACH         reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    ECHO            reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    COMA            reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    NUMERO          reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    STRING1         reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    STRING2         reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    MAS             reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    MENOS           reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    LPAREN          reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    BREAK           reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    ELSE            reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)
    RETURN          reduce using rule 51 (expression_stmt -> expression FINAL_DE_LINEA .)


state 64

    (56) selection_stmt -> SWITCH LPAREN . var_val RPAREN statement
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 60

    var_val                        shift and go to state 105

state 65

    (65) expression -> var_val ASIGNACION . expression
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    var_val                        shift and go to state 20
    expression                     shift and go to state 106
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 66

    (57) selection_stmt -> CASE NUMERO . DOS_PUNTOS statement BREAK FINAL_DE_LINEA

    DOS_PUNTOS      shift and go to state 107


state 67

    (58) selection_stmt -> DEFAULT DOS_PUNTOS . statement BREAK FINAL_DE_LINEA
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    statement                      shift and go to state 108
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    expression                     shift and go to state 18
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 68

    (60) iteration_stmt -> WHILE LPAREN . expression RPAREN statement
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 118
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 69

    (61) iteration_stmt -> FOR LPAREN . var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 119

state 70

    (69) simple_expression -> additive_expression relop . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    VARIABLE        shift and go to state 60
    IDENTIFIER      shift and go to state 28

    additive_expression            shift and go to state 120
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    var_val                        shift and go to state 83
    call                           shift and go to state 39

state 71

    (78) additive_expression -> additive_expression addop . term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    VARIABLE        shift and go to state 60
    IDENTIFIER      shift and go to state 28

    term                           shift and go to state 121
    factor                         shift and go to state 36
    var_val                        shift and go to state 83
    call                           shift and go to state 39

state 72

    (62) iteration_stmt -> FOREACH LPAREN . var_val AS var_val RPAREN statement
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 60

    var_val                        shift and go to state 122

state 73

    (32) fun_declaration -> FUNCTION IDENTIFIER . LPAREN params RPAREN statement

    LPAREN          shift and go to state 123


state 74

    (95) call -> IDENTIFIER LPAREN . args RPAREN
    (96) args -> . args_list
    (97) args -> . empty_function
    (98) args_list -> . args_list COMA expression
    (99) args_list -> . expression
    (100) empty_function -> .
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    RPAREN          reduce using rule 100 (empty_function -> .)
    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    args                           shift and go to state 124
    args_list                      shift and go to state 125
    empty_function                 shift and go to state 126
    expression                     shift and go to state 127
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 75

    (12) show_in_screen -> ECHO var_val . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 128


state 76

    (13) show_in_screen -> ECHO STRING1 . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 129


state 77

    (14) show_in_screen -> ECHO STRING2 . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 130


state 78

    (15) show_in_screen -> ECHO selection_stmt .

    PREGUNTA        reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    VARIABLE        reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    IF              reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    SWITCH          reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    CASE            reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    DEFAULT         reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    WHILE           reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    FOR             reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    FOREACH         reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    FUNCTION        reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    ECHO            reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    FINAL_DE_LINEA  reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    COMA            reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    NUMERO          reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    STRING1         reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    STRING2         reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    MAS             reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    MENOS           reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    LPAREN          reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    IDENTIFIER      reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    BREAK           reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    ELSE            reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    ELSEIF          reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    RLLAVE          reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    LLLAVE          reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)
    RETURN          reduce using rule 15 (show_in_screen -> ECHO selection_stmt .)


state 79

    (67) var_val -> VARIABLE .
    (68) var_val -> VARIABLE . LBRACKET expression RBRACKET
    (59) selection_stmt -> VARIABLE . relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (71) relop -> . MENORQUE
    (72) relop -> . MENORIGUAL
    (73) relop -> . MAYORQUE
    (74) relop -> . MAYORIGUAL
    (75) relop -> . DESIGUALDAD
    (76) relop -> . NEGACION
    (77) relop -> . EQUALS

    FINAL_DE_LINEA  reduce using rule 67 (var_val -> VARIABLE .)
    LBRACKET        shift and go to state 104
    MENORQUE        shift and go to state 49
    MENORIGUAL      shift and go to state 50
    MAYORQUE        shift and go to state 51
    MAYORIGUAL      shift and go to state 52
    DESIGUALDAD     shift and go to state 53
    NEGACION        shift and go to state 54
    EQUALS          shift and go to state 55

    relop                          shift and go to state 46

state 80

    (30) var_declaration2 -> STRING1 COMA . var_declaration2
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 131

state 81

    (31) var_declaration2 -> STRING1 RBRACKET .

    FINAL_DE_LINEA  reduce using rule 31 (var_declaration2 -> STRING1 RBRACKET .)


state 82

    (82) additive_expression -> addop term .
    (85) term -> term . mulop factor
    (89) mulop -> . MULTIPLICACION
    (90) mulop -> . DIVISION

    MENORQUE        reduce using rule 82 (additive_expression -> addop term .)
    MENORIGUAL      reduce using rule 82 (additive_expression -> addop term .)
    MAYORQUE        reduce using rule 82 (additive_expression -> addop term .)
    MAYORIGUAL      reduce using rule 82 (additive_expression -> addop term .)
    DESIGUALDAD     reduce using rule 82 (additive_expression -> addop term .)
    NEGACION        reduce using rule 82 (additive_expression -> addop term .)
    EQUALS          reduce using rule 82 (additive_expression -> addop term .)
    MAS             reduce using rule 82 (additive_expression -> addop term .)
    MENOS           reduce using rule 82 (additive_expression -> addop term .)
    FINAL_DE_LINEA  reduce using rule 82 (additive_expression -> addop term .)
    RPAREN          reduce using rule 82 (additive_expression -> addop term .)
    RBRACKET        reduce using rule 82 (additive_expression -> addop term .)
    COMA            reduce using rule 82 (additive_expression -> addop term .)
    DOS_PUNTOS      reduce using rule 82 (additive_expression -> addop term .)
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88

    mulop                          shift and go to state 86

state 83

    (92) factor -> var_val .

    MULTIPLICACION  reduce using rule 92 (factor -> var_val .)
    DIVISION        reduce using rule 92 (factor -> var_val .)
    MENORQUE        reduce using rule 92 (factor -> var_val .)
    MENORIGUAL      reduce using rule 92 (factor -> var_val .)
    MAYORQUE        reduce using rule 92 (factor -> var_val .)
    MAYORIGUAL      reduce using rule 92 (factor -> var_val .)
    DESIGUALDAD     reduce using rule 92 (factor -> var_val .)
    NEGACION        reduce using rule 92 (factor -> var_val .)
    EQUALS          reduce using rule 92 (factor -> var_val .)
    MAS             reduce using rule 92 (factor -> var_val .)
    MENOS           reduce using rule 92 (factor -> var_val .)
    FINAL_DE_LINEA  reduce using rule 92 (factor -> var_val .)
    RPAREN          reduce using rule 92 (factor -> var_val .)
    RBRACKET        reduce using rule 92 (factor -> var_val .)
    COMA            reduce using rule 92 (factor -> var_val .)
    DOS_PUNTOS      reduce using rule 92 (factor -> var_val .)
    AUTODECREMENTO  reduce using rule 92 (factor -> var_val .)
    AUTOINCREMENTO  reduce using rule 92 (factor -> var_val .)


state 84

    (80) additive_expression -> term AUTODECREMENTO .

    MENORQUE        reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    MENORIGUAL      reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    MAYORQUE        reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    MAYORIGUAL      reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    DESIGUALDAD     reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    NEGACION        reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    EQUALS          reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    MAS             reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    MENOS           reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    FINAL_DE_LINEA  reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    RPAREN          reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    RBRACKET        reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    COMA            reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)
    DOS_PUNTOS      reduce using rule 80 (additive_expression -> term AUTODECREMENTO .)


state 85

    (81) additive_expression -> term AUTOINCREMENTO .

    MENORQUE        reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    MENORIGUAL      reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    MAYORQUE        reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    MAYORIGUAL      reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    DESIGUALDAD     reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    NEGACION        reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    EQUALS          reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    MAS             reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    MENOS           reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    FINAL_DE_LINEA  reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    RPAREN          reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    RBRACKET        reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    COMA            reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)
    DOS_PUNTOS      reduce using rule 81 (additive_expression -> term AUTOINCREMENTO .)


state 86

    (85) term -> term mulop . factor
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    VARIABLE        shift and go to state 60
    IDENTIFIER      shift and go to state 28

    factor                         shift and go to state 132
    var_val                        shift and go to state 83
    call                           shift and go to state 39

state 87

    (89) mulop -> MULTIPLICACION .

    LPAREN          reduce using rule 89 (mulop -> MULTIPLICACION .)
    NUMERO          reduce using rule 89 (mulop -> MULTIPLICACION .)
    VARIABLE        reduce using rule 89 (mulop -> MULTIPLICACION .)
    IDENTIFIER      reduce using rule 89 (mulop -> MULTIPLICACION .)


state 88

    (90) mulop -> DIVISION .

    LPAREN          reduce using rule 90 (mulop -> DIVISION .)
    NUMERO          reduce using rule 90 (mulop -> DIVISION .)
    VARIABLE        reduce using rule 90 (mulop -> DIVISION .)
    IDENTIFIER      reduce using rule 90 (mulop -> DIVISION .)


state 89

    (10) header_declaration -> MENORQUE PREGUNTA PHP .

    VARIABLE        reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    IF              reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    SWITCH          reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    CASE            reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    DEFAULT         reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    WHILE           reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    FOR             reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    FOREACH         reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    FUNCTION        reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    ECHO            reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    FINAL_DE_LINEA  reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    COMA            reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    NUMERO          reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    STRING1         reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    STRING2         reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    MAS             reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    MENOS           reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    LPAREN          reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)
    IDENTIFIER      reduce using rule 10 (header_declaration -> MENORQUE PREGUNTA PHP .)


state 90

    (11) footer_declaration -> PREGUNTA MAYORQUE .

    $end            reduce using rule 11 (footer_declaration -> PREGUNTA MAYORQUE .)


state 91

    (17) var_declaration -> VARIABLE LBRACKET NUMERO . RBRACKET FINAL_DE_LINEA
    (94) factor -> NUMERO .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 133
    AUTODECREMENTO  reduce using rule 94 (factor -> NUMERO .)
    AUTOINCREMENTO  reduce using rule 94 (factor -> NUMERO .)
    MULTIPLICACION  reduce using rule 94 (factor -> NUMERO .)
    DIVISION        reduce using rule 94 (factor -> NUMERO .)
    MENORQUE        reduce using rule 94 (factor -> NUMERO .)
    MENORIGUAL      reduce using rule 94 (factor -> NUMERO .)
    MAYORQUE        reduce using rule 94 (factor -> NUMERO .)
    MAYORIGUAL      reduce using rule 94 (factor -> NUMERO .)
    DESIGUALDAD     reduce using rule 94 (factor -> NUMERO .)
    NEGACION        reduce using rule 94 (factor -> NUMERO .)
    EQUALS          reduce using rule 94 (factor -> NUMERO .)
    MAS             reduce using rule 94 (factor -> NUMERO .)
    MENOS           reduce using rule 94 (factor -> NUMERO .)

  ! RBRACKET        [ reduce using rule 94 (factor -> NUMERO .) ]


state 92

    (68) var_val -> VARIABLE LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 134


state 93

    (59) selection_stmt -> VARIABLE relop VARIABLE . PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA

    PREGUNTA        shift and go to state 135


state 94

    (18) var_declaration2 -> VARIABLE .
    (19) var_declaration2 -> VARIABLE . COMA var_declaration2
    (20) var_declaration2 -> VARIABLE . ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> VARIABLE . ASIGNACION NUMERO
    (22) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE
    (25) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> VARIABLE . ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (29) var_declaration2 -> VARIABLE . ASIGNACION LBRACKET STRING1 COMA var_declaration2

    FINAL_DE_LINEA  reduce using rule 18 (var_declaration2 -> VARIABLE .)
    COMA            shift and go to state 47
    ASIGNACION      shift and go to state 48


state 95

    (19) var_declaration2 -> VARIABLE COMA var_declaration2 .

    FINAL_DE_LINEA  reduce using rule 19 (var_declaration2 -> VARIABLE COMA var_declaration2 .)


state 96

    (27) var_declaration2 -> NUMERO . COMA var_declaration2
    (28) var_declaration2 -> NUMERO . RBRACKET

    COMA            shift and go to state 56
    RBRACKET        shift and go to state 57


state 97

    (30) var_declaration2 -> STRING1 . COMA var_declaration2
    (31) var_declaration2 -> STRING1 . RBRACKET

    COMA            shift and go to state 80
    RBRACKET        shift and go to state 81


state 98

    (22) var_declaration2 -> VARIABLE ASIGNACION VARIABLE . COMA var_declaration2
    (23) var_declaration2 -> VARIABLE ASIGNACION VARIABLE .
    (25) var_declaration2 -> VARIABLE ASIGNACION VARIABLE . simple_expression
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    COMA            shift and go to state 136
    FINAL_DE_LINEA  reduce using rule 23 (var_declaration2 -> VARIABLE ASIGNACION VARIABLE .)
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    VARIABLE        shift and go to state 60
    IDENTIFIER      shift and go to state 28

    simple_expression              shift and go to state 137
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    var_val                        shift and go to state 83
    call                           shift and go to state 39

state 99

    (20) var_declaration2 -> VARIABLE ASIGNACION NUMERO . COMA var_declaration2
    (21) var_declaration2 -> VARIABLE ASIGNACION NUMERO .

    COMA            shift and go to state 138
    FINAL_DE_LINEA  reduce using rule 21 (var_declaration2 -> VARIABLE ASIGNACION NUMERO .)


state 100

    (26) var_declaration2 -> VARIABLE ASIGNACION LBRACKET . NUMERO COMA var_declaration2
    (29) var_declaration2 -> VARIABLE ASIGNACION LBRACKET . STRING1 COMA var_declaration2

    NUMERO          shift and go to state 139
    STRING1         shift and go to state 140


state 101

    (27) var_declaration2 -> NUMERO COMA var_declaration2 .

    FINAL_DE_LINEA  reduce using rule 27 (var_declaration2 -> NUMERO COMA var_declaration2 .)


state 102

    (53) selection_stmt -> IF LPAREN expression . RPAREN statement
    (54) selection_stmt -> IF LPAREN expression . RPAREN statement ELSE statement
    (55) selection_stmt -> IF LPAREN expression . RPAREN statement ELSEIF statement

    RPAREN          shift and go to state 141


state 103

    (91) factor -> LPAREN expression RPAREN .

    AUTODECREMENTO  reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    AUTOINCREMENTO  reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    MULTIPLICACION  reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    DIVISION        reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    MENORQUE        reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    MENORIGUAL      reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    MAYORQUE        reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    MAYORIGUAL      reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    DESIGUALDAD     reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    NEGACION        reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    MAS             reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    MENOS           reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    FINAL_DE_LINEA  reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    COMA            reduce using rule 91 (factor -> LPAREN expression RPAREN .)
    DOS_PUNTOS      reduce using rule 91 (factor -> LPAREN expression RPAREN .)


state 104

    (68) var_val -> VARIABLE LBRACKET . expression RBRACKET
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 92
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 105

    (56) selection_stmt -> SWITCH LPAREN var_val . RPAREN statement

    RPAREN          shift and go to state 142


state 106

    (65) expression -> var_val ASIGNACION expression .

    FINAL_DE_LINEA  reduce using rule 65 (expression -> var_val ASIGNACION expression .)
    RPAREN          reduce using rule 65 (expression -> var_val ASIGNACION expression .)
    RBRACKET        reduce using rule 65 (expression -> var_val ASIGNACION expression .)
    COMA            reduce using rule 65 (expression -> var_val ASIGNACION expression .)
    DOS_PUNTOS      reduce using rule 65 (expression -> var_val ASIGNACION expression .)


state 107

    (57) selection_stmt -> CASE NUMERO DOS_PUNTOS . statement BREAK FINAL_DE_LINEA
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    statement                      shift and go to state 143
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    expression                     shift and go to state 18
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 108

    (58) selection_stmt -> DEFAULT DOS_PUNTOS statement . BREAK FINAL_DE_LINEA

    BREAK           shift and go to state 144


state 109

    (45) statement -> expression_stmt .

    BREAK           reduce using rule 45 (statement -> expression_stmt .)
    PREGUNTA        reduce using rule 45 (statement -> expression_stmt .)
    VARIABLE        reduce using rule 45 (statement -> expression_stmt .)
    IF              reduce using rule 45 (statement -> expression_stmt .)
    SWITCH          reduce using rule 45 (statement -> expression_stmt .)
    CASE            reduce using rule 45 (statement -> expression_stmt .)
    DEFAULT         reduce using rule 45 (statement -> expression_stmt .)
    WHILE           reduce using rule 45 (statement -> expression_stmt .)
    FOR             reduce using rule 45 (statement -> expression_stmt .)
    FOREACH         reduce using rule 45 (statement -> expression_stmt .)
    FUNCTION        reduce using rule 45 (statement -> expression_stmt .)
    ECHO            reduce using rule 45 (statement -> expression_stmt .)
    FINAL_DE_LINEA  reduce using rule 45 (statement -> expression_stmt .)
    COMA            reduce using rule 45 (statement -> expression_stmt .)
    NUMERO          reduce using rule 45 (statement -> expression_stmt .)
    STRING1         reduce using rule 45 (statement -> expression_stmt .)
    STRING2         reduce using rule 45 (statement -> expression_stmt .)
    MAS             reduce using rule 45 (statement -> expression_stmt .)
    MENOS           reduce using rule 45 (statement -> expression_stmt .)
    LPAREN          reduce using rule 45 (statement -> expression_stmt .)
    IDENTIFIER      reduce using rule 45 (statement -> expression_stmt .)
    ELSE            reduce using rule 45 (statement -> expression_stmt .)
    ELSEIF          reduce using rule 45 (statement -> expression_stmt .)
    RLLAVE          reduce using rule 45 (statement -> expression_stmt .)
    LLLAVE          reduce using rule 45 (statement -> expression_stmt .)
    RETURN          reduce using rule 45 (statement -> expression_stmt .)


state 110

    (46) statement -> compount_stmt .

    BREAK           reduce using rule 46 (statement -> compount_stmt .)
    PREGUNTA        reduce using rule 46 (statement -> compount_stmt .)
    VARIABLE        reduce using rule 46 (statement -> compount_stmt .)
    IF              reduce using rule 46 (statement -> compount_stmt .)
    SWITCH          reduce using rule 46 (statement -> compount_stmt .)
    CASE            reduce using rule 46 (statement -> compount_stmt .)
    DEFAULT         reduce using rule 46 (statement -> compount_stmt .)
    WHILE           reduce using rule 46 (statement -> compount_stmt .)
    FOR             reduce using rule 46 (statement -> compount_stmt .)
    FOREACH         reduce using rule 46 (statement -> compount_stmt .)
    FUNCTION        reduce using rule 46 (statement -> compount_stmt .)
    ECHO            reduce using rule 46 (statement -> compount_stmt .)
    FINAL_DE_LINEA  reduce using rule 46 (statement -> compount_stmt .)
    COMA            reduce using rule 46 (statement -> compount_stmt .)
    NUMERO          reduce using rule 46 (statement -> compount_stmt .)
    STRING1         reduce using rule 46 (statement -> compount_stmt .)
    STRING2         reduce using rule 46 (statement -> compount_stmt .)
    MAS             reduce using rule 46 (statement -> compount_stmt .)
    MENOS           reduce using rule 46 (statement -> compount_stmt .)
    LPAREN          reduce using rule 46 (statement -> compount_stmt .)
    IDENTIFIER      reduce using rule 46 (statement -> compount_stmt .)
    ELSE            reduce using rule 46 (statement -> compount_stmt .)
    ELSEIF          reduce using rule 46 (statement -> compount_stmt .)
    RLLAVE          reduce using rule 46 (statement -> compount_stmt .)
    LLLAVE          reduce using rule 46 (statement -> compount_stmt .)
    RETURN          reduce using rule 46 (statement -> compount_stmt .)


state 111

    (47) statement -> selection_stmt .

    BREAK           reduce using rule 47 (statement -> selection_stmt .)
    PREGUNTA        reduce using rule 47 (statement -> selection_stmt .)
    VARIABLE        reduce using rule 47 (statement -> selection_stmt .)
    IF              reduce using rule 47 (statement -> selection_stmt .)
    SWITCH          reduce using rule 47 (statement -> selection_stmt .)
    CASE            reduce using rule 47 (statement -> selection_stmt .)
    DEFAULT         reduce using rule 47 (statement -> selection_stmt .)
    WHILE           reduce using rule 47 (statement -> selection_stmt .)
    FOR             reduce using rule 47 (statement -> selection_stmt .)
    FOREACH         reduce using rule 47 (statement -> selection_stmt .)
    FUNCTION        reduce using rule 47 (statement -> selection_stmt .)
    ECHO            reduce using rule 47 (statement -> selection_stmt .)
    FINAL_DE_LINEA  reduce using rule 47 (statement -> selection_stmt .)
    COMA            reduce using rule 47 (statement -> selection_stmt .)
    NUMERO          reduce using rule 47 (statement -> selection_stmt .)
    STRING1         reduce using rule 47 (statement -> selection_stmt .)
    STRING2         reduce using rule 47 (statement -> selection_stmt .)
    MAS             reduce using rule 47 (statement -> selection_stmt .)
    MENOS           reduce using rule 47 (statement -> selection_stmt .)
    LPAREN          reduce using rule 47 (statement -> selection_stmt .)
    IDENTIFIER      reduce using rule 47 (statement -> selection_stmt .)
    ELSE            reduce using rule 47 (statement -> selection_stmt .)
    ELSEIF          reduce using rule 47 (statement -> selection_stmt .)
    RLLAVE          reduce using rule 47 (statement -> selection_stmt .)
    LLLAVE          reduce using rule 47 (statement -> selection_stmt .)
    RETURN          reduce using rule 47 (statement -> selection_stmt .)


state 112

    (48) statement -> iteration_stmt .

    BREAK           reduce using rule 48 (statement -> iteration_stmt .)
    PREGUNTA        reduce using rule 48 (statement -> iteration_stmt .)
    VARIABLE        reduce using rule 48 (statement -> iteration_stmt .)
    IF              reduce using rule 48 (statement -> iteration_stmt .)
    SWITCH          reduce using rule 48 (statement -> iteration_stmt .)
    CASE            reduce using rule 48 (statement -> iteration_stmt .)
    DEFAULT         reduce using rule 48 (statement -> iteration_stmt .)
    WHILE           reduce using rule 48 (statement -> iteration_stmt .)
    FOR             reduce using rule 48 (statement -> iteration_stmt .)
    FOREACH         reduce using rule 48 (statement -> iteration_stmt .)
    FUNCTION        reduce using rule 48 (statement -> iteration_stmt .)
    ECHO            reduce using rule 48 (statement -> iteration_stmt .)
    FINAL_DE_LINEA  reduce using rule 48 (statement -> iteration_stmt .)
    COMA            reduce using rule 48 (statement -> iteration_stmt .)
    NUMERO          reduce using rule 48 (statement -> iteration_stmt .)
    STRING1         reduce using rule 48 (statement -> iteration_stmt .)
    STRING2         reduce using rule 48 (statement -> iteration_stmt .)
    MAS             reduce using rule 48 (statement -> iteration_stmt .)
    MENOS           reduce using rule 48 (statement -> iteration_stmt .)
    LPAREN          reduce using rule 48 (statement -> iteration_stmt .)
    IDENTIFIER      reduce using rule 48 (statement -> iteration_stmt .)
    ELSE            reduce using rule 48 (statement -> iteration_stmt .)
    ELSEIF          reduce using rule 48 (statement -> iteration_stmt .)
    RLLAVE          reduce using rule 48 (statement -> iteration_stmt .)
    LLLAVE          reduce using rule 48 (statement -> iteration_stmt .)
    RETURN          reduce using rule 48 (statement -> iteration_stmt .)


state 113

    (49) statement -> show_in_screen .

    BREAK           reduce using rule 49 (statement -> show_in_screen .)
    PREGUNTA        reduce using rule 49 (statement -> show_in_screen .)
    VARIABLE        reduce using rule 49 (statement -> show_in_screen .)
    IF              reduce using rule 49 (statement -> show_in_screen .)
    SWITCH          reduce using rule 49 (statement -> show_in_screen .)
    CASE            reduce using rule 49 (statement -> show_in_screen .)
    DEFAULT         reduce using rule 49 (statement -> show_in_screen .)
    WHILE           reduce using rule 49 (statement -> show_in_screen .)
    FOR             reduce using rule 49 (statement -> show_in_screen .)
    FOREACH         reduce using rule 49 (statement -> show_in_screen .)
    FUNCTION        reduce using rule 49 (statement -> show_in_screen .)
    ECHO            reduce using rule 49 (statement -> show_in_screen .)
    FINAL_DE_LINEA  reduce using rule 49 (statement -> show_in_screen .)
    COMA            reduce using rule 49 (statement -> show_in_screen .)
    NUMERO          reduce using rule 49 (statement -> show_in_screen .)
    STRING1         reduce using rule 49 (statement -> show_in_screen .)
    STRING2         reduce using rule 49 (statement -> show_in_screen .)
    MAS             reduce using rule 49 (statement -> show_in_screen .)
    MENOS           reduce using rule 49 (statement -> show_in_screen .)
    LPAREN          reduce using rule 49 (statement -> show_in_screen .)
    IDENTIFIER      reduce using rule 49 (statement -> show_in_screen .)
    ELSE            reduce using rule 49 (statement -> show_in_screen .)
    ELSEIF          reduce using rule 49 (statement -> show_in_screen .)
    RLLAVE          reduce using rule 49 (statement -> show_in_screen .)
    LLLAVE          reduce using rule 49 (statement -> show_in_screen .)
    RETURN          reduce using rule 49 (statement -> show_in_screen .)


state 114

    (50) statement -> return_stmt .

    BREAK           reduce using rule 50 (statement -> return_stmt .)
    PREGUNTA        reduce using rule 50 (statement -> return_stmt .)
    VARIABLE        reduce using rule 50 (statement -> return_stmt .)
    IF              reduce using rule 50 (statement -> return_stmt .)
    SWITCH          reduce using rule 50 (statement -> return_stmt .)
    CASE            reduce using rule 50 (statement -> return_stmt .)
    DEFAULT         reduce using rule 50 (statement -> return_stmt .)
    WHILE           reduce using rule 50 (statement -> return_stmt .)
    FOR             reduce using rule 50 (statement -> return_stmt .)
    FOREACH         reduce using rule 50 (statement -> return_stmt .)
    FUNCTION        reduce using rule 50 (statement -> return_stmt .)
    ECHO            reduce using rule 50 (statement -> return_stmt .)
    FINAL_DE_LINEA  reduce using rule 50 (statement -> return_stmt .)
    COMA            reduce using rule 50 (statement -> return_stmt .)
    NUMERO          reduce using rule 50 (statement -> return_stmt .)
    STRING1         reduce using rule 50 (statement -> return_stmt .)
    STRING2         reduce using rule 50 (statement -> return_stmt .)
    MAS             reduce using rule 50 (statement -> return_stmt .)
    MENOS           reduce using rule 50 (statement -> return_stmt .)
    LPAREN          reduce using rule 50 (statement -> return_stmt .)
    IDENTIFIER      reduce using rule 50 (statement -> return_stmt .)
    ELSE            reduce using rule 50 (statement -> return_stmt .)
    ELSEIF          reduce using rule 50 (statement -> return_stmt .)
    RLLAVE          reduce using rule 50 (statement -> return_stmt .)
    LLLAVE          reduce using rule 50 (statement -> return_stmt .)
    RETURN          reduce using rule 50 (statement -> return_stmt .)


state 115

    (39) compount_stmt -> LLLAVE . local_declarations statement_list RLLAVE
    (40) local_declarations -> . var_declaration
    (41) local_declarations -> . empty_function
    (16) var_declaration -> . var_declaration2 FINAL_DE_LINEA
    (17) var_declaration -> . VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA
    (100) empty_function -> .
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for STRING1 resolved as shift
    VARIABLE        shift and go to state 148
    FINAL_DE_LINEA  reduce using rule 100 (empty_function -> .)
    LLLAVE          reduce using rule 100 (empty_function -> .)
    IF              reduce using rule 100 (empty_function -> .)
    SWITCH          reduce using rule 100 (empty_function -> .)
    CASE            reduce using rule 100 (empty_function -> .)
    DEFAULT         reduce using rule 100 (empty_function -> .)
    WHILE           reduce using rule 100 (empty_function -> .)
    FOR             reduce using rule 100 (empty_function -> .)
    FOREACH         reduce using rule 100 (empty_function -> .)
    ECHO            reduce using rule 100 (empty_function -> .)
    RETURN          reduce using rule 100 (empty_function -> .)
    STRING2         reduce using rule 100 (empty_function -> .)
    MAS             reduce using rule 100 (empty_function -> .)
    MENOS           reduce using rule 100 (empty_function -> .)
    LPAREN          reduce using rule 100 (empty_function -> .)
    IDENTIFIER      reduce using rule 100 (empty_function -> .)
    RLLAVE          reduce using rule 100 (empty_function -> .)
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

  ! VARIABLE        [ reduce using rule 100 (empty_function -> .) ]
  ! STRING1         [ reduce using rule 100 (empty_function -> .) ]
  ! NUMERO          [ reduce using rule 100 (empty_function -> .) ]

    local_declarations             shift and go to state 145
    var_declaration                shift and go to state 146
    empty_function                 shift and go to state 147
    var_declaration2               shift and go to state 12

state 116

    (59) selection_stmt -> VARIABLE . relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (67) var_val -> VARIABLE .
    (68) var_val -> VARIABLE . LBRACKET expression RBRACKET
    (71) relop -> . MENORQUE
    (72) relop -> . MENORIGUAL
    (73) relop -> . MAYORQUE
    (74) relop -> . MAYORIGUAL
    (75) relop -> . DESIGUALDAD
    (76) relop -> . NEGACION
    (77) relop -> . EQUALS

  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for NEGACION resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    ASIGNACION      reduce using rule 67 (var_val -> VARIABLE .)
    AUTODECREMENTO  reduce using rule 67 (var_val -> VARIABLE .)
    AUTOINCREMENTO  reduce using rule 67 (var_val -> VARIABLE .)
    MULTIPLICACION  reduce using rule 67 (var_val -> VARIABLE .)
    DIVISION        reduce using rule 67 (var_val -> VARIABLE .)
    MAS             reduce using rule 67 (var_val -> VARIABLE .)
    MENOS           reduce using rule 67 (var_val -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 67 (var_val -> VARIABLE .)
    LBRACKET        shift and go to state 104
    MENORQUE        shift and go to state 49
    MENORIGUAL      shift and go to state 50
    MAYORQUE        shift and go to state 51
    MAYORIGUAL      shift and go to state 52
    DESIGUALDAD     shift and go to state 53
    NEGACION        shift and go to state 54
    EQUALS          shift and go to state 55

  ! MENORQUE        [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! MENORIGUAL      [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! MAYORQUE        [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! MAYORIGUAL      [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! DESIGUALDAD     [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! NEGACION        [ reduce using rule 67 (var_val -> VARIABLE .) ]
  ! EQUALS          [ reduce using rule 67 (var_val -> VARIABLE .) ]

    relop                          shift and go to state 46

state 117

    (63) return_stmt -> RETURN . FINAL_DE_LINEA
    (64) return_stmt -> RETURN . expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 149
    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 150
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 118

    (60) iteration_stmt -> WHILE LPAREN expression . RPAREN statement

    RPAREN          shift and go to state 151


state 119

    (61) iteration_stmt -> FOR LPAREN var_declaration2 . FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement

    FINAL_DE_LINEA  shift and go to state 152


state 120

    (69) simple_expression -> additive_expression relop additive_expression .
    (78) additive_expression -> additive_expression . addop term
    (83) addop -> . MAS
    (84) addop -> . MENOS

    FINAL_DE_LINEA  reduce using rule 69 (simple_expression -> additive_expression relop additive_expression .)
    RPAREN          reduce using rule 69 (simple_expression -> additive_expression relop additive_expression .)
    RBRACKET        reduce using rule 69 (simple_expression -> additive_expression relop additive_expression .)
    COMA            reduce using rule 69 (simple_expression -> additive_expression relop additive_expression .)
    DOS_PUNTOS      reduce using rule 69 (simple_expression -> additive_expression relop additive_expression .)
    MAS             shift and go to state 37
    MENOS           shift and go to state 38

    addop                          shift and go to state 71

state 121

    (78) additive_expression -> additive_expression addop term .
    (85) term -> term . mulop factor
    (89) mulop -> . MULTIPLICACION
    (90) mulop -> . DIVISION

    MENORQUE        reduce using rule 78 (additive_expression -> additive_expression addop term .)
    MENORIGUAL      reduce using rule 78 (additive_expression -> additive_expression addop term .)
    MAYORQUE        reduce using rule 78 (additive_expression -> additive_expression addop term .)
    MAYORIGUAL      reduce using rule 78 (additive_expression -> additive_expression addop term .)
    DESIGUALDAD     reduce using rule 78 (additive_expression -> additive_expression addop term .)
    NEGACION        reduce using rule 78 (additive_expression -> additive_expression addop term .)
    EQUALS          reduce using rule 78 (additive_expression -> additive_expression addop term .)
    MAS             reduce using rule 78 (additive_expression -> additive_expression addop term .)
    MENOS           reduce using rule 78 (additive_expression -> additive_expression addop term .)
    FINAL_DE_LINEA  reduce using rule 78 (additive_expression -> additive_expression addop term .)
    RPAREN          reduce using rule 78 (additive_expression -> additive_expression addop term .)
    RBRACKET        reduce using rule 78 (additive_expression -> additive_expression addop term .)
    COMA            reduce using rule 78 (additive_expression -> additive_expression addop term .)
    DOS_PUNTOS      reduce using rule 78 (additive_expression -> additive_expression addop term .)
    MULTIPLICACION  shift and go to state 87
    DIVISION        shift and go to state 88

    mulop                          shift and go to state 86

state 122

    (62) iteration_stmt -> FOREACH LPAREN var_val . AS var_val RPAREN statement

    AS              shift and go to state 153


state 123

    (32) fun_declaration -> FUNCTION IDENTIFIER LPAREN . params RPAREN statement
    (33) params -> . param_list
    (34) param_list -> . param_list COMA param
    (35) param_list -> . param
    (36) param -> . VARIABLE
    (37) param -> . VARIABLE LBRACKET RBRACKET
    (38) param -> . empty_function
    (100) empty_function -> .

    VARIABLE        shift and go to state 157
    COMA            reduce using rule 100 (empty_function -> .)
    RPAREN          reduce using rule 100 (empty_function -> .)

    params                         shift and go to state 154
    param_list                     shift and go to state 155
    param                          shift and go to state 156
    empty_function                 shift and go to state 158

state 124

    (95) call -> IDENTIFIER LPAREN args . RPAREN

    RPAREN          shift and go to state 159


state 125

    (96) args -> args_list .
    (98) args_list -> args_list . COMA expression

    RPAREN          reduce using rule 96 (args -> args_list .)
    COMA            shift and go to state 160


state 126

    (97) args -> empty_function .

    RPAREN          reduce using rule 97 (args -> empty_function .)


state 127

    (99) args_list -> expression .

    COMA            reduce using rule 99 (args_list -> expression .)
    RPAREN          reduce using rule 99 (args_list -> expression .)


state 128

    (12) show_in_screen -> ECHO var_val FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    IF              reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    SWITCH          reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    CASE            reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    WHILE           reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    FOR             reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    FOREACH         reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    ECHO            reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    COMA            reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    NUMERO          reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    STRING1         reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    STRING2         reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    MAS             reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    MENOS           reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    LPAREN          reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    BREAK           reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    ELSE            reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)
    RETURN          reduce using rule 12 (show_in_screen -> ECHO var_val FINAL_DE_LINEA .)


state 129

    (13) show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    IF              reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    SWITCH          reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    CASE            reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    WHILE           reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    FOR             reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    FOREACH         reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    ECHO            reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    COMA            reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    NUMERO          reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    STRING1         reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    STRING2         reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    MAS             reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    MENOS           reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    LPAREN          reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    BREAK           reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    ELSE            reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)
    RETURN          reduce using rule 13 (show_in_screen -> ECHO STRING1 FINAL_DE_LINEA .)


state 130

    (14) show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    IF              reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    SWITCH          reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    CASE            reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    WHILE           reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    FOR             reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    FOREACH         reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    ECHO            reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    COMA            reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    NUMERO          reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    STRING1         reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    STRING2         reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    MAS             reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    MENOS           reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    LPAREN          reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    BREAK           reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    ELSE            reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)
    RETURN          reduce using rule 14 (show_in_screen -> ECHO STRING2 FINAL_DE_LINEA .)


state 131

    (30) var_declaration2 -> STRING1 COMA var_declaration2 .

    FINAL_DE_LINEA  reduce using rule 30 (var_declaration2 -> STRING1 COMA var_declaration2 .)


state 132

    (85) term -> term mulop factor .

    AUTODECREMENTO  reduce using rule 85 (term -> term mulop factor .)
    AUTOINCREMENTO  reduce using rule 85 (term -> term mulop factor .)
    MULTIPLICACION  reduce using rule 85 (term -> term mulop factor .)
    DIVISION        reduce using rule 85 (term -> term mulop factor .)
    MENORQUE        reduce using rule 85 (term -> term mulop factor .)
    MENORIGUAL      reduce using rule 85 (term -> term mulop factor .)
    MAYORQUE        reduce using rule 85 (term -> term mulop factor .)
    MAYORIGUAL      reduce using rule 85 (term -> term mulop factor .)
    DESIGUALDAD     reduce using rule 85 (term -> term mulop factor .)
    NEGACION        reduce using rule 85 (term -> term mulop factor .)
    EQUALS          reduce using rule 85 (term -> term mulop factor .)
    MAS             reduce using rule 85 (term -> term mulop factor .)
    MENOS           reduce using rule 85 (term -> term mulop factor .)
    FINAL_DE_LINEA  reduce using rule 85 (term -> term mulop factor .)
    RPAREN          reduce using rule 85 (term -> term mulop factor .)
    RBRACKET        reduce using rule 85 (term -> term mulop factor .)
    COMA            reduce using rule 85 (term -> term mulop factor .)
    DOS_PUNTOS      reduce using rule 85 (term -> term mulop factor .)


state 133

    (17) var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 161


state 134

    (68) var_val -> VARIABLE LBRACKET expression RBRACKET .

    ASIGNACION      reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    AUTODECREMENTO  reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    AUTOINCREMENTO  reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    MULTIPLICACION  reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    DIVISION        reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    MENORQUE        reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    MENORIGUAL      reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    MAYORQUE        reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    MAYORIGUAL      reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    DESIGUALDAD     reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    NEGACION        reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    MAS             reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    MENOS           reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    FINAL_DE_LINEA  reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    COMA            reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    DOS_PUNTOS      reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)
    AS              reduce using rule 68 (var_val -> VARIABLE LBRACKET expression RBRACKET .)


state 135

    (59) selection_stmt -> VARIABLE relop VARIABLE PREGUNTA . expression DOS_PUNTOS expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 162
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 136

    (22) var_declaration2 -> VARIABLE ASIGNACION VARIABLE COMA . var_declaration2
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 163

state 137

    (25) var_declaration2 -> VARIABLE ASIGNACION VARIABLE simple_expression .

    FINAL_DE_LINEA  reduce using rule 25 (var_declaration2 -> VARIABLE ASIGNACION VARIABLE simple_expression .)


state 138

    (20) var_declaration2 -> VARIABLE ASIGNACION NUMERO COMA . var_declaration2
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 164

state 139

    (26) var_declaration2 -> VARIABLE ASIGNACION LBRACKET NUMERO . COMA var_declaration2

    COMA            shift and go to state 165


state 140

    (29) var_declaration2 -> VARIABLE ASIGNACION LBRACKET STRING1 . COMA var_declaration2

    COMA            shift and go to state 166


state 141

    (53) selection_stmt -> IF LPAREN expression RPAREN . statement
    (54) selection_stmt -> IF LPAREN expression RPAREN . statement ELSE statement
    (55) selection_stmt -> IF LPAREN expression RPAREN . statement ELSEIF statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 18
    statement                      shift and go to state 167
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 142

    (56) selection_stmt -> SWITCH LPAREN var_val RPAREN . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    var_val                        shift and go to state 20
    statement                      shift and go to state 168
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    expression                     shift and go to state 18
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 143

    (57) selection_stmt -> CASE NUMERO DOS_PUNTOS statement . BREAK FINAL_DE_LINEA

    BREAK           shift and go to state 169


state 144

    (58) selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 170


state 145

    (39) compount_stmt -> LLLAVE local_declarations . statement_list RLLAVE
    (42) statement_list -> . statement_list statement
    (43) statement_list -> . statement
    (44) statement_list -> . empty_function
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (100) empty_function -> .
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

  ! shift/reduce conflict for FINAL_DE_LINEA resolved as shift
  ! shift/reduce conflict for LLLAVE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for FOREACH resolved as shift
  ! shift/reduce conflict for ECHO resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for STRING1 resolved as shift
  ! shift/reduce conflict for STRING2 resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMERO resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
    RLLAVE          reduce using rule 100 (empty_function -> .)
    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

  ! FINAL_DE_LINEA  [ reduce using rule 100 (empty_function -> .) ]
  ! LLLAVE          [ reduce using rule 100 (empty_function -> .) ]
  ! IF              [ reduce using rule 100 (empty_function -> .) ]
  ! SWITCH          [ reduce using rule 100 (empty_function -> .) ]
  ! CASE            [ reduce using rule 100 (empty_function -> .) ]
  ! DEFAULT         [ reduce using rule 100 (empty_function -> .) ]
  ! VARIABLE        [ reduce using rule 100 (empty_function -> .) ]
  ! WHILE           [ reduce using rule 100 (empty_function -> .) ]
  ! FOR             [ reduce using rule 100 (empty_function -> .) ]
  ! FOREACH         [ reduce using rule 100 (empty_function -> .) ]
  ! ECHO            [ reduce using rule 100 (empty_function -> .) ]
  ! RETURN          [ reduce using rule 100 (empty_function -> .) ]
  ! STRING1         [ reduce using rule 100 (empty_function -> .) ]
  ! STRING2         [ reduce using rule 100 (empty_function -> .) ]
  ! MAS             [ reduce using rule 100 (empty_function -> .) ]
  ! MENOS           [ reduce using rule 100 (empty_function -> .) ]
  ! LPAREN          [ reduce using rule 100 (empty_function -> .) ]
  ! NUMERO          [ reduce using rule 100 (empty_function -> .) ]
  ! IDENTIFIER      [ reduce using rule 100 (empty_function -> .) ]

    statement_list                 shift and go to state 171
    statement                      shift and go to state 172
    empty_function                 shift and go to state 173
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    expression                     shift and go to state 18
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 146

    (40) local_declarations -> var_declaration .

    FINAL_DE_LINEA  reduce using rule 40 (local_declarations -> var_declaration .)
    LLLAVE          reduce using rule 40 (local_declarations -> var_declaration .)
    IF              reduce using rule 40 (local_declarations -> var_declaration .)
    SWITCH          reduce using rule 40 (local_declarations -> var_declaration .)
    CASE            reduce using rule 40 (local_declarations -> var_declaration .)
    DEFAULT         reduce using rule 40 (local_declarations -> var_declaration .)
    VARIABLE        reduce using rule 40 (local_declarations -> var_declaration .)
    WHILE           reduce using rule 40 (local_declarations -> var_declaration .)
    FOR             reduce using rule 40 (local_declarations -> var_declaration .)
    FOREACH         reduce using rule 40 (local_declarations -> var_declaration .)
    ECHO            reduce using rule 40 (local_declarations -> var_declaration .)
    RETURN          reduce using rule 40 (local_declarations -> var_declaration .)
    STRING1         reduce using rule 40 (local_declarations -> var_declaration .)
    STRING2         reduce using rule 40 (local_declarations -> var_declaration .)
    MAS             reduce using rule 40 (local_declarations -> var_declaration .)
    MENOS           reduce using rule 40 (local_declarations -> var_declaration .)
    LPAREN          reduce using rule 40 (local_declarations -> var_declaration .)
    NUMERO          reduce using rule 40 (local_declarations -> var_declaration .)
    IDENTIFIER      reduce using rule 40 (local_declarations -> var_declaration .)
    RLLAVE          reduce using rule 40 (local_declarations -> var_declaration .)


state 147

    (41) local_declarations -> empty_function .

    FINAL_DE_LINEA  reduce using rule 41 (local_declarations -> empty_function .)
    LLLAVE          reduce using rule 41 (local_declarations -> empty_function .)
    IF              reduce using rule 41 (local_declarations -> empty_function .)
    SWITCH          reduce using rule 41 (local_declarations -> empty_function .)
    CASE            reduce using rule 41 (local_declarations -> empty_function .)
    DEFAULT         reduce using rule 41 (local_declarations -> empty_function .)
    VARIABLE        reduce using rule 41 (local_declarations -> empty_function .)
    WHILE           reduce using rule 41 (local_declarations -> empty_function .)
    FOR             reduce using rule 41 (local_declarations -> empty_function .)
    FOREACH         reduce using rule 41 (local_declarations -> empty_function .)
    ECHO            reduce using rule 41 (local_declarations -> empty_function .)
    RETURN          reduce using rule 41 (local_declarations -> empty_function .)
    STRING1         reduce using rule 41 (local_declarations -> empty_function .)
    STRING2         reduce using rule 41 (local_declarations -> empty_function .)
    MAS             reduce using rule 41 (local_declarations -> empty_function .)
    MENOS           reduce using rule 41 (local_declarations -> empty_function .)
    LPAREN          reduce using rule 41 (local_declarations -> empty_function .)
    NUMERO          reduce using rule 41 (local_declarations -> empty_function .)
    IDENTIFIER      reduce using rule 41 (local_declarations -> empty_function .)
    RLLAVE          reduce using rule 41 (local_declarations -> empty_function .)


state 148

    (17) var_declaration -> VARIABLE . LBRACKET NUMERO RBRACKET FINAL_DE_LINEA
    (18) var_declaration2 -> VARIABLE .
    (19) var_declaration2 -> VARIABLE . COMA var_declaration2
    (20) var_declaration2 -> VARIABLE . ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> VARIABLE . ASIGNACION NUMERO
    (22) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE
    (25) var_declaration2 -> VARIABLE . ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> VARIABLE . ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (29) var_declaration2 -> VARIABLE . ASIGNACION LBRACKET STRING1 COMA var_declaration2

    LBRACKET        shift and go to state 174
    FINAL_DE_LINEA  reduce using rule 18 (var_declaration2 -> VARIABLE .)
    COMA            shift and go to state 47
    ASIGNACION      shift and go to state 48


state 149

    (63) return_stmt -> RETURN FINAL_DE_LINEA .

    BREAK           reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    PREGUNTA        reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    IF              reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    SWITCH          reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    CASE            reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    WHILE           reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    FOR             reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    FOREACH         reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    ECHO            reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    COMA            reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    NUMERO          reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    STRING1         reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    STRING2         reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    MAS             reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    MENOS           reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    LPAREN          reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    ELSE            reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)
    RETURN          reduce using rule 63 (return_stmt -> RETURN FINAL_DE_LINEA .)


state 150

    (64) return_stmt -> RETURN expression . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 175


state 151

    (60) iteration_stmt -> WHILE LPAREN expression RPAREN . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 18
    statement                      shift and go to state 176
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 152

    (61) iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA . expression FINAL_DE_LINEA additive_expression RPAREN statement
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 177
    additive_expression            shift and go to state 25
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 153

    (62) iteration_stmt -> FOREACH LPAREN var_val AS . var_val RPAREN statement
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET

    VARIABLE        shift and go to state 60

    var_val                        shift and go to state 178

state 154

    (32) fun_declaration -> FUNCTION IDENTIFIER LPAREN params . RPAREN statement

    RPAREN          shift and go to state 179


state 155

    (33) params -> param_list .
    (34) param_list -> param_list . COMA param

    RPAREN          reduce using rule 33 (params -> param_list .)
    COMA            shift and go to state 180


state 156

    (35) param_list -> param .

    COMA            reduce using rule 35 (param_list -> param .)
    RPAREN          reduce using rule 35 (param_list -> param .)


state 157

    (36) param -> VARIABLE .
    (37) param -> VARIABLE . LBRACKET RBRACKET

    COMA            reduce using rule 36 (param -> VARIABLE .)
    RPAREN          reduce using rule 36 (param -> VARIABLE .)
    LBRACKET        shift and go to state 181


state 158

    (38) param -> empty_function .

    COMA            reduce using rule 38 (param -> empty_function .)
    RPAREN          reduce using rule 38 (param -> empty_function .)


state 159

    (95) call -> IDENTIFIER LPAREN args RPAREN .

    AUTODECREMENTO  reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    AUTOINCREMENTO  reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    MULTIPLICACION  reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    DIVISION        reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    MENORQUE        reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    MENORIGUAL      reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    MAYORQUE        reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    MAYORIGUAL      reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    DESIGUALDAD     reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    NEGACION        reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    EQUALS          reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    MAS             reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    MENOS           reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    FINAL_DE_LINEA  reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    RPAREN          reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    RBRACKET        reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    COMA            reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)
    DOS_PUNTOS      reduce using rule 95 (call -> IDENTIFIER LPAREN args RPAREN .)


state 160

    (98) args_list -> args_list COMA . expression
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 182
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 161

    (17) var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    IF              reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    SWITCH          reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    CASE            reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    WHILE           reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    FOR             reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    FOREACH         reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    ECHO            reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    COMA            reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    NUMERO          reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    STRING1         reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    STRING2         reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    MAS             reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    MENOS           reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    LPAREN          reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    RETURN          reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 17 (var_declaration -> VARIABLE LBRACKET NUMERO RBRACKET FINAL_DE_LINEA .)


state 162

    (59) selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression . DOS_PUNTOS expression FINAL_DE_LINEA

    DOS_PUNTOS      shift and go to state 183


state 163

    (22) var_declaration2 -> VARIABLE ASIGNACION VARIABLE COMA var_declaration2 .

    FINAL_DE_LINEA  reduce using rule 22 (var_declaration2 -> VARIABLE ASIGNACION VARIABLE COMA var_declaration2 .)


state 164

    (20) var_declaration2 -> VARIABLE ASIGNACION NUMERO COMA var_declaration2 .

    FINAL_DE_LINEA  reduce using rule 20 (var_declaration2 -> VARIABLE ASIGNACION NUMERO COMA var_declaration2 .)


state 165

    (26) var_declaration2 -> VARIABLE ASIGNACION LBRACKET NUMERO COMA . var_declaration2
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 184

state 166

    (29) var_declaration2 -> VARIABLE ASIGNACION LBRACKET STRING1 COMA . var_declaration2
    (18) var_declaration2 -> . VARIABLE
    (19) var_declaration2 -> . VARIABLE COMA var_declaration2
    (20) var_declaration2 -> . VARIABLE ASIGNACION NUMERO COMA var_declaration2
    (21) var_declaration2 -> . VARIABLE ASIGNACION NUMERO
    (22) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE COMA var_declaration2
    (23) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE
    (24) var_declaration2 -> . COMA
    (25) var_declaration2 -> . VARIABLE ASIGNACION VARIABLE simple_expression
    (26) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2
    (27) var_declaration2 -> . NUMERO COMA var_declaration2
    (28) var_declaration2 -> . NUMERO RBRACKET
    (29) var_declaration2 -> . VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2
    (30) var_declaration2 -> . STRING1 COMA var_declaration2
    (31) var_declaration2 -> . STRING1 RBRACKET

    VARIABLE        shift and go to state 94
    COMA            shift and go to state 32
    NUMERO          shift and go to state 96
    STRING1         shift and go to state 97

    var_declaration2               shift and go to state 185

state 167

    (53) selection_stmt -> IF LPAREN expression RPAREN statement .
    (54) selection_stmt -> IF LPAREN expression RPAREN statement . ELSE statement
    (55) selection_stmt -> IF LPAREN expression RPAREN statement . ELSEIF statement

  ! shift/reduce conflict for ELSE resolved as shift
  ! shift/reduce conflict for ELSEIF resolved as shift
    PREGUNTA        reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    VARIABLE        reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    CASE            reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FOREACH         reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    FINAL_DE_LINEA  reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    COMA            reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    NUMERO          reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    STRING1         reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    STRING2         reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    MAS             reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    MENOS           reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RLLAVE          reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    LLLAVE          reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 186
    ELSEIF          shift and go to state 187

  ! ELSE            [ reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]
  ! ELSEIF          [ reduce using rule 53 (selection_stmt -> IF LPAREN expression RPAREN statement .) ]


state 168

    (56) selection_stmt -> SWITCH LPAREN var_val RPAREN statement .

    PREGUNTA        reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    VARIABLE        reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    IF              reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    SWITCH          reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    CASE            reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    DEFAULT         reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    WHILE           reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    FOR             reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    FOREACH         reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    FUNCTION        reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    ECHO            reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    FINAL_DE_LINEA  reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    COMA            reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    NUMERO          reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    STRING1         reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    STRING2         reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    MAS             reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    MENOS           reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    LPAREN          reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    IDENTIFIER      reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    BREAK           reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    ELSE            reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    ELSEIF          reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    RLLAVE          reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    LLLAVE          reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)
    RETURN          reduce using rule 56 (selection_stmt -> SWITCH LPAREN var_val RPAREN statement .)


state 169

    (57) selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 188


state 170

    (58) selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    IF              reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    SWITCH          reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    CASE            reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    WHILE           reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FOR             reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FOREACH         reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    ECHO            reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    COMA            reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    NUMERO          reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    STRING1         reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    STRING2         reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    MAS             reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    MENOS           reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    LPAREN          reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    BREAK           reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    ELSE            reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    RETURN          reduce using rule 58 (selection_stmt -> DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)


state 171

    (39) compount_stmt -> LLLAVE local_declarations statement_list . RLLAVE
    (42) statement_list -> statement_list . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    RLLAVE          shift and go to state 189
    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    statement                      shift and go to state 190
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    expression                     shift and go to state 18
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 172

    (43) statement_list -> statement .

    RLLAVE          reduce using rule 43 (statement_list -> statement .)
    FINAL_DE_LINEA  reduce using rule 43 (statement_list -> statement .)
    LLLAVE          reduce using rule 43 (statement_list -> statement .)
    IF              reduce using rule 43 (statement_list -> statement .)
    SWITCH          reduce using rule 43 (statement_list -> statement .)
    CASE            reduce using rule 43 (statement_list -> statement .)
    DEFAULT         reduce using rule 43 (statement_list -> statement .)
    VARIABLE        reduce using rule 43 (statement_list -> statement .)
    WHILE           reduce using rule 43 (statement_list -> statement .)
    FOR             reduce using rule 43 (statement_list -> statement .)
    FOREACH         reduce using rule 43 (statement_list -> statement .)
    ECHO            reduce using rule 43 (statement_list -> statement .)
    RETURN          reduce using rule 43 (statement_list -> statement .)
    STRING1         reduce using rule 43 (statement_list -> statement .)
    STRING2         reduce using rule 43 (statement_list -> statement .)
    MAS             reduce using rule 43 (statement_list -> statement .)
    MENOS           reduce using rule 43 (statement_list -> statement .)
    LPAREN          reduce using rule 43 (statement_list -> statement .)
    NUMERO          reduce using rule 43 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 43 (statement_list -> statement .)


state 173

    (44) statement_list -> empty_function .

    RLLAVE          reduce using rule 44 (statement_list -> empty_function .)
    FINAL_DE_LINEA  reduce using rule 44 (statement_list -> empty_function .)
    LLLAVE          reduce using rule 44 (statement_list -> empty_function .)
    IF              reduce using rule 44 (statement_list -> empty_function .)
    SWITCH          reduce using rule 44 (statement_list -> empty_function .)
    CASE            reduce using rule 44 (statement_list -> empty_function .)
    DEFAULT         reduce using rule 44 (statement_list -> empty_function .)
    VARIABLE        reduce using rule 44 (statement_list -> empty_function .)
    WHILE           reduce using rule 44 (statement_list -> empty_function .)
    FOR             reduce using rule 44 (statement_list -> empty_function .)
    FOREACH         reduce using rule 44 (statement_list -> empty_function .)
    ECHO            reduce using rule 44 (statement_list -> empty_function .)
    RETURN          reduce using rule 44 (statement_list -> empty_function .)
    STRING1         reduce using rule 44 (statement_list -> empty_function .)
    STRING2         reduce using rule 44 (statement_list -> empty_function .)
    MAS             reduce using rule 44 (statement_list -> empty_function .)
    MENOS           reduce using rule 44 (statement_list -> empty_function .)
    LPAREN          reduce using rule 44 (statement_list -> empty_function .)
    NUMERO          reduce using rule 44 (statement_list -> empty_function .)
    IDENTIFIER      reduce using rule 44 (statement_list -> empty_function .)


state 174

    (17) var_declaration -> VARIABLE LBRACKET . NUMERO RBRACKET FINAL_DE_LINEA

    NUMERO          shift and go to state 191


state 175

    (64) return_stmt -> RETURN expression FINAL_DE_LINEA .

    BREAK           reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    PREGUNTA        reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    IF              reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    SWITCH          reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    CASE            reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    WHILE           reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    FOR             reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    FOREACH         reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    ECHO            reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    COMA            reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    NUMERO          reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    STRING1         reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    STRING2         reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    MAS             reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    MENOS           reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    LPAREN          reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    ELSE            reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)
    RETURN          reduce using rule 64 (return_stmt -> RETURN expression FINAL_DE_LINEA .)


state 176

    (60) iteration_stmt -> WHILE LPAREN expression RPAREN statement .

    PREGUNTA        reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    VARIABLE        reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    SWITCH          reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    CASE            reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    DEFAULT         reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FOREACH         reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ECHO            reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    FINAL_DE_LINEA  reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    COMA            reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    NUMERO          reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING1         reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    STRING2         reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    MAS             reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    MENOS           reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    IDENTIFIER      reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    ELSEIF          reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RLLAVE          reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    LLLAVE          reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 60 (iteration_stmt -> WHILE LPAREN expression RPAREN statement .)


state 177

    (61) iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression . FINAL_DE_LINEA additive_expression RPAREN statement

    FINAL_DE_LINEA  shift and go to state 192


state 178

    (62) iteration_stmt -> FOREACH LPAREN var_val AS var_val . RPAREN statement

    RPAREN          shift and go to state 193


state 179

    (32) fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    statement                      shift and go to state 194
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    expression                     shift and go to state 18
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 180

    (34) param_list -> param_list COMA . param
    (36) param -> . VARIABLE
    (37) param -> . VARIABLE LBRACKET RBRACKET
    (38) param -> . empty_function
    (100) empty_function -> .

    VARIABLE        shift and go to state 157
    COMA            reduce using rule 100 (empty_function -> .)
    RPAREN          reduce using rule 100 (empty_function -> .)

    param                          shift and go to state 195
    empty_function                 shift and go to state 158

state 181

    (37) param -> VARIABLE LBRACKET . RBRACKET

    RBRACKET        shift and go to state 196


state 182

    (98) args_list -> args_list COMA expression .

    COMA            reduce using rule 98 (args_list -> args_list COMA expression .)
    RPAREN          reduce using rule 98 (args_list -> args_list COMA expression .)


state 183

    (59) selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS . expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    VARIABLE        shift and go to state 60
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 197
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    additive_expression            shift and go to state 25
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 184

    (26) var_declaration2 -> VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2 .

    FINAL_DE_LINEA  reduce using rule 26 (var_declaration2 -> VARIABLE ASIGNACION LBRACKET NUMERO COMA var_declaration2 .)


state 185

    (29) var_declaration2 -> VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2 .

    FINAL_DE_LINEA  reduce using rule 29 (var_declaration2 -> VARIABLE ASIGNACION LBRACKET STRING1 COMA var_declaration2 .)


state 186

    (54) selection_stmt -> IF LPAREN expression RPAREN statement ELSE . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 18
    statement                      shift and go to state 198
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 187

    (55) selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 18
    statement                      shift and go to state 199
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    var_val                        shift and go to state 20
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 188

    (57) selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    IF              reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    SWITCH          reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    CASE            reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    WHILE           reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FOR             reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FOREACH         reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    ECHO            reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    COMA            reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    NUMERO          reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    STRING1         reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    STRING2         reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    MAS             reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    MENOS           reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    LPAREN          reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    BREAK           reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    ELSE            reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)
    RETURN          reduce using rule 57 (selection_stmt -> CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA .)


state 189

    (39) compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .

    BREAK           reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    PREGUNTA        reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    VARIABLE        reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    IF              reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    SWITCH          reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    CASE            reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    DEFAULT         reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    WHILE           reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    FOR             reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    FOREACH         reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    FUNCTION        reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    ECHO            reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    FINAL_DE_LINEA  reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    COMA            reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    NUMERO          reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    STRING1         reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    STRING2         reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    MAS             reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    MENOS           reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    LPAREN          reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    IDENTIFIER      reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    ELSE            reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    ELSEIF          reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    RLLAVE          reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    LLLAVE          reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)
    RETURN          reduce using rule 39 (compount_stmt -> LLLAVE local_declarations statement_list RLLAVE .)


state 190

    (42) statement_list -> statement_list statement .

    RLLAVE          reduce using rule 42 (statement_list -> statement_list statement .)
    FINAL_DE_LINEA  reduce using rule 42 (statement_list -> statement_list statement .)
    LLLAVE          reduce using rule 42 (statement_list -> statement_list statement .)
    IF              reduce using rule 42 (statement_list -> statement_list statement .)
    SWITCH          reduce using rule 42 (statement_list -> statement_list statement .)
    CASE            reduce using rule 42 (statement_list -> statement_list statement .)
    DEFAULT         reduce using rule 42 (statement_list -> statement_list statement .)
    VARIABLE        reduce using rule 42 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 42 (statement_list -> statement_list statement .)
    FOR             reduce using rule 42 (statement_list -> statement_list statement .)
    FOREACH         reduce using rule 42 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 42 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 42 (statement_list -> statement_list statement .)
    STRING1         reduce using rule 42 (statement_list -> statement_list statement .)
    STRING2         reduce using rule 42 (statement_list -> statement_list statement .)
    MAS             reduce using rule 42 (statement_list -> statement_list statement .)
    MENOS           reduce using rule 42 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 42 (statement_list -> statement_list statement .)
    NUMERO          reduce using rule 42 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 42 (statement_list -> statement_list statement .)


state 191

    (17) var_declaration -> VARIABLE LBRACKET NUMERO . RBRACKET FINAL_DE_LINEA

    RBRACKET        shift and go to state 133


state 192

    (61) iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA . additive_expression RPAREN statement
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    VARIABLE        shift and go to state 60
    IDENTIFIER      shift and go to state 28

    additive_expression            shift and go to state 200
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    var_val                        shift and go to state 83
    call                           shift and go to state 39

state 193

    (62) iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    var_val                        shift and go to state 20
    statement                      shift and go to state 201
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    expression                     shift and go to state 18
    additive_expression            shift and go to state 25
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 194

    (32) fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .

    PREGUNTA        reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    VARIABLE        reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    IF              reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    SWITCH          reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    CASE            reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    DEFAULT         reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    WHILE           reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    FOR             reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    FOREACH         reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    FUNCTION        reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    ECHO            reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    FINAL_DE_LINEA  reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    COMA            reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    NUMERO          reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    STRING1         reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    STRING2         reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    MAS             reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    MENOS           reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    LPAREN          reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)
    IDENTIFIER      reduce using rule 32 (fun_declaration -> FUNCTION IDENTIFIER LPAREN params RPAREN statement .)


state 195

    (34) param_list -> param_list COMA param .

    COMA            reduce using rule 34 (param_list -> param_list COMA param .)
    RPAREN          reduce using rule 34 (param_list -> param_list COMA param .)


state 196

    (37) param -> VARIABLE LBRACKET RBRACKET .

    COMA            reduce using rule 37 (param -> VARIABLE LBRACKET RBRACKET .)
    RPAREN          reduce using rule 37 (param -> VARIABLE LBRACKET RBRACKET .)


state 197

    (59) selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 202


state 198

    (54) selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .

    PREGUNTA        reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    VARIABLE        reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    SWITCH          reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    CASE            reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    DEFAULT         reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOREACH         reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    ECHO            reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    FINAL_DE_LINEA  reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    COMA            reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    NUMERO          reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING1         reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING2         reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    MAS             reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    MENOS           reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    IDENTIFIER      reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    BREAK           reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSEIF          reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    RLLAVE          reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    LLLAVE          reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 54 (selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement .)


state 199

    (55) selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .

    PREGUNTA        reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    VARIABLE        reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    IF              reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    SWITCH          reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    CASE            reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    DEFAULT         reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    WHILE           reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    FOR             reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    FOREACH         reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    FUNCTION        reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    ECHO            reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    FINAL_DE_LINEA  reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    COMA            reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    NUMERO          reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    STRING1         reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    STRING2         reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    MAS             reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    MENOS           reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    LPAREN          reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    IDENTIFIER      reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    BREAK           reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    ELSE            reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    ELSEIF          reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    RLLAVE          reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    LLLAVE          reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)
    RETURN          reduce using rule 55 (selection_stmt -> IF LPAREN expression RPAREN statement ELSEIF statement .)


state 200

    (61) iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression . RPAREN statement
    (78) additive_expression -> additive_expression . addop term
    (83) addop -> . MAS
    (84) addop -> . MENOS

    RPAREN          shift and go to state 203
    MAS             shift and go to state 37
    MENOS           shift and go to state 38

    addop                          shift and go to state 71

state 201

    (62) iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .

    PREGUNTA        reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    VARIABLE        reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    IF              reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    SWITCH          reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    CASE            reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    DEFAULT         reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    WHILE           reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    FOR             reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    FOREACH         reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    FUNCTION        reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    ECHO            reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    FINAL_DE_LINEA  reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    COMA            reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    NUMERO          reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    STRING1         reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    STRING2         reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    MAS             reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    MENOS           reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    LPAREN          reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    IDENTIFIER      reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    BREAK           reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    ELSE            reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    ELSEIF          reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    RLLAVE          reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    LLLAVE          reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)
    RETURN          reduce using rule 62 (iteration_stmt -> FOREACH LPAREN var_val AS var_val RPAREN statement .)


state 202

    (59) selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    IF              reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    SWITCH          reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    CASE            reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    DEFAULT         reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    WHILE           reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    FOR             reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    FOREACH         reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    ECHO            reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    FINAL_DE_LINEA  reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    COMA            reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    NUMERO          reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    STRING1         reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    STRING2         reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    MAS             reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    MENOS           reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    LPAREN          reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    BREAK           reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    ELSE            reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    ELSEIF          reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    LLLAVE          reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)
    RETURN          reduce using rule 59 (selection_stmt -> VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA .)


state 203

    (61) iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN . statement
    (45) statement -> . expression_stmt
    (46) statement -> . compount_stmt
    (47) statement -> . selection_stmt
    (48) statement -> . iteration_stmt
    (49) statement -> . show_in_screen
    (50) statement -> . return_stmt
    (51) expression_stmt -> . expression FINAL_DE_LINEA
    (52) expression_stmt -> . FINAL_DE_LINEA
    (39) compount_stmt -> . LLLAVE local_declarations statement_list RLLAVE
    (53) selection_stmt -> . IF LPAREN expression RPAREN statement
    (54) selection_stmt -> . IF LPAREN expression RPAREN statement ELSE statement
    (55) selection_stmt -> . IF LPAREN expression RPAREN statement ELSEIF statement
    (56) selection_stmt -> . SWITCH LPAREN var_val RPAREN statement
    (57) selection_stmt -> . CASE NUMERO DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (58) selection_stmt -> . DEFAULT DOS_PUNTOS statement BREAK FINAL_DE_LINEA
    (59) selection_stmt -> . VARIABLE relop VARIABLE PREGUNTA expression DOS_PUNTOS expression FINAL_DE_LINEA
    (60) iteration_stmt -> . WHILE LPAREN expression RPAREN statement
    (61) iteration_stmt -> . FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement
    (62) iteration_stmt -> . FOREACH LPAREN var_val AS var_val RPAREN statement
    (12) show_in_screen -> . ECHO var_val FINAL_DE_LINEA
    (13) show_in_screen -> . ECHO STRING1 FINAL_DE_LINEA
    (14) show_in_screen -> . ECHO STRING2 FINAL_DE_LINEA
    (15) show_in_screen -> . ECHO selection_stmt
    (63) return_stmt -> . RETURN FINAL_DE_LINEA
    (64) return_stmt -> . RETURN expression FINAL_DE_LINEA
    (65) expression -> . var_val ASIGNACION expression
    (66) expression -> . simple_expression
    (67) var_val -> . VARIABLE
    (68) var_val -> . VARIABLE LBRACKET expression RBRACKET
    (69) simple_expression -> . additive_expression relop additive_expression
    (70) simple_expression -> . additive_expression
    (78) additive_expression -> . additive_expression addop term
    (79) additive_expression -> . term
    (80) additive_expression -> . term AUTODECREMENTO
    (81) additive_expression -> . term AUTOINCREMENTO
    (82) additive_expression -> . addop term
    (85) term -> . term mulop factor
    (86) term -> . factor
    (87) term -> . STRING1
    (88) term -> . STRING2
    (83) addop -> . MAS
    (84) addop -> . MENOS
    (91) factor -> . LPAREN expression RPAREN
    (92) factor -> . var_val
    (93) factor -> . call
    (94) factor -> . NUMERO
    (95) call -> . IDENTIFIER LPAREN args RPAREN

    FINAL_DE_LINEA  shift and go to state 13
    LLLAVE          shift and go to state 115
    IF              shift and go to state 16
    SWITCH          shift and go to state 19
    CASE            shift and go to state 21
    DEFAULT         shift and go to state 22
    VARIABLE        shift and go to state 116
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    FOREACH         shift and go to state 26
    ECHO            shift and go to state 29
    RETURN          shift and go to state 117
    STRING1         shift and go to state 61
    STRING2         shift and go to state 31
    MAS             shift and go to state 37
    MENOS           shift and go to state 38
    LPAREN          shift and go to state 17
    NUMERO          shift and go to state 62
    IDENTIFIER      shift and go to state 28

    expression                     shift and go to state 18
    additive_expression            shift and go to state 25
    statement                      shift and go to state 204
    expression_stmt                shift and go to state 109
    compount_stmt                  shift and go to state 110
    selection_stmt                 shift and go to state 111
    iteration_stmt                 shift and go to state 112
    show_in_screen                 shift and go to state 113
    return_stmt                    shift and go to state 114
    var_val                        shift and go to state 20
    simple_expression              shift and go to state 33
    addop                          shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 36
    call                           shift and go to state 39

state 204

    (61) iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .

    PREGUNTA        reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    VARIABLE        reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    IF              reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    SWITCH          reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    CASE            reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    DEFAULT         reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    WHILE           reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    FOR             reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    FOREACH         reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    FUNCTION        reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    ECHO            reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    FINAL_DE_LINEA  reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    COMA            reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    NUMERO          reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    STRING1         reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    STRING2         reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    MAS             reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    MENOS           reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    LPAREN          reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    IDENTIFIER      reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    BREAK           reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    ELSE            reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    ELSEIF          reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    RLLAVE          reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    LLLAVE          reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)
    RETURN          reduce using rule 61 (iteration_stmt -> FOR LPAREN var_declaration2 FINAL_DE_LINEA expression FINAL_DE_LINEA additive_expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGNACION in state 14 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 14 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 14 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 14 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 14 resolved as shift
WARNING: shift/reduce conflict for NEGACION in state 14 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 14 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 91 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 115 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 115 resolved as shift
WARNING: shift/reduce conflict for STRING1 in state 115 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 116 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 116 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 116 resolved as shift
WARNING: shift/reduce conflict for NEGACION in state 116 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 116 resolved as shift
WARNING: shift/reduce conflict for FINAL_DE_LINEA in state 145 resolved as shift
WARNING: shift/reduce conflict for LLLAVE in state 145 resolved as shift
WARNING: shift/reduce conflict for IF in state 145 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 145 resolved as shift
WARNING: shift/reduce conflict for CASE in state 145 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 145 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 145 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 145 resolved as shift
WARNING: shift/reduce conflict for FOR in state 145 resolved as shift
WARNING: shift/reduce conflict for FOREACH in state 145 resolved as shift
WARNING: shift/reduce conflict for ECHO in state 145 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 145 resolved as shift
WARNING: shift/reduce conflict for STRING1 in state 145 resolved as shift
WARNING: shift/reduce conflict for STRING2 in state 145 resolved as shift
WARNING: shift/reduce conflict for MAS in state 145 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 145 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 145 resolved as shift
WARNING: shift/reduce conflict for NUMERO in state 145 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 145 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 167 resolved as shift
WARNING: shift/reduce conflict for ELSEIF in state 167 resolved as shift
WARNING: reduce/reduce conflict in state 14 resolved using rule (var_declaration2 -> VARIABLE)
WARNING: rejected rule (var_val -> VARIABLE) in state 14
