Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSANT
    COMILLASDOBLES
    COMILLASIMPLE
    DOLLAR
    DOS_PUNTOS
    DOUBLE
    ENTERO
    FLOTANTE
    HASHTAG
    ID
    NULL
    OBJECT
    VAR

Grammar

Rule 0     S' -> php_code
Rule 1     php_code -> php_heading statements php_end
Rule 2     php_heading -> MENORQUE PREGUNTA PHP
Rule 3     php_end -> PREGUNTA MAYORQUE
Rule 4     statements -> statement
Rule 5     statements -> statements statement
Rule 6     statement -> var_declaration
Rule 7     statement -> var_modification
Rule 8     statement -> if_statement
Rule 9     statement -> for_loop
Rule 10    statement -> while_lopp
Rule 11    statement -> class
Rule 12    statement -> comentario
Rule 13    statement -> function
Rule 14    statement -> function_call
Rule 15    statement -> echo
Rule 16    var_declaration -> var_dcl FINAL_DE_LINEA
Rule 17    var_modification -> var_modi FINAL_DE_LINEA
Rule 18    function -> func
Rule 19    function_call -> func_call FINAL_DE_LINEA
Rule 20    expresion -> math_expr
Rule 21    expresion -> string
Rule 22    expresion -> boolean
Rule 23    expresion -> array
Rule 24    expresion -> var_accs
Rule 25    expresion -> func_call
Rule 26    string_concats -> string_concat
Rule 27    string_concats -> string_concats string_concat
Rule 28    string_concat -> DOT string
Rule 29    string_concat -> DOT VARIABLE
Rule 30    string_concat -> DOT func_call
Rule 31    string_concat -> DOT var_accs
Rule 32    string -> STRING1
Rule 33    string -> STRING2
Rule 34    string -> string string_concats
Rule 35    string -> VARIABLE string_concats
Rule 36    var_dcl -> VARIABLE ASIGNACION string
Rule 37    var_modi -> VARIABLE CONCAT_ASIG string
Rule 38    var_modi -> VARIABLE CONCAT_ASIG VARIABLE
Rule 39    signo_mas_menos -> MAS MENOS
Rule 40    signo_mas_menos -> MAS MENOS signo_mas_menos
Rule 41    signo_menos_mas -> MENOS MAS
Rule 42    signo_menos_mas -> MENOS MAS signo_menos_mas
Rule 43    signo -> MAS
Rule 44    signo -> MENOS
Rule 45    signo -> signo_mas_menos
Rule 46    signo -> signo_menos_mas
Rule 47    math_oper -> MAS
Rule 48    math_oper -> MENOS
Rule 49    math_oper -> MULTIPLICACION
Rule 50    math_oper -> DIVISION
Rule 51    math_expr -> NUMERO
Rule 52    math_expr -> signo NUMERO
Rule 53    math_expr -> VARIABLE
Rule 54    math_expr -> signo VARIABLE
Rule 55    math_expr -> var_accs
Rule 56    math_expr -> signo var_accs
Rule 57    math_expr -> math_expr operaciones_mat
Rule 58    operacion_mat -> math_oper NUMERO
Rule 59    operacion_mat -> math_oper VARIABLE
Rule 60    operacion_mat -> math_oper var_accs
Rule 61    operacion_mat -> signo NUMERO
Rule 62    operacion_mat -> signo VARIABLE
Rule 63    operacion_mat -> signo var_accs
Rule 64    operaciones_mat -> operacion_mat
Rule 65    operaciones_mat -> operacion_mat operaciones_mat
Rule 66    var_dcl -> VARIABLE ASIGNACION math_expr
Rule 67    var_modi -> VARIABLE AUTOINCREMENTO
Rule 68    var_modi -> VARIABLE AUTODECREMENTO
Rule 69    var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr
Rule 70    var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr
Rule 71    if_statement -> main_if_statement scope
Rule 72    if_statement -> main_if_statement scope else scope
Rule 73    if_statement -> main_if_statement scope many_elseif
Rule 74    if_statement -> main_if_statement scope many_elseif else scope
Rule 75    many_elseif -> elseif_statement scope
Rule 76    many_elseif -> elseif_statement scope many_elseif
Rule 77    comp_bin_oprs -> MAYORQUE
Rule 78    comp_bin_oprs -> MENORQUE
Rule 79    comp_bin_oprs -> MAYORIGUAL
Rule 80    comp_bin_oprs -> MENORIGUAL
Rule 81    comp_bin_oprs -> SAME
Rule 82    comp_bin_oprs -> EQUALS
Rule 83    comp_bin_oprs -> DESIGUALDAD
Rule 84    comp_bin_oprs -> AND
Rule 85    comp_bin_oprs -> OR
Rule 86    bool_unary_oprs -> negacion
Rule 87    negacion -> NEGACION
Rule 88    negacion -> NEGACION negacion
Rule 89    boolean -> TRUE
Rule 90    boolean -> FALSE
Rule 91    boolean -> expresion comp_bin_oprs expresion
Rule 92    boolean -> bool_unary_oprs boolean
Rule 93    main_if_statement -> IF LPAREN boolean RPAREN
Rule 94    elseif_statement -> ELSEIF LPAREN boolean RPAREN
Rule 95    else -> ELSE
Rule 96    scope -> LLLAVE statements RLLAVE
Rule 97    scope -> LLLAVE RLLAVE
Rule 98    scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
Rule 99    scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE
Rule 100   scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
Rule 101   scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
Rule 102   scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE
Rule 103   scope -> LLLAVE return FINAL_DE_LINEA RLLAVE
Rule 104   return -> RETURN
Rule 105   return -> RETURN expresion
Rule 106   while_lopp -> WHILE LPAREN boolean RPAREN scope
Rule 107   for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
Rule 108   assigncacionArrow -> expresion ASIGNACION2 expresion
Rule 109   array_item -> assigncacionArrow
Rule 110   array_item -> expresion
Rule 111   array_items -> array_item
Rule 112   array_items -> array_item COMA array_items
Rule 113   array -> ARRAY LPAREN array_items RPAREN
Rule 114   var_dcl -> VARIABLE ASIGNACION array
Rule 115   var_accs -> VARIABLE LBRACKET expresion RBRACKET
Rule 116   arguments -> VARIABLE
Rule 117   arguments -> VARIABLE COMA arguments
Rule 118   args -> LPAREN RPAREN
Rule 119   args -> LPAREN arguments RPAREN
Rule 120   value -> expresion
Rule 121   values -> value
Rule 122   values -> value COMA values
Rule 123   func -> FUNCTION IDENTIFIER args scope
Rule 124   func_call -> IDENTIFIER LPAREN RPAREN
Rule 125   func_call -> IDENTIFIER LPAREN values RPAREN
Rule 126   var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion
Rule 127   var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion
Rule 128   var_accs -> VARIABLE ARROW IDENTIFIER
Rule 129   var_dcl -> VARIABLE ASIGNACION var_accs
Rule 130   func_call -> VARIABLE ARROW func_call
Rule 131   modf_acso -> PUBLIC
Rule 132   modf_acso -> PRIVATE
Rule 133   modf_acso -> PROTECTED
Rule 134   class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
Rule 135   mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA
Rule 136   mem_var_dcl -> COMENTARIO
Rule 137   mem_vars -> mem_var_dcl
Rule 138   mem_vars -> mem_var_dcl mem_vars
Rule 139   mem_func -> modf_acso FUNCTION IDENTIFIER args scope
Rule 140   mem_func -> FUNCTION IDENTIFIER args scope
Rule 141   mem_funcs -> mem_func
Rule 142   mem_funcs -> mem_func mem_funcs
Rule 143   var_dcl -> VARIABLE ASIGNACION NEW func_call
Rule 144   echo -> ECHO expresion FINAL_DE_LINEA
Rule 145   comentario -> COMENTARIO

Terminals, with rules where they appear

AMPERSANT            : 
AND                  : 84
ARRAY                : 113
ARROW                : 126 127 128 130
ASIGNACION           : 36 66 114 126 127 129 143
ASIGNACION2          : 108
ASIGNACION_AUMENTADA : 69
ASIGNACION_DISMINUIDA : 70
AUTODECREMENTO       : 68
AUTOINCREMENTO       : 67
BREAK                : 98 99
CLASS                : 134
COMA                 : 112 117 122
COMENTARIO           : 136 145
COMILLASDOBLES       : 
COMILLASIMPLE        : 
CONCAT_ASIG          : 37 38
CONTINUE             : 100 101
DESIGUALDAD          : 83
DIVISION             : 50
DOLLAR               : 
DOS_PUNTOS           : 
DOT                  : 28 29 30 31
DOUBLE               : 
ECHO                 : 144
ELSE                 : 95
ELSEIF               : 94
ENTERO               : 
EQUALS               : 82
FALSE                : 90
FINAL_DE_LINEA       : 16 17 19 98 99 100 101 102 103 107 107 135 144
FLOTANTE             : 
FOR                  : 107
FUNCTION             : 123 139 140
HASHTAG              : 
ID                   : 
IDENTIFIER           : 123 124 125 126 127 128 134 139 140
IF                   : 93
LBRACKET             : 115
LLLAVE               : 96 97 98 99 100 101 102 103 134
LPAREN               : 93 94 106 107 113 118 119 124 125
MAS                  : 39 40 41 42 43 47
MAYORIGUAL           : 79
MAYORQUE             : 3 77
MENORIGUAL           : 80
MENORQUE             : 2 78
MENOS                : 39 40 41 42 44 48
MULTIPLICACION       : 49
NEGACION             : 87 88
NEW                  : 143
NULL                 : 
NUMERO               : 51 52 58 61
OBJECT               : 
OR                   : 85
PHP                  : 2
PREGUNTA             : 2 3
PRIVATE              : 132
PROTECTED            : 133
PUBLIC               : 131
RBRACKET             : 115
RETURN               : 104 105
RLLAVE               : 96 97 98 99 100 101 102 103 134
RPAREN               : 93 94 106 107 113 118 119 124 125
SAME                 : 81
STRING1              : 32
STRING2              : 33
THIS                 : 126
TRUE                 : 89
VAR                  : 
VARIABLE             : 29 35 36 37 38 38 53 54 59 62 66 67 68 69 70 114 115 116 117 127 128 129 130 135 143
WHILE                : 106
error                : 

Nonterminals, with rules where they appear

args                 : 123 139 140
arguments            : 117 119
array                : 23 114
array_item           : 111 112
array_items          : 112 113
assigncacionArrow    : 109
bool_unary_oprs      : 92
boolean              : 22 92 93 94 106 107
class                : 11
comentario           : 12
comp_bin_oprs        : 91
echo                 : 15
else                 : 72 74
elseif_statement     : 75 76
expresion            : 91 91 105 108 108 110 115 120 126 127 144
for_loop             : 9
func                 : 18
func_call            : 19 25 30 130 143
function             : 13
function_call        : 14
if_statement         : 8
main_if_statement    : 71 72 73 74
many_elseif          : 73 74 76
math_expr            : 20 57 66 69 70
math_oper            : 58 59 60
mem_func             : 141 142
mem_funcs            : 134 142
mem_var_dcl          : 137 138
mem_vars             : 134 138
modf_acso            : 135 139
negacion             : 86 88
operacion_mat        : 64 65
operaciones_mat      : 57 65
php_code             : 0
php_end              : 1
php_heading          : 1
return               : 102 103
scope                : 71 72 72 73 74 74 75 76 106 107 123 139 140
signo                : 52 54 56 61 62 63
signo_mas_menos      : 40 45
signo_menos_mas      : 42 46
statement            : 4 5
statements           : 1 5 96 98 100 102
string               : 21 28 34 36 37
string_concat        : 26 27
string_concats       : 27 34 35
value                : 121 122
values               : 122 125
var_accs             : 24 31 55 56 60 63 129
var_dcl              : 16 107
var_declaration      : 6
var_modi             : 17 107
var_modification     : 7
while_lopp           : 10

Parsing method: LALR

state 0

    (0) S' -> . php_code
    (1) php_code -> . php_heading statements php_end
    (2) php_heading -> . MENORQUE PREGUNTA PHP

    MENORQUE        shift and go to state 3

    php_code                       shift and go to state 1
    php_heading                    shift and go to state 2

state 1

    (0) S' -> php_code .



state 2

    (1) php_code -> php_heading . statements php_end
    (4) statements -> . statement
    (5) statements -> . statements statement
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (71) if_statement -> . main_if_statement scope
    (72) if_statement -> . main_if_statement scope else scope
    (73) if_statement -> . main_if_statement scope many_elseif
    (74) if_statement -> . main_if_statement scope many_elseif else scope
    (107) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (106) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (134) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (145) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (144) echo -> . ECHO expresion FINAL_DE_LINEA
    (36) var_dcl -> . VARIABLE ASIGNACION string
    (66) var_dcl -> . VARIABLE ASIGNACION math_expr
    (114) var_dcl -> . VARIABLE ASIGNACION array
    (129) var_dcl -> . VARIABLE ASIGNACION var_accs
    (143) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (37) var_modi -> . VARIABLE CONCAT_ASIG string
    (38) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (67) var_modi -> . VARIABLE AUTOINCREMENTO
    (68) var_modi -> . VARIABLE AUTODECREMENTO
    (69) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (70) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (126) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (127) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (93) main_if_statement -> . IF LPAREN boolean RPAREN
    (123) func -> . FUNCTION IDENTIFIER args scope
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    statements                     shift and go to state 4
    statement                      shift and go to state 5
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 3

    (2) php_heading -> MENORQUE . PREGUNTA PHP

    PREGUNTA        shift and go to state 31


state 4

    (1) php_code -> php_heading statements . php_end
    (5) statements -> statements . statement
    (3) php_end -> . PREGUNTA MAYORQUE
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (71) if_statement -> . main_if_statement scope
    (72) if_statement -> . main_if_statement scope else scope
    (73) if_statement -> . main_if_statement scope many_elseif
    (74) if_statement -> . main_if_statement scope many_elseif else scope
    (107) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (106) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (134) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (145) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (144) echo -> . ECHO expresion FINAL_DE_LINEA
    (36) var_dcl -> . VARIABLE ASIGNACION string
    (66) var_dcl -> . VARIABLE ASIGNACION math_expr
    (114) var_dcl -> . VARIABLE ASIGNACION array
    (129) var_dcl -> . VARIABLE ASIGNACION var_accs
    (143) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (37) var_modi -> . VARIABLE CONCAT_ASIG string
    (38) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (67) var_modi -> . VARIABLE AUTOINCREMENTO
    (68) var_modi -> . VARIABLE AUTODECREMENTO
    (69) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (70) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (126) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (127) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (93) main_if_statement -> . IF LPAREN boolean RPAREN
    (123) func -> . FUNCTION IDENTIFIER args scope
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    PREGUNTA        shift and go to state 34
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    php_end                        shift and go to state 32
    statement                      shift and go to state 33
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 5

    (4) statements -> statement .

    PREGUNTA        reduce using rule 4 (statements -> statement .)
    FOR             reduce using rule 4 (statements -> statement .)
    WHILE           reduce using rule 4 (statements -> statement .)
    CLASS           reduce using rule 4 (statements -> statement .)
    COMENTARIO      reduce using rule 4 (statements -> statement .)
    ECHO            reduce using rule 4 (statements -> statement .)
    VARIABLE        reduce using rule 4 (statements -> statement .)
    THIS            reduce using rule 4 (statements -> statement .)
    IF              reduce using rule 4 (statements -> statement .)
    FUNCTION        reduce using rule 4 (statements -> statement .)
    IDENTIFIER      reduce using rule 4 (statements -> statement .)
    RLLAVE          reduce using rule 4 (statements -> statement .)
    BREAK           reduce using rule 4 (statements -> statement .)
    CONTINUE        reduce using rule 4 (statements -> statement .)
    RETURN          reduce using rule 4 (statements -> statement .)


state 6

    (6) statement -> var_declaration .

    PREGUNTA        reduce using rule 6 (statement -> var_declaration .)
    FOR             reduce using rule 6 (statement -> var_declaration .)
    WHILE           reduce using rule 6 (statement -> var_declaration .)
    CLASS           reduce using rule 6 (statement -> var_declaration .)
    COMENTARIO      reduce using rule 6 (statement -> var_declaration .)
    ECHO            reduce using rule 6 (statement -> var_declaration .)
    VARIABLE        reduce using rule 6 (statement -> var_declaration .)
    THIS            reduce using rule 6 (statement -> var_declaration .)
    IF              reduce using rule 6 (statement -> var_declaration .)
    FUNCTION        reduce using rule 6 (statement -> var_declaration .)
    IDENTIFIER      reduce using rule 6 (statement -> var_declaration .)
    RLLAVE          reduce using rule 6 (statement -> var_declaration .)
    BREAK           reduce using rule 6 (statement -> var_declaration .)
    CONTINUE        reduce using rule 6 (statement -> var_declaration .)
    RETURN          reduce using rule 6 (statement -> var_declaration .)


state 7

    (7) statement -> var_modification .

    PREGUNTA        reduce using rule 7 (statement -> var_modification .)
    FOR             reduce using rule 7 (statement -> var_modification .)
    WHILE           reduce using rule 7 (statement -> var_modification .)
    CLASS           reduce using rule 7 (statement -> var_modification .)
    COMENTARIO      reduce using rule 7 (statement -> var_modification .)
    ECHO            reduce using rule 7 (statement -> var_modification .)
    VARIABLE        reduce using rule 7 (statement -> var_modification .)
    THIS            reduce using rule 7 (statement -> var_modification .)
    IF              reduce using rule 7 (statement -> var_modification .)
    FUNCTION        reduce using rule 7 (statement -> var_modification .)
    IDENTIFIER      reduce using rule 7 (statement -> var_modification .)
    RLLAVE          reduce using rule 7 (statement -> var_modification .)
    BREAK           reduce using rule 7 (statement -> var_modification .)
    CONTINUE        reduce using rule 7 (statement -> var_modification .)
    RETURN          reduce using rule 7 (statement -> var_modification .)


state 8

    (8) statement -> if_statement .

    PREGUNTA        reduce using rule 8 (statement -> if_statement .)
    FOR             reduce using rule 8 (statement -> if_statement .)
    WHILE           reduce using rule 8 (statement -> if_statement .)
    CLASS           reduce using rule 8 (statement -> if_statement .)
    COMENTARIO      reduce using rule 8 (statement -> if_statement .)
    ECHO            reduce using rule 8 (statement -> if_statement .)
    VARIABLE        reduce using rule 8 (statement -> if_statement .)
    THIS            reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    FUNCTION        reduce using rule 8 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> if_statement .)
    RLLAVE          reduce using rule 8 (statement -> if_statement .)
    BREAK           reduce using rule 8 (statement -> if_statement .)
    CONTINUE        reduce using rule 8 (statement -> if_statement .)
    RETURN          reduce using rule 8 (statement -> if_statement .)


state 9

    (9) statement -> for_loop .

    PREGUNTA        reduce using rule 9 (statement -> for_loop .)
    FOR             reduce using rule 9 (statement -> for_loop .)
    WHILE           reduce using rule 9 (statement -> for_loop .)
    CLASS           reduce using rule 9 (statement -> for_loop .)
    COMENTARIO      reduce using rule 9 (statement -> for_loop .)
    ECHO            reduce using rule 9 (statement -> for_loop .)
    VARIABLE        reduce using rule 9 (statement -> for_loop .)
    THIS            reduce using rule 9 (statement -> for_loop .)
    IF              reduce using rule 9 (statement -> for_loop .)
    FUNCTION        reduce using rule 9 (statement -> for_loop .)
    IDENTIFIER      reduce using rule 9 (statement -> for_loop .)
    RLLAVE          reduce using rule 9 (statement -> for_loop .)
    BREAK           reduce using rule 9 (statement -> for_loop .)
    CONTINUE        reduce using rule 9 (statement -> for_loop .)
    RETURN          reduce using rule 9 (statement -> for_loop .)


state 10

    (10) statement -> while_lopp .

    PREGUNTA        reduce using rule 10 (statement -> while_lopp .)
    FOR             reduce using rule 10 (statement -> while_lopp .)
    WHILE           reduce using rule 10 (statement -> while_lopp .)
    CLASS           reduce using rule 10 (statement -> while_lopp .)
    COMENTARIO      reduce using rule 10 (statement -> while_lopp .)
    ECHO            reduce using rule 10 (statement -> while_lopp .)
    VARIABLE        reduce using rule 10 (statement -> while_lopp .)
    THIS            reduce using rule 10 (statement -> while_lopp .)
    IF              reduce using rule 10 (statement -> while_lopp .)
    FUNCTION        reduce using rule 10 (statement -> while_lopp .)
    IDENTIFIER      reduce using rule 10 (statement -> while_lopp .)
    RLLAVE          reduce using rule 10 (statement -> while_lopp .)
    BREAK           reduce using rule 10 (statement -> while_lopp .)
    CONTINUE        reduce using rule 10 (statement -> while_lopp .)
    RETURN          reduce using rule 10 (statement -> while_lopp .)


state 11

    (11) statement -> class .

    PREGUNTA        reduce using rule 11 (statement -> class .)
    FOR             reduce using rule 11 (statement -> class .)
    WHILE           reduce using rule 11 (statement -> class .)
    CLASS           reduce using rule 11 (statement -> class .)
    COMENTARIO      reduce using rule 11 (statement -> class .)
    ECHO            reduce using rule 11 (statement -> class .)
    VARIABLE        reduce using rule 11 (statement -> class .)
    THIS            reduce using rule 11 (statement -> class .)
    IF              reduce using rule 11 (statement -> class .)
    FUNCTION        reduce using rule 11 (statement -> class .)
    IDENTIFIER      reduce using rule 11 (statement -> class .)
    RLLAVE          reduce using rule 11 (statement -> class .)
    BREAK           reduce using rule 11 (statement -> class .)
    CONTINUE        reduce using rule 11 (statement -> class .)
    RETURN          reduce using rule 11 (statement -> class .)


state 12

    (12) statement -> comentario .

    PREGUNTA        reduce using rule 12 (statement -> comentario .)
    FOR             reduce using rule 12 (statement -> comentario .)
    WHILE           reduce using rule 12 (statement -> comentario .)
    CLASS           reduce using rule 12 (statement -> comentario .)
    COMENTARIO      reduce using rule 12 (statement -> comentario .)
    ECHO            reduce using rule 12 (statement -> comentario .)
    VARIABLE        reduce using rule 12 (statement -> comentario .)
    THIS            reduce using rule 12 (statement -> comentario .)
    IF              reduce using rule 12 (statement -> comentario .)
    FUNCTION        reduce using rule 12 (statement -> comentario .)
    IDENTIFIER      reduce using rule 12 (statement -> comentario .)
    RLLAVE          reduce using rule 12 (statement -> comentario .)
    BREAK           reduce using rule 12 (statement -> comentario .)
    CONTINUE        reduce using rule 12 (statement -> comentario .)
    RETURN          reduce using rule 12 (statement -> comentario .)


state 13

    (13) statement -> function .

    PREGUNTA        reduce using rule 13 (statement -> function .)
    FOR             reduce using rule 13 (statement -> function .)
    WHILE           reduce using rule 13 (statement -> function .)
    CLASS           reduce using rule 13 (statement -> function .)
    COMENTARIO      reduce using rule 13 (statement -> function .)
    ECHO            reduce using rule 13 (statement -> function .)
    VARIABLE        reduce using rule 13 (statement -> function .)
    THIS            reduce using rule 13 (statement -> function .)
    IF              reduce using rule 13 (statement -> function .)
    FUNCTION        reduce using rule 13 (statement -> function .)
    IDENTIFIER      reduce using rule 13 (statement -> function .)
    RLLAVE          reduce using rule 13 (statement -> function .)
    BREAK           reduce using rule 13 (statement -> function .)
    CONTINUE        reduce using rule 13 (statement -> function .)
    RETURN          reduce using rule 13 (statement -> function .)


state 14

    (14) statement -> function_call .

    PREGUNTA        reduce using rule 14 (statement -> function_call .)
    FOR             reduce using rule 14 (statement -> function_call .)
    WHILE           reduce using rule 14 (statement -> function_call .)
    CLASS           reduce using rule 14 (statement -> function_call .)
    COMENTARIO      reduce using rule 14 (statement -> function_call .)
    ECHO            reduce using rule 14 (statement -> function_call .)
    VARIABLE        reduce using rule 14 (statement -> function_call .)
    THIS            reduce using rule 14 (statement -> function_call .)
    IF              reduce using rule 14 (statement -> function_call .)
    FUNCTION        reduce using rule 14 (statement -> function_call .)
    IDENTIFIER      reduce using rule 14 (statement -> function_call .)
    RLLAVE          reduce using rule 14 (statement -> function_call .)
    BREAK           reduce using rule 14 (statement -> function_call .)
    CONTINUE        reduce using rule 14 (statement -> function_call .)
    RETURN          reduce using rule 14 (statement -> function_call .)


state 15

    (15) statement -> echo .

    PREGUNTA        reduce using rule 15 (statement -> echo .)
    FOR             reduce using rule 15 (statement -> echo .)
    WHILE           reduce using rule 15 (statement -> echo .)
    CLASS           reduce using rule 15 (statement -> echo .)
    COMENTARIO      reduce using rule 15 (statement -> echo .)
    ECHO            reduce using rule 15 (statement -> echo .)
    VARIABLE        reduce using rule 15 (statement -> echo .)
    THIS            reduce using rule 15 (statement -> echo .)
    IF              reduce using rule 15 (statement -> echo .)
    FUNCTION        reduce using rule 15 (statement -> echo .)
    IDENTIFIER      reduce using rule 15 (statement -> echo .)
    RLLAVE          reduce using rule 15 (statement -> echo .)
    BREAK           reduce using rule 15 (statement -> echo .)
    CONTINUE        reduce using rule 15 (statement -> echo .)
    RETURN          reduce using rule 15 (statement -> echo .)


state 16

    (16) var_declaration -> var_dcl . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 35


state 17

    (17) var_modification -> var_modi . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 36


state 18

    (71) if_statement -> main_if_statement . scope
    (72) if_statement -> main_if_statement . scope else scope
    (73) if_statement -> main_if_statement . scope many_elseif
    (74) if_statement -> main_if_statement . scope many_elseif else scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 37

state 19

    (107) for_loop -> FOR . LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope

    LPAREN          shift and go to state 39


state 20

    (106) while_lopp -> WHILE . LPAREN boolean RPAREN scope

    LPAREN          shift and go to state 40


state 21

    (134) class -> CLASS . IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE

    IDENTIFIER      shift and go to state 41


state 22

    (124) func_call -> IDENTIFIER . LPAREN RPAREN
    (125) func_call -> IDENTIFIER . LPAREN values RPAREN

    LPAREN          shift and go to state 42


state 23

    (145) comentario -> COMENTARIO .

    PREGUNTA        reduce using rule 145 (comentario -> COMENTARIO .)
    FOR             reduce using rule 145 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 145 (comentario -> COMENTARIO .)
    CLASS           reduce using rule 145 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 145 (comentario -> COMENTARIO .)
    ECHO            reduce using rule 145 (comentario -> COMENTARIO .)
    VARIABLE        reduce using rule 145 (comentario -> COMENTARIO .)
    THIS            reduce using rule 145 (comentario -> COMENTARIO .)
    IF              reduce using rule 145 (comentario -> COMENTARIO .)
    FUNCTION        reduce using rule 145 (comentario -> COMENTARIO .)
    IDENTIFIER      reduce using rule 145 (comentario -> COMENTARIO .)
    RLLAVE          reduce using rule 145 (comentario -> COMENTARIO .)
    BREAK           reduce using rule 145 (comentario -> COMENTARIO .)
    CONTINUE        reduce using rule 145 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 145 (comentario -> COMENTARIO .)


state 24

    (18) function -> func .

    PREGUNTA        reduce using rule 18 (function -> func .)
    FOR             reduce using rule 18 (function -> func .)
    WHILE           reduce using rule 18 (function -> func .)
    CLASS           reduce using rule 18 (function -> func .)
    COMENTARIO      reduce using rule 18 (function -> func .)
    ECHO            reduce using rule 18 (function -> func .)
    VARIABLE        reduce using rule 18 (function -> func .)
    THIS            reduce using rule 18 (function -> func .)
    IF              reduce using rule 18 (function -> func .)
    FUNCTION        reduce using rule 18 (function -> func .)
    IDENTIFIER      reduce using rule 18 (function -> func .)
    RLLAVE          reduce using rule 18 (function -> func .)
    BREAK           reduce using rule 18 (function -> func .)
    CONTINUE        reduce using rule 18 (function -> func .)
    RETURN          reduce using rule 18 (function -> func .)


state 25

    (19) function_call -> func_call . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 43


state 26

    (144) echo -> ECHO . expresion FINAL_DE_LINEA
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    expresion                      shift and go to state 44
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 27

    (36) var_dcl -> VARIABLE . ASIGNACION string
    (66) var_dcl -> VARIABLE . ASIGNACION math_expr
    (114) var_dcl -> VARIABLE . ASIGNACION array
    (129) var_dcl -> VARIABLE . ASIGNACION var_accs
    (143) var_dcl -> VARIABLE . ASIGNACION NEW func_call
    (37) var_modi -> VARIABLE . CONCAT_ASIG string
    (38) var_modi -> VARIABLE . CONCAT_ASIG VARIABLE
    (67) var_modi -> VARIABLE . AUTOINCREMENTO
    (68) var_modi -> VARIABLE . AUTODECREMENTO
    (69) var_modi -> VARIABLE . ASIGNACION_AUMENTADA math_expr
    (70) var_modi -> VARIABLE . ASIGNACION_DISMINUIDA math_expr
    (127) var_modi -> VARIABLE . ARROW IDENTIFIER ASIGNACION expresion
    (130) func_call -> VARIABLE . ARROW func_call

    ASIGNACION      shift and go to state 66
    CONCAT_ASIG     shift and go to state 67
    AUTOINCREMENTO  shift and go to state 68
    AUTODECREMENTO  shift and go to state 69
    ASIGNACION_AUMENTADA shift and go to state 70
    ASIGNACION_DISMINUIDA shift and go to state 71
    ARROW           shift and go to state 72


state 28

    (126) var_modi -> THIS . ARROW IDENTIFIER ASIGNACION expresion

    ARROW           shift and go to state 73


state 29

    (93) main_if_statement -> IF . LPAREN boolean RPAREN

    LPAREN          shift and go to state 74


state 30

    (123) func -> FUNCTION . IDENTIFIER args scope

    IDENTIFIER      shift and go to state 75


state 31

    (2) php_heading -> MENORQUE PREGUNTA . PHP

    PHP             shift and go to state 76


state 32

    (1) php_code -> php_heading statements php_end .

    $end            reduce using rule 1 (php_code -> php_heading statements php_end .)


state 33

    (5) statements -> statements statement .

    PREGUNTA        reduce using rule 5 (statements -> statements statement .)
    FOR             reduce using rule 5 (statements -> statements statement .)
    WHILE           reduce using rule 5 (statements -> statements statement .)
    CLASS           reduce using rule 5 (statements -> statements statement .)
    COMENTARIO      reduce using rule 5 (statements -> statements statement .)
    ECHO            reduce using rule 5 (statements -> statements statement .)
    VARIABLE        reduce using rule 5 (statements -> statements statement .)
    THIS            reduce using rule 5 (statements -> statements statement .)
    IF              reduce using rule 5 (statements -> statements statement .)
    FUNCTION        reduce using rule 5 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 5 (statements -> statements statement .)
    RLLAVE          reduce using rule 5 (statements -> statements statement .)
    BREAK           reduce using rule 5 (statements -> statements statement .)
    CONTINUE        reduce using rule 5 (statements -> statements statement .)
    RETURN          reduce using rule 5 (statements -> statements statement .)


state 34

    (3) php_end -> PREGUNTA . MAYORQUE

    MAYORQUE        shift and go to state 77


state 35

    (16) var_declaration -> var_dcl FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    FOR             reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    WHILE           reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    CLASS           reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    ECHO            reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    THIS            reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    IF              reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    BREAK           reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)
    RETURN          reduce using rule 16 (var_declaration -> var_dcl FINAL_DE_LINEA .)


state 36

    (17) var_modification -> var_modi FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    FOR             reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    WHILE           reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    CLASS           reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    ECHO            reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    THIS            reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    IF              reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    BREAK           reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)
    RETURN          reduce using rule 17 (var_modification -> var_modi FINAL_DE_LINEA .)


state 37

    (71) if_statement -> main_if_statement scope .
    (72) if_statement -> main_if_statement scope . else scope
    (73) if_statement -> main_if_statement scope . many_elseif
    (74) if_statement -> main_if_statement scope . many_elseif else scope
    (95) else -> . ELSE
    (75) many_elseif -> . elseif_statement scope
    (76) many_elseif -> . elseif_statement scope many_elseif
    (94) elseif_statement -> . ELSEIF LPAREN boolean RPAREN

    PREGUNTA        reduce using rule 71 (if_statement -> main_if_statement scope .)
    FOR             reduce using rule 71 (if_statement -> main_if_statement scope .)
    WHILE           reduce using rule 71 (if_statement -> main_if_statement scope .)
    CLASS           reduce using rule 71 (if_statement -> main_if_statement scope .)
    COMENTARIO      reduce using rule 71 (if_statement -> main_if_statement scope .)
    ECHO            reduce using rule 71 (if_statement -> main_if_statement scope .)
    VARIABLE        reduce using rule 71 (if_statement -> main_if_statement scope .)
    THIS            reduce using rule 71 (if_statement -> main_if_statement scope .)
    IF              reduce using rule 71 (if_statement -> main_if_statement scope .)
    FUNCTION        reduce using rule 71 (if_statement -> main_if_statement scope .)
    IDENTIFIER      reduce using rule 71 (if_statement -> main_if_statement scope .)
    RLLAVE          reduce using rule 71 (if_statement -> main_if_statement scope .)
    BREAK           reduce using rule 71 (if_statement -> main_if_statement scope .)
    CONTINUE        reduce using rule 71 (if_statement -> main_if_statement scope .)
    RETURN          reduce using rule 71 (if_statement -> main_if_statement scope .)
    ELSE            shift and go to state 80
    ELSEIF          shift and go to state 82

    else                           shift and go to state 78
    many_elseif                    shift and go to state 79
    elseif_statement               shift and go to state 81

state 38

    (96) scope -> LLLAVE . statements RLLAVE
    (97) scope -> LLLAVE . RLLAVE
    (98) scope -> LLLAVE . statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> LLLAVE . BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> LLLAVE . statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> LLLAVE . CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> LLLAVE . statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> LLLAVE . return FINAL_DE_LINEA RLLAVE
    (4) statements -> . statement
    (5) statements -> . statements statement
    (104) return -> . RETURN
    (105) return -> . RETURN expresion
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (71) if_statement -> . main_if_statement scope
    (72) if_statement -> . main_if_statement scope else scope
    (73) if_statement -> . main_if_statement scope many_elseif
    (74) if_statement -> . main_if_statement scope many_elseif else scope
    (107) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (106) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (134) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (145) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (144) echo -> . ECHO expresion FINAL_DE_LINEA
    (36) var_dcl -> . VARIABLE ASIGNACION string
    (66) var_dcl -> . VARIABLE ASIGNACION math_expr
    (114) var_dcl -> . VARIABLE ASIGNACION array
    (129) var_dcl -> . VARIABLE ASIGNACION var_accs
    (143) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (37) var_modi -> . VARIABLE CONCAT_ASIG string
    (38) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (67) var_modi -> . VARIABLE AUTOINCREMENTO
    (68) var_modi -> . VARIABLE AUTODECREMENTO
    (69) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (70) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (126) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (127) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (93) main_if_statement -> . IF LPAREN boolean RPAREN
    (123) func -> . FUNCTION IDENTIFIER args scope
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    RLLAVE          shift and go to state 84
    BREAK           shift and go to state 85
    CONTINUE        shift and go to state 86
    RETURN          shift and go to state 88
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    statements                     shift and go to state 83
    return                         shift and go to state 87
    statement                      shift and go to state 5
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 39

    (107) for_loop -> FOR LPAREN . var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (36) var_dcl -> . VARIABLE ASIGNACION string
    (66) var_dcl -> . VARIABLE ASIGNACION math_expr
    (114) var_dcl -> . VARIABLE ASIGNACION array
    (129) var_dcl -> . VARIABLE ASIGNACION var_accs
    (143) var_dcl -> . VARIABLE ASIGNACION NEW func_call

    VARIABLE        shift and go to state 90

    var_dcl                        shift and go to state 89

state 40

    (106) while_lopp -> WHILE LPAREN . boolean RPAREN scope
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (86) bool_unary_oprs -> . negacion
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    NEGACION        shift and go to state 65
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    boolean                        shift and go to state 91
    expresion                      shift and go to state 92
    bool_unary_oprs                shift and go to state 58
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    negacion                       shift and go to state 64
    signo                          shift and go to state 52
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 41

    (134) class -> CLASS IDENTIFIER . LLLAVE mem_vars mem_funcs RLLAVE

    LLLAVE          shift and go to state 93


state 42

    (124) func_call -> IDENTIFIER LPAREN . RPAREN
    (125) func_call -> IDENTIFIER LPAREN . values RPAREN
    (121) values -> . value
    (122) values -> . value COMA values
    (120) value -> . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    RPAREN          shift and go to state 94
    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    values                         shift and go to state 95
    value                          shift and go to state 96
    expresion                      shift and go to state 97
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 43

    (19) function_call -> func_call FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    FOR             reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    WHILE           reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    CLASS           reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    ECHO            reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    THIS            reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    IF              reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    BREAK           reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)
    RETURN          reduce using rule 19 (function_call -> func_call FINAL_DE_LINEA .)


state 44

    (144) echo -> ECHO expresion . FINAL_DE_LINEA
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  shift and go to state 98
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 45

    (20) expresion -> math_expr .
    (57) math_expr -> math_expr . operaciones_mat
    (64) operaciones_mat -> . operacion_mat
    (65) operaciones_mat -> . operacion_mat operaciones_mat
    (58) operacion_mat -> . math_oper NUMERO
    (59) operacion_mat -> . math_oper VARIABLE
    (60) operacion_mat -> . math_oper var_accs
    (61) operacion_mat -> . signo NUMERO
    (62) operacion_mat -> . signo VARIABLE
    (63) operacion_mat -> . signo var_accs
    (47) math_oper -> . MAS
    (48) math_oper -> . MENOS
    (49) math_oper -> . MULTIPLICACION
    (50) math_oper -> . DIVISION
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 20 (expresion -> math_expr .)
    MAYORQUE        reduce using rule 20 (expresion -> math_expr .)
    MENORQUE        reduce using rule 20 (expresion -> math_expr .)
    MAYORIGUAL      reduce using rule 20 (expresion -> math_expr .)
    MENORIGUAL      reduce using rule 20 (expresion -> math_expr .)
    SAME            reduce using rule 20 (expresion -> math_expr .)
    EQUALS          reduce using rule 20 (expresion -> math_expr .)
    DESIGUALDAD     reduce using rule 20 (expresion -> math_expr .)
    AND             reduce using rule 20 (expresion -> math_expr .)
    OR              reduce using rule 20 (expresion -> math_expr .)
    COMA            reduce using rule 20 (expresion -> math_expr .)
    RPAREN          reduce using rule 20 (expresion -> math_expr .)
    RBRACKET        reduce using rule 20 (expresion -> math_expr .)
    ASIGNACION2     reduce using rule 20 (expresion -> math_expr .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

    operaciones_mat                shift and go to state 109
    operacion_mat                  shift and go to state 110
    math_oper                      shift and go to state 111
    signo                          shift and go to state 112
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 46

    (21) expresion -> string .
    (34) string -> string . string_concats
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

    FINAL_DE_LINEA  reduce using rule 21 (expresion -> string .)
    MAYORQUE        reduce using rule 21 (expresion -> string .)
    MENORQUE        reduce using rule 21 (expresion -> string .)
    MAYORIGUAL      reduce using rule 21 (expresion -> string .)
    MENORIGUAL      reduce using rule 21 (expresion -> string .)
    SAME            reduce using rule 21 (expresion -> string .)
    EQUALS          reduce using rule 21 (expresion -> string .)
    DESIGUALDAD     reduce using rule 21 (expresion -> string .)
    AND             reduce using rule 21 (expresion -> string .)
    OR              reduce using rule 21 (expresion -> string .)
    COMA            reduce using rule 21 (expresion -> string .)
    RPAREN          reduce using rule 21 (expresion -> string .)
    RBRACKET        reduce using rule 21 (expresion -> string .)
    ASIGNACION2     reduce using rule 21 (expresion -> string .)
    DOT             shift and go to state 119

    string_concats                 shift and go to state 117
    string_concat                  shift and go to state 118

state 47

    (22) expresion -> boolean .

    FINAL_DE_LINEA  reduce using rule 22 (expresion -> boolean .)
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)
    COMA            reduce using rule 22 (expresion -> boolean .)
    RPAREN          reduce using rule 22 (expresion -> boolean .)
    RBRACKET        reduce using rule 22 (expresion -> boolean .)
    ASIGNACION2     reduce using rule 22 (expresion -> boolean .)


state 48

    (23) expresion -> array .

    FINAL_DE_LINEA  reduce using rule 23 (expresion -> array .)
    MAYORQUE        reduce using rule 23 (expresion -> array .)
    MENORQUE        reduce using rule 23 (expresion -> array .)
    MAYORIGUAL      reduce using rule 23 (expresion -> array .)
    MENORIGUAL      reduce using rule 23 (expresion -> array .)
    SAME            reduce using rule 23 (expresion -> array .)
    EQUALS          reduce using rule 23 (expresion -> array .)
    DESIGUALDAD     reduce using rule 23 (expresion -> array .)
    AND             reduce using rule 23 (expresion -> array .)
    OR              reduce using rule 23 (expresion -> array .)
    COMA            reduce using rule 23 (expresion -> array .)
    RPAREN          reduce using rule 23 (expresion -> array .)
    RBRACKET        reduce using rule 23 (expresion -> array .)
    ASIGNACION2     reduce using rule 23 (expresion -> array .)


state 49

    (24) expresion -> var_accs .
    (55) math_expr -> var_accs .

  ! reduce/reduce conflict for FINAL_DE_LINEA resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for MAYORQUE resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for SAME resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for EQUALS resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for AND resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for OR resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for COMA resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for RPAREN resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 24 (expresion -> var_accs .)
  ! reduce/reduce conflict for ASIGNACION2 resolved using rule 24 (expresion -> var_accs .)
    FINAL_DE_LINEA  reduce using rule 24 (expresion -> var_accs .)
    MAYORQUE        reduce using rule 24 (expresion -> var_accs .)
    MENORQUE        reduce using rule 24 (expresion -> var_accs .)
    MAYORIGUAL      reduce using rule 24 (expresion -> var_accs .)
    MENORIGUAL      reduce using rule 24 (expresion -> var_accs .)
    SAME            reduce using rule 24 (expresion -> var_accs .)
    EQUALS          reduce using rule 24 (expresion -> var_accs .)
    DESIGUALDAD     reduce using rule 24 (expresion -> var_accs .)
    AND             reduce using rule 24 (expresion -> var_accs .)
    OR              reduce using rule 24 (expresion -> var_accs .)
    COMA            reduce using rule 24 (expresion -> var_accs .)
    RPAREN          reduce using rule 24 (expresion -> var_accs .)
    RBRACKET        reduce using rule 24 (expresion -> var_accs .)
    ASIGNACION2     reduce using rule 24 (expresion -> var_accs .)
    MAS             reduce using rule 55 (math_expr -> var_accs .)
    MENOS           reduce using rule 55 (math_expr -> var_accs .)
    MULTIPLICACION  reduce using rule 55 (math_expr -> var_accs .)
    DIVISION        reduce using rule 55 (math_expr -> var_accs .)

  ! FINAL_DE_LINEA  [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! MAYORQUE        [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! MENORQUE        [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! MAYORIGUAL      [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! MENORIGUAL      [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! SAME            [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! EQUALS          [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! DESIGUALDAD     [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! AND             [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! OR              [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! COMA            [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! RPAREN          [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! RBRACKET        [ reduce using rule 55 (math_expr -> var_accs .) ]
  ! ASIGNACION2     [ reduce using rule 55 (math_expr -> var_accs .) ]


state 50

    (25) expresion -> func_call .

    FINAL_DE_LINEA  reduce using rule 25 (expresion -> func_call .)
    MAYORQUE        reduce using rule 25 (expresion -> func_call .)
    MENORQUE        reduce using rule 25 (expresion -> func_call .)
    MAYORIGUAL      reduce using rule 25 (expresion -> func_call .)
    MENORIGUAL      reduce using rule 25 (expresion -> func_call .)
    SAME            reduce using rule 25 (expresion -> func_call .)
    EQUALS          reduce using rule 25 (expresion -> func_call .)
    DESIGUALDAD     reduce using rule 25 (expresion -> func_call .)
    AND             reduce using rule 25 (expresion -> func_call .)
    OR              reduce using rule 25 (expresion -> func_call .)
    COMA            reduce using rule 25 (expresion -> func_call .)
    RPAREN          reduce using rule 25 (expresion -> func_call .)
    RBRACKET        reduce using rule 25 (expresion -> func_call .)
    ASIGNACION2     reduce using rule 25 (expresion -> func_call .)


state 51

    (51) math_expr -> NUMERO .

    MAS             reduce using rule 51 (math_expr -> NUMERO .)
    MENOS           reduce using rule 51 (math_expr -> NUMERO .)
    MULTIPLICACION  reduce using rule 51 (math_expr -> NUMERO .)
    DIVISION        reduce using rule 51 (math_expr -> NUMERO .)
    FINAL_DE_LINEA  reduce using rule 51 (math_expr -> NUMERO .)
    MAYORQUE        reduce using rule 51 (math_expr -> NUMERO .)
    MENORQUE        reduce using rule 51 (math_expr -> NUMERO .)
    MAYORIGUAL      reduce using rule 51 (math_expr -> NUMERO .)
    MENORIGUAL      reduce using rule 51 (math_expr -> NUMERO .)
    SAME            reduce using rule 51 (math_expr -> NUMERO .)
    EQUALS          reduce using rule 51 (math_expr -> NUMERO .)
    DESIGUALDAD     reduce using rule 51 (math_expr -> NUMERO .)
    AND             reduce using rule 51 (math_expr -> NUMERO .)
    OR              reduce using rule 51 (math_expr -> NUMERO .)
    COMA            reduce using rule 51 (math_expr -> NUMERO .)
    RPAREN          reduce using rule 51 (math_expr -> NUMERO .)
    RBRACKET        reduce using rule 51 (math_expr -> NUMERO .)
    ASIGNACION2     reduce using rule 51 (math_expr -> NUMERO .)


state 52

    (52) math_expr -> signo . NUMERO
    (54) math_expr -> signo . VARIABLE
    (56) math_expr -> signo . var_accs
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER

    NUMERO          shift and go to state 120
    VARIABLE        shift and go to state 121

    var_accs                       shift and go to state 122

state 53

    (53) math_expr -> VARIABLE .
    (35) string -> VARIABLE . string_concats
    (115) var_accs -> VARIABLE . LBRACKET expresion RBRACKET
    (128) var_accs -> VARIABLE . ARROW IDENTIFIER
    (130) func_call -> VARIABLE . ARROW func_call
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

    MAS             reduce using rule 53 (math_expr -> VARIABLE .)
    MENOS           reduce using rule 53 (math_expr -> VARIABLE .)
    MULTIPLICACION  reduce using rule 53 (math_expr -> VARIABLE .)
    DIVISION        reduce using rule 53 (math_expr -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 53 (math_expr -> VARIABLE .)
    MAYORQUE        reduce using rule 53 (math_expr -> VARIABLE .)
    MENORQUE        reduce using rule 53 (math_expr -> VARIABLE .)
    MAYORIGUAL      reduce using rule 53 (math_expr -> VARIABLE .)
    MENORIGUAL      reduce using rule 53 (math_expr -> VARIABLE .)
    SAME            reduce using rule 53 (math_expr -> VARIABLE .)
    EQUALS          reduce using rule 53 (math_expr -> VARIABLE .)
    DESIGUALDAD     reduce using rule 53 (math_expr -> VARIABLE .)
    AND             reduce using rule 53 (math_expr -> VARIABLE .)
    OR              reduce using rule 53 (math_expr -> VARIABLE .)
    COMA            reduce using rule 53 (math_expr -> VARIABLE .)
    RPAREN          reduce using rule 53 (math_expr -> VARIABLE .)
    RBRACKET        reduce using rule 53 (math_expr -> VARIABLE .)
    ASIGNACION2     reduce using rule 53 (math_expr -> VARIABLE .)
    LBRACKET        shift and go to state 124
    ARROW           shift and go to state 125
    DOT             shift and go to state 119

    string_concats                 shift and go to state 123
    string_concat                  shift and go to state 118

state 54

    (32) string -> STRING1 .

    DOT             reduce using rule 32 (string -> STRING1 .)
    FINAL_DE_LINEA  reduce using rule 32 (string -> STRING1 .)
    MAYORQUE        reduce using rule 32 (string -> STRING1 .)
    MENORQUE        reduce using rule 32 (string -> STRING1 .)
    MAYORIGUAL      reduce using rule 32 (string -> STRING1 .)
    MENORIGUAL      reduce using rule 32 (string -> STRING1 .)
    SAME            reduce using rule 32 (string -> STRING1 .)
    EQUALS          reduce using rule 32 (string -> STRING1 .)
    DESIGUALDAD     reduce using rule 32 (string -> STRING1 .)
    AND             reduce using rule 32 (string -> STRING1 .)
    OR              reduce using rule 32 (string -> STRING1 .)
    COMA            reduce using rule 32 (string -> STRING1 .)
    RPAREN          reduce using rule 32 (string -> STRING1 .)
    RBRACKET        reduce using rule 32 (string -> STRING1 .)
    ASIGNACION2     reduce using rule 32 (string -> STRING1 .)


state 55

    (33) string -> STRING2 .

    DOT             reduce using rule 33 (string -> STRING2 .)
    FINAL_DE_LINEA  reduce using rule 33 (string -> STRING2 .)
    MAYORQUE        reduce using rule 33 (string -> STRING2 .)
    MENORQUE        reduce using rule 33 (string -> STRING2 .)
    MAYORIGUAL      reduce using rule 33 (string -> STRING2 .)
    MENORIGUAL      reduce using rule 33 (string -> STRING2 .)
    SAME            reduce using rule 33 (string -> STRING2 .)
    EQUALS          reduce using rule 33 (string -> STRING2 .)
    DESIGUALDAD     reduce using rule 33 (string -> STRING2 .)
    AND             reduce using rule 33 (string -> STRING2 .)
    OR              reduce using rule 33 (string -> STRING2 .)
    COMA            reduce using rule 33 (string -> STRING2 .)
    RPAREN          reduce using rule 33 (string -> STRING2 .)
    RBRACKET        reduce using rule 33 (string -> STRING2 .)
    ASIGNACION2     reduce using rule 33 (string -> STRING2 .)


state 56

    (89) boolean -> TRUE .

    FINAL_DE_LINEA  reduce using rule 89 (boolean -> TRUE .)
    MAYORQUE        reduce using rule 89 (boolean -> TRUE .)
    MENORQUE        reduce using rule 89 (boolean -> TRUE .)
    MAYORIGUAL      reduce using rule 89 (boolean -> TRUE .)
    MENORIGUAL      reduce using rule 89 (boolean -> TRUE .)
    SAME            reduce using rule 89 (boolean -> TRUE .)
    EQUALS          reduce using rule 89 (boolean -> TRUE .)
    DESIGUALDAD     reduce using rule 89 (boolean -> TRUE .)
    AND             reduce using rule 89 (boolean -> TRUE .)
    OR              reduce using rule 89 (boolean -> TRUE .)
    RPAREN          reduce using rule 89 (boolean -> TRUE .)
    COMA            reduce using rule 89 (boolean -> TRUE .)
    RBRACKET        reduce using rule 89 (boolean -> TRUE .)
    ASIGNACION2     reduce using rule 89 (boolean -> TRUE .)


state 57

    (90) boolean -> FALSE .

    FINAL_DE_LINEA  reduce using rule 90 (boolean -> FALSE .)
    MAYORQUE        reduce using rule 90 (boolean -> FALSE .)
    MENORQUE        reduce using rule 90 (boolean -> FALSE .)
    MAYORIGUAL      reduce using rule 90 (boolean -> FALSE .)
    MENORIGUAL      reduce using rule 90 (boolean -> FALSE .)
    SAME            reduce using rule 90 (boolean -> FALSE .)
    EQUALS          reduce using rule 90 (boolean -> FALSE .)
    DESIGUALDAD     reduce using rule 90 (boolean -> FALSE .)
    AND             reduce using rule 90 (boolean -> FALSE .)
    OR              reduce using rule 90 (boolean -> FALSE .)
    RPAREN          reduce using rule 90 (boolean -> FALSE .)
    COMA            reduce using rule 90 (boolean -> FALSE .)
    RBRACKET        reduce using rule 90 (boolean -> FALSE .)
    ASIGNACION2     reduce using rule 90 (boolean -> FALSE .)


state 58

    (92) boolean -> bool_unary_oprs . boolean
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (86) bool_unary_oprs -> . negacion
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    NEGACION        shift and go to state 65
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    bool_unary_oprs                shift and go to state 58
    boolean                        shift and go to state 126
    expresion                      shift and go to state 92
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    negacion                       shift and go to state 64
    signo                          shift and go to state 52
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 59

    (113) array -> ARRAY . LPAREN array_items RPAREN

    LPAREN          shift and go to state 127


state 60

    (43) signo -> MAS .
    (39) signo_mas_menos -> MAS . MENOS
    (40) signo_mas_menos -> MAS . MENOS signo_mas_menos

    NUMERO          reduce using rule 43 (signo -> MAS .)
    VARIABLE        reduce using rule 43 (signo -> MAS .)
    MENOS           shift and go to state 128


state 61

    (44) signo -> MENOS .
    (41) signo_menos_mas -> MENOS . MAS
    (42) signo_menos_mas -> MENOS . MAS signo_menos_mas

    NUMERO          reduce using rule 44 (signo -> MENOS .)
    VARIABLE        reduce using rule 44 (signo -> MENOS .)
    MAS             shift and go to state 129


state 62

    (45) signo -> signo_mas_menos .

    NUMERO          reduce using rule 45 (signo -> signo_mas_menos .)
    VARIABLE        reduce using rule 45 (signo -> signo_mas_menos .)


state 63

    (46) signo -> signo_menos_mas .

    NUMERO          reduce using rule 46 (signo -> signo_menos_mas .)
    VARIABLE        reduce using rule 46 (signo -> signo_menos_mas .)


state 64

    (86) bool_unary_oprs -> negacion .

    TRUE            reduce using rule 86 (bool_unary_oprs -> negacion .)
    FALSE           reduce using rule 86 (bool_unary_oprs -> negacion .)
    NUMERO          reduce using rule 86 (bool_unary_oprs -> negacion .)
    VARIABLE        reduce using rule 86 (bool_unary_oprs -> negacion .)
    STRING1         reduce using rule 86 (bool_unary_oprs -> negacion .)
    STRING2         reduce using rule 86 (bool_unary_oprs -> negacion .)
    ARRAY           reduce using rule 86 (bool_unary_oprs -> negacion .)
    IDENTIFIER      reduce using rule 86 (bool_unary_oprs -> negacion .)
    NEGACION        reduce using rule 86 (bool_unary_oprs -> negacion .)
    MAS             reduce using rule 86 (bool_unary_oprs -> negacion .)
    MENOS           reduce using rule 86 (bool_unary_oprs -> negacion .)


state 65

    (87) negacion -> NEGACION .
    (88) negacion -> NEGACION . negacion
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

  ! shift/reduce conflict for NEGACION resolved as shift
    TRUE            reduce using rule 87 (negacion -> NEGACION .)
    FALSE           reduce using rule 87 (negacion -> NEGACION .)
    NUMERO          reduce using rule 87 (negacion -> NEGACION .)
    VARIABLE        reduce using rule 87 (negacion -> NEGACION .)
    STRING1         reduce using rule 87 (negacion -> NEGACION .)
    STRING2         reduce using rule 87 (negacion -> NEGACION .)
    ARRAY           reduce using rule 87 (negacion -> NEGACION .)
    IDENTIFIER      reduce using rule 87 (negacion -> NEGACION .)
    MAS             reduce using rule 87 (negacion -> NEGACION .)
    MENOS           reduce using rule 87 (negacion -> NEGACION .)
    NEGACION        shift and go to state 65

  ! NEGACION        [ reduce using rule 87 (negacion -> NEGACION .) ]

    negacion                       shift and go to state 130

state 66

    (36) var_dcl -> VARIABLE ASIGNACION . string
    (66) var_dcl -> VARIABLE ASIGNACION . math_expr
    (114) var_dcl -> VARIABLE ASIGNACION . array
    (129) var_dcl -> VARIABLE ASIGNACION . var_accs
    (143) var_dcl -> VARIABLE ASIGNACION . NEW func_call
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    NEW             shift and go to state 136
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    VARIABLE        shift and go to state 131
    NUMERO          shift and go to state 51
    ARRAY           shift and go to state 59
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    string                         shift and go to state 132
    math_expr                      shift and go to state 133
    array                          shift and go to state 134
    var_accs                       shift and go to state 135
    signo                          shift and go to state 52
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 67

    (37) var_modi -> VARIABLE CONCAT_ASIG . string
    (38) var_modi -> VARIABLE CONCAT_ASIG . VARIABLE
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats

    VARIABLE        shift and go to state 137
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55

    string                         shift and go to state 138

state 68

    (67) var_modi -> VARIABLE AUTOINCREMENTO .

    FINAL_DE_LINEA  reduce using rule 67 (var_modi -> VARIABLE AUTOINCREMENTO .)
    RPAREN          reduce using rule 67 (var_modi -> VARIABLE AUTOINCREMENTO .)


state 69

    (68) var_modi -> VARIABLE AUTODECREMENTO .

    FINAL_DE_LINEA  reduce using rule 68 (var_modi -> VARIABLE AUTODECREMENTO .)
    RPAREN          reduce using rule 68 (var_modi -> VARIABLE AUTODECREMENTO .)


state 70

    (69) var_modi -> VARIABLE ASIGNACION_AUMENTADA . math_expr
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 139
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    math_expr                      shift and go to state 140
    signo                          shift and go to state 52
    var_accs                       shift and go to state 141
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 71

    (70) var_modi -> VARIABLE ASIGNACION_DISMINUIDA . math_expr
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 139
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    math_expr                      shift and go to state 142
    signo                          shift and go to state 52
    var_accs                       shift and go to state 141
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 72

    (127) var_modi -> VARIABLE ARROW . IDENTIFIER ASIGNACION expresion
    (130) func_call -> VARIABLE ARROW . func_call
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 144
    VARIABLE        shift and go to state 143

    func_call                      shift and go to state 145

state 73

    (126) var_modi -> THIS ARROW . IDENTIFIER ASIGNACION expresion

    IDENTIFIER      shift and go to state 146


state 74

    (93) main_if_statement -> IF LPAREN . boolean RPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (86) bool_unary_oprs -> . negacion
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    NEGACION        shift and go to state 65
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    boolean                        shift and go to state 147
    expresion                      shift and go to state 92
    bool_unary_oprs                shift and go to state 58
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    negacion                       shift and go to state 64
    signo                          shift and go to state 52
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 75

    (123) func -> FUNCTION IDENTIFIER . args scope
    (118) args -> . LPAREN RPAREN
    (119) args -> . LPAREN arguments RPAREN

    LPAREN          shift and go to state 149

    args                           shift and go to state 148

state 76

    (2) php_heading -> MENORQUE PREGUNTA PHP .

    FOR             reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    WHILE           reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    CLASS           reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    COMENTARIO      reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    ECHO            reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    VARIABLE        reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    THIS            reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    IF              reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    FUNCTION        reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)
    IDENTIFIER      reduce using rule 2 (php_heading -> MENORQUE PREGUNTA PHP .)


state 77

    (3) php_end -> PREGUNTA MAYORQUE .

    $end            reduce using rule 3 (php_end -> PREGUNTA MAYORQUE .)


state 78

    (72) if_statement -> main_if_statement scope else . scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 150

state 79

    (73) if_statement -> main_if_statement scope many_elseif .
    (74) if_statement -> main_if_statement scope many_elseif . else scope
    (95) else -> . ELSE

    PREGUNTA        reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    FOR             reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    WHILE           reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    CLASS           reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    COMENTARIO      reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    ECHO            reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    VARIABLE        reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    THIS            reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    IF              reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    FUNCTION        reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    IDENTIFIER      reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    RLLAVE          reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    BREAK           reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    CONTINUE        reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    RETURN          reduce using rule 73 (if_statement -> main_if_statement scope many_elseif .)
    ELSE            shift and go to state 80

    else                           shift and go to state 151

state 80

    (95) else -> ELSE .

    LLLAVE          reduce using rule 95 (else -> ELSE .)


state 81

    (75) many_elseif -> elseif_statement . scope
    (76) many_elseif -> elseif_statement . scope many_elseif
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 152

state 82

    (94) elseif_statement -> ELSEIF . LPAREN boolean RPAREN

    LPAREN          shift and go to state 153


state 83

    (96) scope -> LLLAVE statements . RLLAVE
    (98) scope -> LLLAVE statements . BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> LLLAVE statements . CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> LLLAVE statements . return FINAL_DE_LINEA RLLAVE
    (5) statements -> statements . statement
    (104) return -> . RETURN
    (105) return -> . RETURN expresion
    (6) statement -> . var_declaration
    (7) statement -> . var_modification
    (8) statement -> . if_statement
    (9) statement -> . for_loop
    (10) statement -> . while_lopp
    (11) statement -> . class
    (12) statement -> . comentario
    (13) statement -> . function
    (14) statement -> . function_call
    (15) statement -> . echo
    (16) var_declaration -> . var_dcl FINAL_DE_LINEA
    (17) var_modification -> . var_modi FINAL_DE_LINEA
    (71) if_statement -> . main_if_statement scope
    (72) if_statement -> . main_if_statement scope else scope
    (73) if_statement -> . main_if_statement scope many_elseif
    (74) if_statement -> . main_if_statement scope many_elseif else scope
    (107) for_loop -> . FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope
    (106) while_lopp -> . WHILE LPAREN boolean RPAREN scope
    (134) class -> . CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE
    (145) comentario -> . COMENTARIO
    (18) function -> . func
    (19) function_call -> . func_call FINAL_DE_LINEA
    (144) echo -> . ECHO expresion FINAL_DE_LINEA
    (36) var_dcl -> . VARIABLE ASIGNACION string
    (66) var_dcl -> . VARIABLE ASIGNACION math_expr
    (114) var_dcl -> . VARIABLE ASIGNACION array
    (129) var_dcl -> . VARIABLE ASIGNACION var_accs
    (143) var_dcl -> . VARIABLE ASIGNACION NEW func_call
    (37) var_modi -> . VARIABLE CONCAT_ASIG string
    (38) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (67) var_modi -> . VARIABLE AUTOINCREMENTO
    (68) var_modi -> . VARIABLE AUTODECREMENTO
    (69) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (70) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (126) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (127) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion
    (93) main_if_statement -> . IF LPAREN boolean RPAREN
    (123) func -> . FUNCTION IDENTIFIER args scope
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    RLLAVE          shift and go to state 154
    BREAK           shift and go to state 155
    CONTINUE        shift and go to state 156
    RETURN          shift and go to state 88
    FOR             shift and go to state 19
    WHILE           shift and go to state 20
    CLASS           shift and go to state 21
    COMENTARIO      shift and go to state 23
    ECHO            shift and go to state 26
    VARIABLE        shift and go to state 27
    THIS            shift and go to state 28
    IF              shift and go to state 29
    FUNCTION        shift and go to state 30
    IDENTIFIER      shift and go to state 22

    return                         shift and go to state 157
    statement                      shift and go to state 33
    var_declaration                shift and go to state 6
    var_modification               shift and go to state 7
    if_statement                   shift and go to state 8
    for_loop                       shift and go to state 9
    while_lopp                     shift and go to state 10
    class                          shift and go to state 11
    comentario                     shift and go to state 12
    function                       shift and go to state 13
    function_call                  shift and go to state 14
    echo                           shift and go to state 15
    var_dcl                        shift and go to state 16
    var_modi                       shift and go to state 17
    main_if_statement              shift and go to state 18
    func                           shift and go to state 24
    func_call                      shift and go to state 25

state 84

    (97) scope -> LLLAVE RLLAVE .

    ELSE            reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    ELSEIF          reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    PREGUNTA        reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    FOR             reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    WHILE           reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    CLASS           reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    COMENTARIO      reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    ECHO            reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    VARIABLE        reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    THIS            reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    IF              reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    FUNCTION        reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    IDENTIFIER      reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    RLLAVE          reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    BREAK           reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    CONTINUE        reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    RETURN          reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    PUBLIC          reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    PRIVATE         reduce using rule 97 (scope -> LLLAVE RLLAVE .)
    PROTECTED       reduce using rule 97 (scope -> LLLAVE RLLAVE .)


state 85

    (99) scope -> LLLAVE BREAK . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 158


state 86

    (101) scope -> LLLAVE CONTINUE . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 159


state 87

    (103) scope -> LLLAVE return . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 160


state 88

    (104) return -> RETURN .
    (105) return -> RETURN . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    FINAL_DE_LINEA  reduce using rule 104 (return -> RETURN .)
    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    expresion                      shift and go to state 161
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 89

    (107) for_loop -> FOR LPAREN var_dcl . FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope

    FINAL_DE_LINEA  shift and go to state 162


state 90

    (36) var_dcl -> VARIABLE . ASIGNACION string
    (66) var_dcl -> VARIABLE . ASIGNACION math_expr
    (114) var_dcl -> VARIABLE . ASIGNACION array
    (129) var_dcl -> VARIABLE . ASIGNACION var_accs
    (143) var_dcl -> VARIABLE . ASIGNACION NEW func_call

    ASIGNACION      shift and go to state 66


state 91

    (106) while_lopp -> WHILE LPAREN boolean . RPAREN scope
    (22) expresion -> boolean .

    RPAREN          shift and go to state 163
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 92

    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 93

    (134) class -> CLASS IDENTIFIER LLLAVE . mem_vars mem_funcs RLLAVE
    (137) mem_vars -> . mem_var_dcl
    (138) mem_vars -> . mem_var_dcl mem_vars
    (135) mem_var_dcl -> . modf_acso VARIABLE FINAL_DE_LINEA
    (136) mem_var_dcl -> . COMENTARIO
    (131) modf_acso -> . PUBLIC
    (132) modf_acso -> . PRIVATE
    (133) modf_acso -> . PROTECTED

    COMENTARIO      shift and go to state 167
    PUBLIC          shift and go to state 168
    PRIVATE         shift and go to state 169
    PROTECTED       shift and go to state 170

    mem_vars                       shift and go to state 164
    mem_var_dcl                    shift and go to state 165
    modf_acso                      shift and go to state 166

state 94

    (124) func_call -> IDENTIFIER LPAREN RPAREN .

    FINAL_DE_LINEA  reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MAYORQUE        reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MENORQUE        reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MAYORIGUAL      reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    MENORIGUAL      reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    SAME            reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    EQUALS          reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    DESIGUALDAD     reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    COMA            reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    RBRACKET        reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    ASIGNACION2     reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)
    DOT             reduce using rule 124 (func_call -> IDENTIFIER LPAREN RPAREN .)


state 95

    (125) func_call -> IDENTIFIER LPAREN values . RPAREN

    RPAREN          shift and go to state 171


state 96

    (121) values -> value .
    (122) values -> value . COMA values

    RPAREN          reduce using rule 121 (values -> value .)
    COMA            shift and go to state 172


state 97

    (120) value -> expresion .
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    COMA            reduce using rule 120 (value -> expresion .)
    RPAREN          reduce using rule 120 (value -> expresion .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 98

    (144) echo -> ECHO expresion FINAL_DE_LINEA .

    PREGUNTA        reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    FOR             reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    WHILE           reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    CLASS           reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    COMENTARIO      reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    ECHO            reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    VARIABLE        reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    THIS            reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    IF              reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    IDENTIFIER      reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    RLLAVE          reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    BREAK           reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    CONTINUE        reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)
    RETURN          reduce using rule 144 (echo -> ECHO expresion FINAL_DE_LINEA .)


state 99

    (91) boolean -> expresion comp_bin_oprs . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    expresion                      shift and go to state 173
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 100

    (77) comp_bin_oprs -> MAYORQUE .

    NUMERO          reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    VARIABLE        reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    STRING1         reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    STRING2         reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    TRUE            reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    FALSE           reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    ARRAY           reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    IDENTIFIER      reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    MAS             reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    MENOS           reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)
    NEGACION        reduce using rule 77 (comp_bin_oprs -> MAYORQUE .)


state 101

    (78) comp_bin_oprs -> MENORQUE .

    NUMERO          reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    VARIABLE        reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    STRING1         reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    STRING2         reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    TRUE            reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    FALSE           reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    ARRAY           reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    IDENTIFIER      reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    MAS             reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    MENOS           reduce using rule 78 (comp_bin_oprs -> MENORQUE .)
    NEGACION        reduce using rule 78 (comp_bin_oprs -> MENORQUE .)


state 102

    (79) comp_bin_oprs -> MAYORIGUAL .

    NUMERO          reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    VARIABLE        reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    STRING1         reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    STRING2         reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    TRUE            reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    FALSE           reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    ARRAY           reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    IDENTIFIER      reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    MAS             reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    MENOS           reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)
    NEGACION        reduce using rule 79 (comp_bin_oprs -> MAYORIGUAL .)


state 103

    (80) comp_bin_oprs -> MENORIGUAL .

    NUMERO          reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    VARIABLE        reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    STRING1         reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    STRING2         reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    TRUE            reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    FALSE           reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    ARRAY           reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    IDENTIFIER      reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    MAS             reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    MENOS           reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)
    NEGACION        reduce using rule 80 (comp_bin_oprs -> MENORIGUAL .)


state 104

    (81) comp_bin_oprs -> SAME .

    NUMERO          reduce using rule 81 (comp_bin_oprs -> SAME .)
    VARIABLE        reduce using rule 81 (comp_bin_oprs -> SAME .)
    STRING1         reduce using rule 81 (comp_bin_oprs -> SAME .)
    STRING2         reduce using rule 81 (comp_bin_oprs -> SAME .)
    TRUE            reduce using rule 81 (comp_bin_oprs -> SAME .)
    FALSE           reduce using rule 81 (comp_bin_oprs -> SAME .)
    ARRAY           reduce using rule 81 (comp_bin_oprs -> SAME .)
    IDENTIFIER      reduce using rule 81 (comp_bin_oprs -> SAME .)
    MAS             reduce using rule 81 (comp_bin_oprs -> SAME .)
    MENOS           reduce using rule 81 (comp_bin_oprs -> SAME .)
    NEGACION        reduce using rule 81 (comp_bin_oprs -> SAME .)


state 105

    (82) comp_bin_oprs -> EQUALS .

    NUMERO          reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    VARIABLE        reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    STRING1         reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    STRING2         reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    TRUE            reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    FALSE           reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    ARRAY           reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    IDENTIFIER      reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    MAS             reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    MENOS           reduce using rule 82 (comp_bin_oprs -> EQUALS .)
    NEGACION        reduce using rule 82 (comp_bin_oprs -> EQUALS .)


state 106

    (83) comp_bin_oprs -> DESIGUALDAD .

    NUMERO          reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    VARIABLE        reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    STRING1         reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    STRING2         reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    TRUE            reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    FALSE           reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    ARRAY           reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    IDENTIFIER      reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    MAS             reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    MENOS           reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)
    NEGACION        reduce using rule 83 (comp_bin_oprs -> DESIGUALDAD .)


state 107

    (84) comp_bin_oprs -> AND .

    NUMERO          reduce using rule 84 (comp_bin_oprs -> AND .)
    VARIABLE        reduce using rule 84 (comp_bin_oprs -> AND .)
    STRING1         reduce using rule 84 (comp_bin_oprs -> AND .)
    STRING2         reduce using rule 84 (comp_bin_oprs -> AND .)
    TRUE            reduce using rule 84 (comp_bin_oprs -> AND .)
    FALSE           reduce using rule 84 (comp_bin_oprs -> AND .)
    ARRAY           reduce using rule 84 (comp_bin_oprs -> AND .)
    IDENTIFIER      reduce using rule 84 (comp_bin_oprs -> AND .)
    MAS             reduce using rule 84 (comp_bin_oprs -> AND .)
    MENOS           reduce using rule 84 (comp_bin_oprs -> AND .)
    NEGACION        reduce using rule 84 (comp_bin_oprs -> AND .)


state 108

    (85) comp_bin_oprs -> OR .

    NUMERO          reduce using rule 85 (comp_bin_oprs -> OR .)
    VARIABLE        reduce using rule 85 (comp_bin_oprs -> OR .)
    STRING1         reduce using rule 85 (comp_bin_oprs -> OR .)
    STRING2         reduce using rule 85 (comp_bin_oprs -> OR .)
    TRUE            reduce using rule 85 (comp_bin_oprs -> OR .)
    FALSE           reduce using rule 85 (comp_bin_oprs -> OR .)
    ARRAY           reduce using rule 85 (comp_bin_oprs -> OR .)
    IDENTIFIER      reduce using rule 85 (comp_bin_oprs -> OR .)
    MAS             reduce using rule 85 (comp_bin_oprs -> OR .)
    MENOS           reduce using rule 85 (comp_bin_oprs -> OR .)
    NEGACION        reduce using rule 85 (comp_bin_oprs -> OR .)


state 109

    (57) math_expr -> math_expr operaciones_mat .

    MAS             reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    MENOS           reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    MULTIPLICACION  reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    DIVISION        reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    FINAL_DE_LINEA  reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    MAYORQUE        reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    MENORQUE        reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    MAYORIGUAL      reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    MENORIGUAL      reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    SAME            reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    EQUALS          reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    DESIGUALDAD     reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    AND             reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    OR              reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    COMA            reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    RPAREN          reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    RBRACKET        reduce using rule 57 (math_expr -> math_expr operaciones_mat .)
    ASIGNACION2     reduce using rule 57 (math_expr -> math_expr operaciones_mat .)


state 110

    (64) operaciones_mat -> operacion_mat .
    (65) operaciones_mat -> operacion_mat . operaciones_mat
    (64) operaciones_mat -> . operacion_mat
    (65) operaciones_mat -> . operacion_mat operaciones_mat
    (58) operacion_mat -> . math_oper NUMERO
    (59) operacion_mat -> . math_oper VARIABLE
    (60) operacion_mat -> . math_oper var_accs
    (61) operacion_mat -> . signo NUMERO
    (62) operacion_mat -> . signo VARIABLE
    (63) operacion_mat -> . signo var_accs
    (47) math_oper -> . MAS
    (48) math_oper -> . MENOS
    (49) math_oper -> . MULTIPLICACION
    (50) math_oper -> . DIVISION
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
    FINAL_DE_LINEA  reduce using rule 64 (operaciones_mat -> operacion_mat .)
    MAYORQUE        reduce using rule 64 (operaciones_mat -> operacion_mat .)
    MENORQUE        reduce using rule 64 (operaciones_mat -> operacion_mat .)
    MAYORIGUAL      reduce using rule 64 (operaciones_mat -> operacion_mat .)
    MENORIGUAL      reduce using rule 64 (operaciones_mat -> operacion_mat .)
    SAME            reduce using rule 64 (operaciones_mat -> operacion_mat .)
    EQUALS          reduce using rule 64 (operaciones_mat -> operacion_mat .)
    DESIGUALDAD     reduce using rule 64 (operaciones_mat -> operacion_mat .)
    AND             reduce using rule 64 (operaciones_mat -> operacion_mat .)
    OR              reduce using rule 64 (operaciones_mat -> operacion_mat .)
    COMA            reduce using rule 64 (operaciones_mat -> operacion_mat .)
    RPAREN          reduce using rule 64 (operaciones_mat -> operacion_mat .)
    RBRACKET        reduce using rule 64 (operaciones_mat -> operacion_mat .)
    ASIGNACION2     reduce using rule 64 (operaciones_mat -> operacion_mat .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

  ! MAS             [ reduce using rule 64 (operaciones_mat -> operacion_mat .) ]
  ! MENOS           [ reduce using rule 64 (operaciones_mat -> operacion_mat .) ]
  ! MULTIPLICACION  [ reduce using rule 64 (operaciones_mat -> operacion_mat .) ]
  ! DIVISION        [ reduce using rule 64 (operaciones_mat -> operacion_mat .) ]

    operacion_mat                  shift and go to state 110
    operaciones_mat                shift and go to state 174
    math_oper                      shift and go to state 111
    signo                          shift and go to state 112
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 111

    (58) operacion_mat -> math_oper . NUMERO
    (59) operacion_mat -> math_oper . VARIABLE
    (60) operacion_mat -> math_oper . var_accs
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER

    NUMERO          shift and go to state 175
    VARIABLE        shift and go to state 176

    var_accs                       shift and go to state 177

state 112

    (61) operacion_mat -> signo . NUMERO
    (62) operacion_mat -> signo . VARIABLE
    (63) operacion_mat -> signo . var_accs
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER

    NUMERO          shift and go to state 178
    VARIABLE        shift and go to state 179

    var_accs                       shift and go to state 180

state 113

    (47) math_oper -> MAS .
    (43) signo -> MAS .
    (39) signo_mas_menos -> MAS . MENOS
    (40) signo_mas_menos -> MAS . MENOS signo_mas_menos

  ! reduce/reduce conflict for NUMERO resolved using rule 43 (signo -> MAS .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 43 (signo -> MAS .)
    NUMERO          reduce using rule 43 (signo -> MAS .)
    VARIABLE        reduce using rule 43 (signo -> MAS .)
    MENOS           shift and go to state 128

  ! NUMERO          [ reduce using rule 47 (math_oper -> MAS .) ]
  ! VARIABLE        [ reduce using rule 47 (math_oper -> MAS .) ]


state 114

    (48) math_oper -> MENOS .
    (44) signo -> MENOS .
    (41) signo_menos_mas -> MENOS . MAS
    (42) signo_menos_mas -> MENOS . MAS signo_menos_mas

  ! reduce/reduce conflict for NUMERO resolved using rule 44 (signo -> MENOS .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 44 (signo -> MENOS .)
    NUMERO          reduce using rule 44 (signo -> MENOS .)
    VARIABLE        reduce using rule 44 (signo -> MENOS .)
    MAS             shift and go to state 129

  ! NUMERO          [ reduce using rule 48 (math_oper -> MENOS .) ]
  ! VARIABLE        [ reduce using rule 48 (math_oper -> MENOS .) ]


state 115

    (49) math_oper -> MULTIPLICACION .

    NUMERO          reduce using rule 49 (math_oper -> MULTIPLICACION .)
    VARIABLE        reduce using rule 49 (math_oper -> MULTIPLICACION .)


state 116

    (50) math_oper -> DIVISION .

    NUMERO          reduce using rule 50 (math_oper -> DIVISION .)
    VARIABLE        reduce using rule 50 (math_oper -> DIVISION .)


state 117

    (34) string -> string string_concats .
    (27) string_concats -> string_concats . string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 34 (string -> string string_concats .)
    MAYORQUE        reduce using rule 34 (string -> string string_concats .)
    MENORQUE        reduce using rule 34 (string -> string string_concats .)
    MAYORIGUAL      reduce using rule 34 (string -> string string_concats .)
    MENORIGUAL      reduce using rule 34 (string -> string string_concats .)
    SAME            reduce using rule 34 (string -> string string_concats .)
    EQUALS          reduce using rule 34 (string -> string string_concats .)
    DESIGUALDAD     reduce using rule 34 (string -> string string_concats .)
    AND             reduce using rule 34 (string -> string string_concats .)
    OR              reduce using rule 34 (string -> string string_concats .)
    COMA            reduce using rule 34 (string -> string string_concats .)
    RPAREN          reduce using rule 34 (string -> string string_concats .)
    RBRACKET        reduce using rule 34 (string -> string string_concats .)
    ASIGNACION2     reduce using rule 34 (string -> string string_concats .)
    DOT             shift and go to state 119

  ! DOT             [ reduce using rule 34 (string -> string string_concats .) ]

    string_concat                  shift and go to state 181

state 118

    (26) string_concats -> string_concat .

    DOT             reduce using rule 26 (string_concats -> string_concat .)
    FINAL_DE_LINEA  reduce using rule 26 (string_concats -> string_concat .)
    MAYORQUE        reduce using rule 26 (string_concats -> string_concat .)
    MENORQUE        reduce using rule 26 (string_concats -> string_concat .)
    MAYORIGUAL      reduce using rule 26 (string_concats -> string_concat .)
    MENORIGUAL      reduce using rule 26 (string_concats -> string_concat .)
    SAME            reduce using rule 26 (string_concats -> string_concat .)
    EQUALS          reduce using rule 26 (string_concats -> string_concat .)
    DESIGUALDAD     reduce using rule 26 (string_concats -> string_concat .)
    AND             reduce using rule 26 (string_concats -> string_concat .)
    OR              reduce using rule 26 (string_concats -> string_concat .)
    COMA            reduce using rule 26 (string_concats -> string_concat .)
    RPAREN          reduce using rule 26 (string_concats -> string_concat .)
    RBRACKET        reduce using rule 26 (string_concats -> string_concat .)
    ASIGNACION2     reduce using rule 26 (string_concats -> string_concat .)


state 119

    (28) string_concat -> DOT . string
    (29) string_concat -> DOT . VARIABLE
    (30) string_concat -> DOT . func_call
    (31) string_concat -> DOT . var_accs
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER

    VARIABLE        shift and go to state 183
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    IDENTIFIER      shift and go to state 22

    string                         shift and go to state 182
    func_call                      shift and go to state 184
    var_accs                       shift and go to state 185

state 120

    (52) math_expr -> signo NUMERO .

    MAS             reduce using rule 52 (math_expr -> signo NUMERO .)
    MENOS           reduce using rule 52 (math_expr -> signo NUMERO .)
    MULTIPLICACION  reduce using rule 52 (math_expr -> signo NUMERO .)
    DIVISION        reduce using rule 52 (math_expr -> signo NUMERO .)
    FINAL_DE_LINEA  reduce using rule 52 (math_expr -> signo NUMERO .)
    MAYORQUE        reduce using rule 52 (math_expr -> signo NUMERO .)
    MENORQUE        reduce using rule 52 (math_expr -> signo NUMERO .)
    MAYORIGUAL      reduce using rule 52 (math_expr -> signo NUMERO .)
    MENORIGUAL      reduce using rule 52 (math_expr -> signo NUMERO .)
    SAME            reduce using rule 52 (math_expr -> signo NUMERO .)
    EQUALS          reduce using rule 52 (math_expr -> signo NUMERO .)
    DESIGUALDAD     reduce using rule 52 (math_expr -> signo NUMERO .)
    AND             reduce using rule 52 (math_expr -> signo NUMERO .)
    OR              reduce using rule 52 (math_expr -> signo NUMERO .)
    COMA            reduce using rule 52 (math_expr -> signo NUMERO .)
    RPAREN          reduce using rule 52 (math_expr -> signo NUMERO .)
    RBRACKET        reduce using rule 52 (math_expr -> signo NUMERO .)
    ASIGNACION2     reduce using rule 52 (math_expr -> signo NUMERO .)


state 121

    (54) math_expr -> signo VARIABLE .
    (115) var_accs -> VARIABLE . LBRACKET expresion RBRACKET
    (128) var_accs -> VARIABLE . ARROW IDENTIFIER

    MAS             reduce using rule 54 (math_expr -> signo VARIABLE .)
    MENOS           reduce using rule 54 (math_expr -> signo VARIABLE .)
    MULTIPLICACION  reduce using rule 54 (math_expr -> signo VARIABLE .)
    DIVISION        reduce using rule 54 (math_expr -> signo VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 54 (math_expr -> signo VARIABLE .)
    MAYORQUE        reduce using rule 54 (math_expr -> signo VARIABLE .)
    MENORQUE        reduce using rule 54 (math_expr -> signo VARIABLE .)
    MAYORIGUAL      reduce using rule 54 (math_expr -> signo VARIABLE .)
    MENORIGUAL      reduce using rule 54 (math_expr -> signo VARIABLE .)
    SAME            reduce using rule 54 (math_expr -> signo VARIABLE .)
    EQUALS          reduce using rule 54 (math_expr -> signo VARIABLE .)
    DESIGUALDAD     reduce using rule 54 (math_expr -> signo VARIABLE .)
    AND             reduce using rule 54 (math_expr -> signo VARIABLE .)
    OR              reduce using rule 54 (math_expr -> signo VARIABLE .)
    COMA            reduce using rule 54 (math_expr -> signo VARIABLE .)
    RPAREN          reduce using rule 54 (math_expr -> signo VARIABLE .)
    RBRACKET        reduce using rule 54 (math_expr -> signo VARIABLE .)
    ASIGNACION2     reduce using rule 54 (math_expr -> signo VARIABLE .)
    LBRACKET        shift and go to state 124
    ARROW           shift and go to state 186


state 122

    (56) math_expr -> signo var_accs .

    MAS             reduce using rule 56 (math_expr -> signo var_accs .)
    MENOS           reduce using rule 56 (math_expr -> signo var_accs .)
    MULTIPLICACION  reduce using rule 56 (math_expr -> signo var_accs .)
    DIVISION        reduce using rule 56 (math_expr -> signo var_accs .)
    FINAL_DE_LINEA  reduce using rule 56 (math_expr -> signo var_accs .)
    MAYORQUE        reduce using rule 56 (math_expr -> signo var_accs .)
    MENORQUE        reduce using rule 56 (math_expr -> signo var_accs .)
    MAYORIGUAL      reduce using rule 56 (math_expr -> signo var_accs .)
    MENORIGUAL      reduce using rule 56 (math_expr -> signo var_accs .)
    SAME            reduce using rule 56 (math_expr -> signo var_accs .)
    EQUALS          reduce using rule 56 (math_expr -> signo var_accs .)
    DESIGUALDAD     reduce using rule 56 (math_expr -> signo var_accs .)
    AND             reduce using rule 56 (math_expr -> signo var_accs .)
    OR              reduce using rule 56 (math_expr -> signo var_accs .)
    COMA            reduce using rule 56 (math_expr -> signo var_accs .)
    RPAREN          reduce using rule 56 (math_expr -> signo var_accs .)
    RBRACKET        reduce using rule 56 (math_expr -> signo var_accs .)
    ASIGNACION2     reduce using rule 56 (math_expr -> signo var_accs .)


state 123

    (35) string -> VARIABLE string_concats .
    (27) string_concats -> string_concats . string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 35 (string -> VARIABLE string_concats .)
    MAYORQUE        reduce using rule 35 (string -> VARIABLE string_concats .)
    MENORQUE        reduce using rule 35 (string -> VARIABLE string_concats .)
    MAYORIGUAL      reduce using rule 35 (string -> VARIABLE string_concats .)
    MENORIGUAL      reduce using rule 35 (string -> VARIABLE string_concats .)
    SAME            reduce using rule 35 (string -> VARIABLE string_concats .)
    EQUALS          reduce using rule 35 (string -> VARIABLE string_concats .)
    DESIGUALDAD     reduce using rule 35 (string -> VARIABLE string_concats .)
    AND             reduce using rule 35 (string -> VARIABLE string_concats .)
    OR              reduce using rule 35 (string -> VARIABLE string_concats .)
    COMA            reduce using rule 35 (string -> VARIABLE string_concats .)
    RPAREN          reduce using rule 35 (string -> VARIABLE string_concats .)
    RBRACKET        reduce using rule 35 (string -> VARIABLE string_concats .)
    ASIGNACION2     reduce using rule 35 (string -> VARIABLE string_concats .)
    DOT             shift and go to state 119

  ! DOT             [ reduce using rule 35 (string -> VARIABLE string_concats .) ]

    string_concat                  shift and go to state 181

state 124

    (115) var_accs -> VARIABLE LBRACKET . expresion RBRACKET
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    expresion                      shift and go to state 187
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 125

    (128) var_accs -> VARIABLE ARROW . IDENTIFIER
    (130) func_call -> VARIABLE ARROW . func_call
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 188
    VARIABLE        shift and go to state 143

    func_call                      shift and go to state 145

state 126

    (92) boolean -> bool_unary_oprs boolean .
    (22) expresion -> boolean .

  ! reduce/reduce conflict for MAYORQUE resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for MENORQUE resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for MAYORIGUAL resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for MENORIGUAL resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for SAME resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for EQUALS resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for DESIGUALDAD resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for AND resolved using rule 22 (expresion -> boolean .)
  ! reduce/reduce conflict for OR resolved using rule 22 (expresion -> boolean .)
    FINAL_DE_LINEA  reduce using rule 92 (boolean -> bool_unary_oprs boolean .)
    RPAREN          reduce using rule 92 (boolean -> bool_unary_oprs boolean .)
    COMA            reduce using rule 92 (boolean -> bool_unary_oprs boolean .)
    RBRACKET        reduce using rule 92 (boolean -> bool_unary_oprs boolean .)
    ASIGNACION2     reduce using rule 92 (boolean -> bool_unary_oprs boolean .)
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)

  ! MAYORQUE        [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! MENORQUE        [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! MAYORIGUAL      [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! MENORIGUAL      [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! SAME            [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! EQUALS          [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! DESIGUALDAD     [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! AND             [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]
  ! OR              [ reduce using rule 92 (boolean -> bool_unary_oprs boolean .) ]


state 127

    (113) array -> ARRAY LPAREN . array_items RPAREN
    (111) array_items -> . array_item
    (112) array_items -> . array_item COMA array_items
    (109) array_item -> . assigncacionArrow
    (110) array_item -> . expresion
    (108) assigncacionArrow -> . expresion ASIGNACION2 expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    array_items                    shift and go to state 189
    array_item                     shift and go to state 190
    assigncacionArrow              shift and go to state 191
    expresion                      shift and go to state 192
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 128

    (39) signo_mas_menos -> MAS MENOS .
    (40) signo_mas_menos -> MAS MENOS . signo_mas_menos
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos

    NUMERO          reduce using rule 39 (signo_mas_menos -> MAS MENOS .)
    VARIABLE        reduce using rule 39 (signo_mas_menos -> MAS MENOS .)
    MAS             shift and go to state 193

    signo_mas_menos                shift and go to state 194

state 129

    (41) signo_menos_mas -> MENOS MAS .
    (42) signo_menos_mas -> MENOS MAS . signo_menos_mas
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    NUMERO          reduce using rule 41 (signo_menos_mas -> MENOS MAS .)
    VARIABLE        reduce using rule 41 (signo_menos_mas -> MENOS MAS .)
    MENOS           shift and go to state 195

    signo_menos_mas                shift and go to state 196

state 130

    (88) negacion -> NEGACION negacion .

    TRUE            reduce using rule 88 (negacion -> NEGACION negacion .)
    FALSE           reduce using rule 88 (negacion -> NEGACION negacion .)
    NUMERO          reduce using rule 88 (negacion -> NEGACION negacion .)
    VARIABLE        reduce using rule 88 (negacion -> NEGACION negacion .)
    STRING1         reduce using rule 88 (negacion -> NEGACION negacion .)
    STRING2         reduce using rule 88 (negacion -> NEGACION negacion .)
    ARRAY           reduce using rule 88 (negacion -> NEGACION negacion .)
    IDENTIFIER      reduce using rule 88 (negacion -> NEGACION negacion .)
    NEGACION        reduce using rule 88 (negacion -> NEGACION negacion .)
    MAS             reduce using rule 88 (negacion -> NEGACION negacion .)
    MENOS           reduce using rule 88 (negacion -> NEGACION negacion .)


state 131

    (35) string -> VARIABLE . string_concats
    (53) math_expr -> VARIABLE .
    (115) var_accs -> VARIABLE . LBRACKET expresion RBRACKET
    (128) var_accs -> VARIABLE . ARROW IDENTIFIER
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

    MAS             reduce using rule 53 (math_expr -> VARIABLE .)
    MENOS           reduce using rule 53 (math_expr -> VARIABLE .)
    MULTIPLICACION  reduce using rule 53 (math_expr -> VARIABLE .)
    DIVISION        reduce using rule 53 (math_expr -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 53 (math_expr -> VARIABLE .)
    LBRACKET        shift and go to state 124
    ARROW           shift and go to state 186
    DOT             shift and go to state 119

    string_concats                 shift and go to state 123
    string_concat                  shift and go to state 118

state 132

    (36) var_dcl -> VARIABLE ASIGNACION string .
    (34) string -> string . string_concats
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

    FINAL_DE_LINEA  reduce using rule 36 (var_dcl -> VARIABLE ASIGNACION string .)
    DOT             shift and go to state 119

    string_concats                 shift and go to state 117
    string_concat                  shift and go to state 118

state 133

    (66) var_dcl -> VARIABLE ASIGNACION math_expr .
    (57) math_expr -> math_expr . operaciones_mat
    (64) operaciones_mat -> . operacion_mat
    (65) operaciones_mat -> . operacion_mat operaciones_mat
    (58) operacion_mat -> . math_oper NUMERO
    (59) operacion_mat -> . math_oper VARIABLE
    (60) operacion_mat -> . math_oper var_accs
    (61) operacion_mat -> . signo NUMERO
    (62) operacion_mat -> . signo VARIABLE
    (63) operacion_mat -> . signo var_accs
    (47) math_oper -> . MAS
    (48) math_oper -> . MENOS
    (49) math_oper -> . MULTIPLICACION
    (50) math_oper -> . DIVISION
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 66 (var_dcl -> VARIABLE ASIGNACION math_expr .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

    operaciones_mat                shift and go to state 109
    operacion_mat                  shift and go to state 110
    math_oper                      shift and go to state 111
    signo                          shift and go to state 112
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 134

    (114) var_dcl -> VARIABLE ASIGNACION array .

    FINAL_DE_LINEA  reduce using rule 114 (var_dcl -> VARIABLE ASIGNACION array .)


state 135

    (129) var_dcl -> VARIABLE ASIGNACION var_accs .
    (55) math_expr -> var_accs .

  ! reduce/reduce conflict for FINAL_DE_LINEA resolved using rule 55 (math_expr -> var_accs .)
    MAS             reduce using rule 55 (math_expr -> var_accs .)
    MENOS           reduce using rule 55 (math_expr -> var_accs .)
    MULTIPLICACION  reduce using rule 55 (math_expr -> var_accs .)
    DIVISION        reduce using rule 55 (math_expr -> var_accs .)
    FINAL_DE_LINEA  reduce using rule 55 (math_expr -> var_accs .)

  ! FINAL_DE_LINEA  [ reduce using rule 129 (var_dcl -> VARIABLE ASIGNACION var_accs .) ]


state 136

    (143) var_dcl -> VARIABLE ASIGNACION NEW . func_call
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 22
    VARIABLE        shift and go to state 143

    func_call                      shift and go to state 197

state 137

    (38) var_modi -> VARIABLE CONCAT_ASIG VARIABLE .
    (35) string -> VARIABLE . string_concats
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

    FINAL_DE_LINEA  reduce using rule 38 (var_modi -> VARIABLE CONCAT_ASIG VARIABLE .)
    RPAREN          reduce using rule 38 (var_modi -> VARIABLE CONCAT_ASIG VARIABLE .)
    DOT             shift and go to state 119

    string_concats                 shift and go to state 123
    string_concat                  shift and go to state 118

state 138

    (37) var_modi -> VARIABLE CONCAT_ASIG string .
    (34) string -> string . string_concats
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

    FINAL_DE_LINEA  reduce using rule 37 (var_modi -> VARIABLE CONCAT_ASIG string .)
    RPAREN          reduce using rule 37 (var_modi -> VARIABLE CONCAT_ASIG string .)
    DOT             shift and go to state 119

    string_concats                 shift and go to state 117
    string_concat                  shift and go to state 118

state 139

    (53) math_expr -> VARIABLE .
    (115) var_accs -> VARIABLE . LBRACKET expresion RBRACKET
    (128) var_accs -> VARIABLE . ARROW IDENTIFIER

    MAS             reduce using rule 53 (math_expr -> VARIABLE .)
    MENOS           reduce using rule 53 (math_expr -> VARIABLE .)
    MULTIPLICACION  reduce using rule 53 (math_expr -> VARIABLE .)
    DIVISION        reduce using rule 53 (math_expr -> VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 53 (math_expr -> VARIABLE .)
    RPAREN          reduce using rule 53 (math_expr -> VARIABLE .)
    LBRACKET        shift and go to state 124
    ARROW           shift and go to state 186


state 140

    (69) var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr .
    (57) math_expr -> math_expr . operaciones_mat
    (64) operaciones_mat -> . operacion_mat
    (65) operaciones_mat -> . operacion_mat operaciones_mat
    (58) operacion_mat -> . math_oper NUMERO
    (59) operacion_mat -> . math_oper VARIABLE
    (60) operacion_mat -> . math_oper var_accs
    (61) operacion_mat -> . signo NUMERO
    (62) operacion_mat -> . signo VARIABLE
    (63) operacion_mat -> . signo var_accs
    (47) math_oper -> . MAS
    (48) math_oper -> . MENOS
    (49) math_oper -> . MULTIPLICACION
    (50) math_oper -> . DIVISION
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 69 (var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr .)
    RPAREN          reduce using rule 69 (var_modi -> VARIABLE ASIGNACION_AUMENTADA math_expr .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

    operaciones_mat                shift and go to state 109
    operacion_mat                  shift and go to state 110
    math_oper                      shift and go to state 111
    signo                          shift and go to state 112
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 141

    (55) math_expr -> var_accs .

    MAS             reduce using rule 55 (math_expr -> var_accs .)
    MENOS           reduce using rule 55 (math_expr -> var_accs .)
    MULTIPLICACION  reduce using rule 55 (math_expr -> var_accs .)
    DIVISION        reduce using rule 55 (math_expr -> var_accs .)
    FINAL_DE_LINEA  reduce using rule 55 (math_expr -> var_accs .)
    RPAREN          reduce using rule 55 (math_expr -> var_accs .)


state 142

    (70) var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr .
    (57) math_expr -> math_expr . operaciones_mat
    (64) operaciones_mat -> . operacion_mat
    (65) operaciones_mat -> . operacion_mat operaciones_mat
    (58) operacion_mat -> . math_oper NUMERO
    (59) operacion_mat -> . math_oper VARIABLE
    (60) operacion_mat -> . math_oper var_accs
    (61) operacion_mat -> . signo NUMERO
    (62) operacion_mat -> . signo VARIABLE
    (63) operacion_mat -> . signo var_accs
    (47) math_oper -> . MAS
    (48) math_oper -> . MENOS
    (49) math_oper -> . MULTIPLICACION
    (50) math_oper -> . DIVISION
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    FINAL_DE_LINEA  reduce using rule 70 (var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr .)
    RPAREN          reduce using rule 70 (var_modi -> VARIABLE ASIGNACION_DISMINUIDA math_expr .)
    MAS             shift and go to state 113
    MENOS           shift and go to state 114
    MULTIPLICACION  shift and go to state 115
    DIVISION        shift and go to state 116

    operaciones_mat                shift and go to state 109
    operacion_mat                  shift and go to state 110
    math_oper                      shift and go to state 111
    signo                          shift and go to state 112
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 143

    (130) func_call -> VARIABLE . ARROW func_call

    ARROW           shift and go to state 198


state 144

    (127) var_modi -> VARIABLE ARROW IDENTIFIER . ASIGNACION expresion
    (124) func_call -> IDENTIFIER . LPAREN RPAREN
    (125) func_call -> IDENTIFIER . LPAREN values RPAREN

    ASIGNACION      shift and go to state 199
    LPAREN          shift and go to state 42


state 145

    (130) func_call -> VARIABLE ARROW func_call .

    FINAL_DE_LINEA  reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    MAYORQUE        reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    MENORQUE        reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    MAYORIGUAL      reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    MENORIGUAL      reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    SAME            reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    EQUALS          reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    DESIGUALDAD     reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    AND             reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    OR              reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    COMA            reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    RPAREN          reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    RBRACKET        reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    ASIGNACION2     reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)
    DOT             reduce using rule 130 (func_call -> VARIABLE ARROW func_call .)


state 146

    (126) var_modi -> THIS ARROW IDENTIFIER . ASIGNACION expresion

    ASIGNACION      shift and go to state 200


state 147

    (93) main_if_statement -> IF LPAREN boolean . RPAREN
    (22) expresion -> boolean .

    RPAREN          shift and go to state 201
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 148

    (123) func -> FUNCTION IDENTIFIER args . scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 202

state 149

    (118) args -> LPAREN . RPAREN
    (119) args -> LPAREN . arguments RPAREN
    (116) arguments -> . VARIABLE
    (117) arguments -> . VARIABLE COMA arguments

    RPAREN          shift and go to state 203
    VARIABLE        shift and go to state 205

    arguments                      shift and go to state 204

state 150

    (72) if_statement -> main_if_statement scope else scope .

    PREGUNTA        reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    FOR             reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    WHILE           reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    CLASS           reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    COMENTARIO      reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    ECHO            reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    VARIABLE        reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    THIS            reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    IF              reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    FUNCTION        reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    IDENTIFIER      reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    RLLAVE          reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    BREAK           reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    CONTINUE        reduce using rule 72 (if_statement -> main_if_statement scope else scope .)
    RETURN          reduce using rule 72 (if_statement -> main_if_statement scope else scope .)


state 151

    (74) if_statement -> main_if_statement scope many_elseif else . scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 206

state 152

    (75) many_elseif -> elseif_statement scope .
    (76) many_elseif -> elseif_statement scope . many_elseif
    (75) many_elseif -> . elseif_statement scope
    (76) many_elseif -> . elseif_statement scope many_elseif
    (94) elseif_statement -> . ELSEIF LPAREN boolean RPAREN

    ELSE            reduce using rule 75 (many_elseif -> elseif_statement scope .)
    PREGUNTA        reduce using rule 75 (many_elseif -> elseif_statement scope .)
    FOR             reduce using rule 75 (many_elseif -> elseif_statement scope .)
    WHILE           reduce using rule 75 (many_elseif -> elseif_statement scope .)
    CLASS           reduce using rule 75 (many_elseif -> elseif_statement scope .)
    COMENTARIO      reduce using rule 75 (many_elseif -> elseif_statement scope .)
    ECHO            reduce using rule 75 (many_elseif -> elseif_statement scope .)
    VARIABLE        reduce using rule 75 (many_elseif -> elseif_statement scope .)
    THIS            reduce using rule 75 (many_elseif -> elseif_statement scope .)
    IF              reduce using rule 75 (many_elseif -> elseif_statement scope .)
    FUNCTION        reduce using rule 75 (many_elseif -> elseif_statement scope .)
    IDENTIFIER      reduce using rule 75 (many_elseif -> elseif_statement scope .)
    RLLAVE          reduce using rule 75 (many_elseif -> elseif_statement scope .)
    BREAK           reduce using rule 75 (many_elseif -> elseif_statement scope .)
    CONTINUE        reduce using rule 75 (many_elseif -> elseif_statement scope .)
    RETURN          reduce using rule 75 (many_elseif -> elseif_statement scope .)
    ELSEIF          shift and go to state 82

    elseif_statement               shift and go to state 81
    many_elseif                    shift and go to state 207

state 153

    (94) elseif_statement -> ELSEIF LPAREN . boolean RPAREN
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (86) bool_unary_oprs -> . negacion
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    NEGACION        shift and go to state 65
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    boolean                        shift and go to state 208
    expresion                      shift and go to state 92
    bool_unary_oprs                shift and go to state 58
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    negacion                       shift and go to state 64
    signo                          shift and go to state 52
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 154

    (96) scope -> LLLAVE statements RLLAVE .

    ELSE            reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    ELSEIF          reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    PREGUNTA        reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    FOR             reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    WHILE           reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    CLASS           reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    COMENTARIO      reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    ECHO            reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    VARIABLE        reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    THIS            reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    IF              reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    FUNCTION        reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    IDENTIFIER      reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    RLLAVE          reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    BREAK           reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    CONTINUE        reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    RETURN          reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    PUBLIC          reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    PRIVATE         reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)
    PROTECTED       reduce using rule 96 (scope -> LLLAVE statements RLLAVE .)


state 155

    (98) scope -> LLLAVE statements BREAK . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 209


state 156

    (100) scope -> LLLAVE statements CONTINUE . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 210


state 157

    (102) scope -> LLLAVE statements return . FINAL_DE_LINEA RLLAVE

    FINAL_DE_LINEA  shift and go to state 211


state 158

    (99) scope -> LLLAVE BREAK FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 212


state 159

    (101) scope -> LLLAVE CONTINUE FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 213


state 160

    (103) scope -> LLLAVE return FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 214


state 161

    (105) return -> RETURN expresion .
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  reduce using rule 105 (return -> RETURN expresion .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 162

    (107) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA . boolean FINAL_DE_LINEA var_modi RPAREN scope
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (86) bool_unary_oprs -> . negacion
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas

    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    NEGACION        shift and go to state 65
    MAS             shift and go to state 60
    MENOS           shift and go to state 61

    boolean                        shift and go to state 215
    expresion                      shift and go to state 92
    bool_unary_oprs                shift and go to state 58
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    negacion                       shift and go to state 64
    signo                          shift and go to state 52
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63

state 163

    (106) while_lopp -> WHILE LPAREN boolean RPAREN . scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 216

state 164

    (134) class -> CLASS IDENTIFIER LLLAVE mem_vars . mem_funcs RLLAVE
    (141) mem_funcs -> . mem_func
    (142) mem_funcs -> . mem_func mem_funcs
    (139) mem_func -> . modf_acso FUNCTION IDENTIFIER args scope
    (140) mem_func -> . FUNCTION IDENTIFIER args scope
    (131) modf_acso -> . PUBLIC
    (132) modf_acso -> . PRIVATE
    (133) modf_acso -> . PROTECTED

    FUNCTION        shift and go to state 220
    PUBLIC          shift and go to state 168
    PRIVATE         shift and go to state 169
    PROTECTED       shift and go to state 170

    mem_funcs                      shift and go to state 217
    mem_func                       shift and go to state 218
    modf_acso                      shift and go to state 219

state 165

    (137) mem_vars -> mem_var_dcl .
    (138) mem_vars -> mem_var_dcl . mem_vars
    (137) mem_vars -> . mem_var_dcl
    (138) mem_vars -> . mem_var_dcl mem_vars
    (135) mem_var_dcl -> . modf_acso VARIABLE FINAL_DE_LINEA
    (136) mem_var_dcl -> . COMENTARIO
    (131) modf_acso -> . PUBLIC
    (132) modf_acso -> . PRIVATE
    (133) modf_acso -> . PROTECTED

  ! shift/reduce conflict for PUBLIC resolved as shift
  ! shift/reduce conflict for PRIVATE resolved as shift
  ! shift/reduce conflict for PROTECTED resolved as shift
    FUNCTION        reduce using rule 137 (mem_vars -> mem_var_dcl .)
    COMENTARIO      shift and go to state 167
    PUBLIC          shift and go to state 168
    PRIVATE         shift and go to state 169
    PROTECTED       shift and go to state 170

  ! PUBLIC          [ reduce using rule 137 (mem_vars -> mem_var_dcl .) ]
  ! PRIVATE         [ reduce using rule 137 (mem_vars -> mem_var_dcl .) ]
  ! PROTECTED       [ reduce using rule 137 (mem_vars -> mem_var_dcl .) ]

    mem_var_dcl                    shift and go to state 165
    mem_vars                       shift and go to state 221
    modf_acso                      shift and go to state 166

state 166

    (135) mem_var_dcl -> modf_acso . VARIABLE FINAL_DE_LINEA

    VARIABLE        shift and go to state 222


state 167

    (136) mem_var_dcl -> COMENTARIO .

    COMENTARIO      reduce using rule 136 (mem_var_dcl -> COMENTARIO .)
    PUBLIC          reduce using rule 136 (mem_var_dcl -> COMENTARIO .)
    PRIVATE         reduce using rule 136 (mem_var_dcl -> COMENTARIO .)
    PROTECTED       reduce using rule 136 (mem_var_dcl -> COMENTARIO .)
    FUNCTION        reduce using rule 136 (mem_var_dcl -> COMENTARIO .)


state 168

    (131) modf_acso -> PUBLIC .

    VARIABLE        reduce using rule 131 (modf_acso -> PUBLIC .)
    FUNCTION        reduce using rule 131 (modf_acso -> PUBLIC .)


state 169

    (132) modf_acso -> PRIVATE .

    VARIABLE        reduce using rule 132 (modf_acso -> PRIVATE .)
    FUNCTION        reduce using rule 132 (modf_acso -> PRIVATE .)


state 170

    (133) modf_acso -> PROTECTED .

    VARIABLE        reduce using rule 133 (modf_acso -> PROTECTED .)
    FUNCTION        reduce using rule 133 (modf_acso -> PROTECTED .)


state 171

    (125) func_call -> IDENTIFIER LPAREN values RPAREN .

    FINAL_DE_LINEA  reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MAYORQUE        reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MENORQUE        reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MAYORIGUAL      reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    MENORIGUAL      reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    SAME            reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    EQUALS          reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    DESIGUALDAD     reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    AND             reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    OR              reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    COMA            reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    RPAREN          reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    RBRACKET        reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    ASIGNACION2     reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)
    DOT             reduce using rule 125 (func_call -> IDENTIFIER LPAREN values RPAREN .)


state 172

    (122) values -> value COMA . values
    (121) values -> . value
    (122) values -> . value COMA values
    (120) value -> . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    value                          shift and go to state 96
    values                         shift and go to state 223
    expresion                      shift and go to state 97
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 173

    (91) boolean -> expresion comp_bin_oprs expresion .
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

  ! shift/reduce conflict for MAYORQUE resolved as shift
  ! shift/reduce conflict for MENORQUE resolved as shift
  ! shift/reduce conflict for MAYORIGUAL resolved as shift
  ! shift/reduce conflict for MENORIGUAL resolved as shift
  ! shift/reduce conflict for SAME resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DESIGUALDAD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    FINAL_DE_LINEA  reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .)
    RPAREN          reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .)
    COMA            reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .)
    RBRACKET        reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .)
    ASIGNACION2     reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

  ! MAYORQUE        [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! MENORQUE        [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! MENORIGUAL      [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! SAME            [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! EQUALS          [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! DESIGUALDAD     [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! AND             [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]
  ! OR              [ reduce using rule 91 (boolean -> expresion comp_bin_oprs expresion .) ]

    comp_bin_oprs                  shift and go to state 99

state 174

    (65) operaciones_mat -> operacion_mat operaciones_mat .

    MAS             reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    MENOS           reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    MULTIPLICACION  reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    DIVISION        reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    FINAL_DE_LINEA  reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    MAYORQUE        reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    MENORQUE        reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    MAYORIGUAL      reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    MENORIGUAL      reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    SAME            reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    EQUALS          reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    DESIGUALDAD     reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    AND             reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    OR              reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    COMA            reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    RPAREN          reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    RBRACKET        reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)
    ASIGNACION2     reduce using rule 65 (operaciones_mat -> operacion_mat operaciones_mat .)


state 175

    (58) operacion_mat -> math_oper NUMERO .

    MAS             reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    MENOS           reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    MULTIPLICACION  reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    DIVISION        reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    FINAL_DE_LINEA  reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    MAYORQUE        reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    MENORQUE        reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    MAYORIGUAL      reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    MENORIGUAL      reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    SAME            reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    EQUALS          reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    DESIGUALDAD     reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    AND             reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    OR              reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    COMA            reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    RPAREN          reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    RBRACKET        reduce using rule 58 (operacion_mat -> math_oper NUMERO .)
    ASIGNACION2     reduce using rule 58 (operacion_mat -> math_oper NUMERO .)


state 176

    (59) operacion_mat -> math_oper VARIABLE .
    (115) var_accs -> VARIABLE . LBRACKET expresion RBRACKET
    (128) var_accs -> VARIABLE . ARROW IDENTIFIER

    MAS             reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    MENOS           reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    MULTIPLICACION  reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    DIVISION        reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    MAYORQUE        reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    MENORQUE        reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    MAYORIGUAL      reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    MENORIGUAL      reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    SAME            reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    EQUALS          reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    DESIGUALDAD     reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    AND             reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    OR              reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    COMA            reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    RPAREN          reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    RBRACKET        reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    ASIGNACION2     reduce using rule 59 (operacion_mat -> math_oper VARIABLE .)
    LBRACKET        shift and go to state 124
    ARROW           shift and go to state 186


state 177

    (60) operacion_mat -> math_oper var_accs .

    MAS             reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    MENOS           reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    MULTIPLICACION  reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    DIVISION        reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    FINAL_DE_LINEA  reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    MAYORQUE        reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    MENORQUE        reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    MAYORIGUAL      reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    MENORIGUAL      reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    SAME            reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    EQUALS          reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    DESIGUALDAD     reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    AND             reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    OR              reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    COMA            reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    RPAREN          reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    RBRACKET        reduce using rule 60 (operacion_mat -> math_oper var_accs .)
    ASIGNACION2     reduce using rule 60 (operacion_mat -> math_oper var_accs .)


state 178

    (61) operacion_mat -> signo NUMERO .

    MAS             reduce using rule 61 (operacion_mat -> signo NUMERO .)
    MENOS           reduce using rule 61 (operacion_mat -> signo NUMERO .)
    MULTIPLICACION  reduce using rule 61 (operacion_mat -> signo NUMERO .)
    DIVISION        reduce using rule 61 (operacion_mat -> signo NUMERO .)
    FINAL_DE_LINEA  reduce using rule 61 (operacion_mat -> signo NUMERO .)
    MAYORQUE        reduce using rule 61 (operacion_mat -> signo NUMERO .)
    MENORQUE        reduce using rule 61 (operacion_mat -> signo NUMERO .)
    MAYORIGUAL      reduce using rule 61 (operacion_mat -> signo NUMERO .)
    MENORIGUAL      reduce using rule 61 (operacion_mat -> signo NUMERO .)
    SAME            reduce using rule 61 (operacion_mat -> signo NUMERO .)
    EQUALS          reduce using rule 61 (operacion_mat -> signo NUMERO .)
    DESIGUALDAD     reduce using rule 61 (operacion_mat -> signo NUMERO .)
    AND             reduce using rule 61 (operacion_mat -> signo NUMERO .)
    OR              reduce using rule 61 (operacion_mat -> signo NUMERO .)
    COMA            reduce using rule 61 (operacion_mat -> signo NUMERO .)
    RPAREN          reduce using rule 61 (operacion_mat -> signo NUMERO .)
    RBRACKET        reduce using rule 61 (operacion_mat -> signo NUMERO .)
    ASIGNACION2     reduce using rule 61 (operacion_mat -> signo NUMERO .)


state 179

    (62) operacion_mat -> signo VARIABLE .
    (115) var_accs -> VARIABLE . LBRACKET expresion RBRACKET
    (128) var_accs -> VARIABLE . ARROW IDENTIFIER

    MAS             reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    MENOS           reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    MULTIPLICACION  reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    DIVISION        reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    FINAL_DE_LINEA  reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    MAYORQUE        reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    MENORQUE        reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    MAYORIGUAL      reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    MENORIGUAL      reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    SAME            reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    EQUALS          reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    DESIGUALDAD     reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    AND             reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    OR              reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    COMA            reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    RPAREN          reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    RBRACKET        reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    ASIGNACION2     reduce using rule 62 (operacion_mat -> signo VARIABLE .)
    LBRACKET        shift and go to state 124
    ARROW           shift and go to state 186


state 180

    (63) operacion_mat -> signo var_accs .

    MAS             reduce using rule 63 (operacion_mat -> signo var_accs .)
    MENOS           reduce using rule 63 (operacion_mat -> signo var_accs .)
    MULTIPLICACION  reduce using rule 63 (operacion_mat -> signo var_accs .)
    DIVISION        reduce using rule 63 (operacion_mat -> signo var_accs .)
    FINAL_DE_LINEA  reduce using rule 63 (operacion_mat -> signo var_accs .)
    MAYORQUE        reduce using rule 63 (operacion_mat -> signo var_accs .)
    MENORQUE        reduce using rule 63 (operacion_mat -> signo var_accs .)
    MAYORIGUAL      reduce using rule 63 (operacion_mat -> signo var_accs .)
    MENORIGUAL      reduce using rule 63 (operacion_mat -> signo var_accs .)
    SAME            reduce using rule 63 (operacion_mat -> signo var_accs .)
    EQUALS          reduce using rule 63 (operacion_mat -> signo var_accs .)
    DESIGUALDAD     reduce using rule 63 (operacion_mat -> signo var_accs .)
    AND             reduce using rule 63 (operacion_mat -> signo var_accs .)
    OR              reduce using rule 63 (operacion_mat -> signo var_accs .)
    COMA            reduce using rule 63 (operacion_mat -> signo var_accs .)
    RPAREN          reduce using rule 63 (operacion_mat -> signo var_accs .)
    RBRACKET        reduce using rule 63 (operacion_mat -> signo var_accs .)
    ASIGNACION2     reduce using rule 63 (operacion_mat -> signo var_accs .)


state 181

    (27) string_concats -> string_concats string_concat .

    DOT             reduce using rule 27 (string_concats -> string_concats string_concat .)
    FINAL_DE_LINEA  reduce using rule 27 (string_concats -> string_concats string_concat .)
    MAYORQUE        reduce using rule 27 (string_concats -> string_concats string_concat .)
    MENORQUE        reduce using rule 27 (string_concats -> string_concats string_concat .)
    MAYORIGUAL      reduce using rule 27 (string_concats -> string_concats string_concat .)
    MENORIGUAL      reduce using rule 27 (string_concats -> string_concats string_concat .)
    SAME            reduce using rule 27 (string_concats -> string_concats string_concat .)
    EQUALS          reduce using rule 27 (string_concats -> string_concats string_concat .)
    DESIGUALDAD     reduce using rule 27 (string_concats -> string_concats string_concat .)
    AND             reduce using rule 27 (string_concats -> string_concats string_concat .)
    OR              reduce using rule 27 (string_concats -> string_concats string_concat .)
    COMA            reduce using rule 27 (string_concats -> string_concats string_concat .)
    RPAREN          reduce using rule 27 (string_concats -> string_concats string_concat .)
    RBRACKET        reduce using rule 27 (string_concats -> string_concats string_concat .)
    ASIGNACION2     reduce using rule 27 (string_concats -> string_concats string_concat .)


state 182

    (28) string_concat -> DOT string .
    (34) string -> string . string_concats
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 28 (string_concat -> DOT string .)
    MAYORQUE        reduce using rule 28 (string_concat -> DOT string .)
    MENORQUE        reduce using rule 28 (string_concat -> DOT string .)
    MAYORIGUAL      reduce using rule 28 (string_concat -> DOT string .)
    MENORIGUAL      reduce using rule 28 (string_concat -> DOT string .)
    SAME            reduce using rule 28 (string_concat -> DOT string .)
    EQUALS          reduce using rule 28 (string_concat -> DOT string .)
    DESIGUALDAD     reduce using rule 28 (string_concat -> DOT string .)
    AND             reduce using rule 28 (string_concat -> DOT string .)
    OR              reduce using rule 28 (string_concat -> DOT string .)
    COMA            reduce using rule 28 (string_concat -> DOT string .)
    RPAREN          reduce using rule 28 (string_concat -> DOT string .)
    RBRACKET        reduce using rule 28 (string_concat -> DOT string .)
    ASIGNACION2     reduce using rule 28 (string_concat -> DOT string .)
    DOT             shift and go to state 119

  ! DOT             [ reduce using rule 28 (string_concat -> DOT string .) ]

    string_concats                 shift and go to state 117
    string_concat                  shift and go to state 118

state 183

    (29) string_concat -> DOT VARIABLE .
    (35) string -> VARIABLE . string_concats
    (130) func_call -> VARIABLE . ARROW func_call
    (115) var_accs -> VARIABLE . LBRACKET expresion RBRACKET
    (128) var_accs -> VARIABLE . ARROW IDENTIFIER
    (26) string_concats -> . string_concat
    (27) string_concats -> . string_concats string_concat
    (28) string_concat -> . DOT string
    (29) string_concat -> . DOT VARIABLE
    (30) string_concat -> . DOT func_call
    (31) string_concat -> . DOT var_accs

  ! shift/reduce conflict for DOT resolved as shift
    FINAL_DE_LINEA  reduce using rule 29 (string_concat -> DOT VARIABLE .)
    MAYORQUE        reduce using rule 29 (string_concat -> DOT VARIABLE .)
    MENORQUE        reduce using rule 29 (string_concat -> DOT VARIABLE .)
    MAYORIGUAL      reduce using rule 29 (string_concat -> DOT VARIABLE .)
    MENORIGUAL      reduce using rule 29 (string_concat -> DOT VARIABLE .)
    SAME            reduce using rule 29 (string_concat -> DOT VARIABLE .)
    EQUALS          reduce using rule 29 (string_concat -> DOT VARIABLE .)
    DESIGUALDAD     reduce using rule 29 (string_concat -> DOT VARIABLE .)
    AND             reduce using rule 29 (string_concat -> DOT VARIABLE .)
    OR              reduce using rule 29 (string_concat -> DOT VARIABLE .)
    COMA            reduce using rule 29 (string_concat -> DOT VARIABLE .)
    RPAREN          reduce using rule 29 (string_concat -> DOT VARIABLE .)
    RBRACKET        reduce using rule 29 (string_concat -> DOT VARIABLE .)
    ASIGNACION2     reduce using rule 29 (string_concat -> DOT VARIABLE .)
    ARROW           shift and go to state 224
    LBRACKET        shift and go to state 124
    DOT             shift and go to state 119

  ! DOT             [ reduce using rule 29 (string_concat -> DOT VARIABLE .) ]

    string_concats                 shift and go to state 123
    string_concat                  shift and go to state 118

state 184

    (30) string_concat -> DOT func_call .

    DOT             reduce using rule 30 (string_concat -> DOT func_call .)
    FINAL_DE_LINEA  reduce using rule 30 (string_concat -> DOT func_call .)
    MAYORQUE        reduce using rule 30 (string_concat -> DOT func_call .)
    MENORQUE        reduce using rule 30 (string_concat -> DOT func_call .)
    MAYORIGUAL      reduce using rule 30 (string_concat -> DOT func_call .)
    MENORIGUAL      reduce using rule 30 (string_concat -> DOT func_call .)
    SAME            reduce using rule 30 (string_concat -> DOT func_call .)
    EQUALS          reduce using rule 30 (string_concat -> DOT func_call .)
    DESIGUALDAD     reduce using rule 30 (string_concat -> DOT func_call .)
    AND             reduce using rule 30 (string_concat -> DOT func_call .)
    OR              reduce using rule 30 (string_concat -> DOT func_call .)
    COMA            reduce using rule 30 (string_concat -> DOT func_call .)
    RPAREN          reduce using rule 30 (string_concat -> DOT func_call .)
    RBRACKET        reduce using rule 30 (string_concat -> DOT func_call .)
    ASIGNACION2     reduce using rule 30 (string_concat -> DOT func_call .)


state 185

    (31) string_concat -> DOT var_accs .

    DOT             reduce using rule 31 (string_concat -> DOT var_accs .)
    FINAL_DE_LINEA  reduce using rule 31 (string_concat -> DOT var_accs .)
    MAYORQUE        reduce using rule 31 (string_concat -> DOT var_accs .)
    MENORQUE        reduce using rule 31 (string_concat -> DOT var_accs .)
    MAYORIGUAL      reduce using rule 31 (string_concat -> DOT var_accs .)
    MENORIGUAL      reduce using rule 31 (string_concat -> DOT var_accs .)
    SAME            reduce using rule 31 (string_concat -> DOT var_accs .)
    EQUALS          reduce using rule 31 (string_concat -> DOT var_accs .)
    DESIGUALDAD     reduce using rule 31 (string_concat -> DOT var_accs .)
    AND             reduce using rule 31 (string_concat -> DOT var_accs .)
    OR              reduce using rule 31 (string_concat -> DOT var_accs .)
    COMA            reduce using rule 31 (string_concat -> DOT var_accs .)
    RPAREN          reduce using rule 31 (string_concat -> DOT var_accs .)
    RBRACKET        reduce using rule 31 (string_concat -> DOT var_accs .)
    ASIGNACION2     reduce using rule 31 (string_concat -> DOT var_accs .)


state 186

    (128) var_accs -> VARIABLE ARROW . IDENTIFIER

    IDENTIFIER      shift and go to state 225


state 187

    (115) var_accs -> VARIABLE LBRACKET expresion . RBRACKET
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    RBRACKET        shift and go to state 226
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 188

    (128) var_accs -> VARIABLE ARROW IDENTIFIER .
    (124) func_call -> IDENTIFIER . LPAREN RPAREN
    (125) func_call -> IDENTIFIER . LPAREN values RPAREN

    FINAL_DE_LINEA  reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MAYORQUE        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENORQUE        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MAYORIGUAL      reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENORIGUAL      reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    SAME            reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    EQUALS          reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    DESIGUALDAD     reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    AND             reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    OR              reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MAS             reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENOS           reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MULTIPLICACION  reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    DIVISION        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    COMA            reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    RPAREN          reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    RBRACKET        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    ASIGNACION2     reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    DOT             reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    LPAREN          shift and go to state 42


state 189

    (113) array -> ARRAY LPAREN array_items . RPAREN

    RPAREN          shift and go to state 227


state 190

    (111) array_items -> array_item .
    (112) array_items -> array_item . COMA array_items

    RPAREN          reduce using rule 111 (array_items -> array_item .)
    COMA            shift and go to state 228


state 191

    (109) array_item -> assigncacionArrow .

    COMA            reduce using rule 109 (array_item -> assigncacionArrow .)
    RPAREN          reduce using rule 109 (array_item -> assigncacionArrow .)


state 192

    (110) array_item -> expresion .
    (108) assigncacionArrow -> expresion . ASIGNACION2 expresion
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    COMA            reduce using rule 110 (array_item -> expresion .)
    RPAREN          reduce using rule 110 (array_item -> expresion .)
    ASIGNACION2     shift and go to state 229
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 193

    (39) signo_mas_menos -> MAS . MENOS
    (40) signo_mas_menos -> MAS . MENOS signo_mas_menos

    MENOS           shift and go to state 128


state 194

    (40) signo_mas_menos -> MAS MENOS signo_mas_menos .

    NUMERO          reduce using rule 40 (signo_mas_menos -> MAS MENOS signo_mas_menos .)
    VARIABLE        reduce using rule 40 (signo_mas_menos -> MAS MENOS signo_mas_menos .)


state 195

    (41) signo_menos_mas -> MENOS . MAS
    (42) signo_menos_mas -> MENOS . MAS signo_menos_mas

    MAS             shift and go to state 129


state 196

    (42) signo_menos_mas -> MENOS MAS signo_menos_mas .

    NUMERO          reduce using rule 42 (signo_menos_mas -> MENOS MAS signo_menos_mas .)
    VARIABLE        reduce using rule 42 (signo_menos_mas -> MENOS MAS signo_menos_mas .)


state 197

    (143) var_dcl -> VARIABLE ASIGNACION NEW func_call .

    FINAL_DE_LINEA  reduce using rule 143 (var_dcl -> VARIABLE ASIGNACION NEW func_call .)


state 198

    (130) func_call -> VARIABLE ARROW . func_call
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 22
    VARIABLE        shift and go to state 143

    func_call                      shift and go to state 145

state 199

    (127) var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    expresion                      shift and go to state 230
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 200

    (126) var_modi -> THIS ARROW IDENTIFIER ASIGNACION . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    expresion                      shift and go to state 231
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 201

    (93) main_if_statement -> IF LPAREN boolean RPAREN .

    LLLAVE          reduce using rule 93 (main_if_statement -> IF LPAREN boolean RPAREN .)


state 202

    (123) func -> FUNCTION IDENTIFIER args scope .

    PREGUNTA        reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    FOR             reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    WHILE           reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    CLASS           reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    COMENTARIO      reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    ECHO            reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    VARIABLE        reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    THIS            reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    IF              reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    FUNCTION        reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    IDENTIFIER      reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    RLLAVE          reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    BREAK           reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    CONTINUE        reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)
    RETURN          reduce using rule 123 (func -> FUNCTION IDENTIFIER args scope .)


state 203

    (118) args -> LPAREN RPAREN .

    LLLAVE          reduce using rule 118 (args -> LPAREN RPAREN .)


state 204

    (119) args -> LPAREN arguments . RPAREN

    RPAREN          shift and go to state 232


state 205

    (116) arguments -> VARIABLE .
    (117) arguments -> VARIABLE . COMA arguments

    RPAREN          reduce using rule 116 (arguments -> VARIABLE .)
    COMA            shift and go to state 233


state 206

    (74) if_statement -> main_if_statement scope many_elseif else scope .

    PREGUNTA        reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    FOR             reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    WHILE           reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    CLASS           reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    COMENTARIO      reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    ECHO            reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    VARIABLE        reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    THIS            reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    IF              reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    FUNCTION        reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    IDENTIFIER      reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    RLLAVE          reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    BREAK           reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    CONTINUE        reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)
    RETURN          reduce using rule 74 (if_statement -> main_if_statement scope many_elseif else scope .)


state 207

    (76) many_elseif -> elseif_statement scope many_elseif .

    ELSE            reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    PREGUNTA        reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    FOR             reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    WHILE           reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    CLASS           reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    COMENTARIO      reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    ECHO            reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    VARIABLE        reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    THIS            reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    IF              reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    FUNCTION        reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    IDENTIFIER      reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    RLLAVE          reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    BREAK           reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    CONTINUE        reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)
    RETURN          reduce using rule 76 (many_elseif -> elseif_statement scope many_elseif .)


state 208

    (94) elseif_statement -> ELSEIF LPAREN boolean . RPAREN
    (22) expresion -> boolean .

    RPAREN          shift and go to state 234
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 209

    (98) scope -> LLLAVE statements BREAK FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 235


state 210

    (100) scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 236


state 211

    (102) scope -> LLLAVE statements return FINAL_DE_LINEA . RLLAVE

    RLLAVE          shift and go to state 237


state 212

    (99) scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 99 (scope -> LLLAVE BREAK FINAL_DE_LINEA RLLAVE .)


state 213

    (101) scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 101 (scope -> LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE .)


state 214

    (103) scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 103 (scope -> LLLAVE return FINAL_DE_LINEA RLLAVE .)


state 215

    (107) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean . FINAL_DE_LINEA var_modi RPAREN scope
    (22) expresion -> boolean .

    FINAL_DE_LINEA  shift and go to state 238
    MAYORQUE        reduce using rule 22 (expresion -> boolean .)
    MENORQUE        reduce using rule 22 (expresion -> boolean .)
    MAYORIGUAL      reduce using rule 22 (expresion -> boolean .)
    MENORIGUAL      reduce using rule 22 (expresion -> boolean .)
    SAME            reduce using rule 22 (expresion -> boolean .)
    EQUALS          reduce using rule 22 (expresion -> boolean .)
    DESIGUALDAD     reduce using rule 22 (expresion -> boolean .)
    AND             reduce using rule 22 (expresion -> boolean .)
    OR              reduce using rule 22 (expresion -> boolean .)


state 216

    (106) while_lopp -> WHILE LPAREN boolean RPAREN scope .

    PREGUNTA        reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    FOR             reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    WHILE           reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    CLASS           reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    COMENTARIO      reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    ECHO            reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    VARIABLE        reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    THIS            reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    IF              reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    FUNCTION        reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    IDENTIFIER      reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    RLLAVE          reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    BREAK           reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    CONTINUE        reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)
    RETURN          reduce using rule 106 (while_lopp -> WHILE LPAREN boolean RPAREN scope .)


state 217

    (134) class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs . RLLAVE

    RLLAVE          shift and go to state 239


state 218

    (141) mem_funcs -> mem_func .
    (142) mem_funcs -> mem_func . mem_funcs
    (141) mem_funcs -> . mem_func
    (142) mem_funcs -> . mem_func mem_funcs
    (139) mem_func -> . modf_acso FUNCTION IDENTIFIER args scope
    (140) mem_func -> . FUNCTION IDENTIFIER args scope
    (131) modf_acso -> . PUBLIC
    (132) modf_acso -> . PRIVATE
    (133) modf_acso -> . PROTECTED

    RLLAVE          reduce using rule 141 (mem_funcs -> mem_func .)
    FUNCTION        shift and go to state 220
    PUBLIC          shift and go to state 168
    PRIVATE         shift and go to state 169
    PROTECTED       shift and go to state 170

    mem_func                       shift and go to state 218
    mem_funcs                      shift and go to state 240
    modf_acso                      shift and go to state 219

state 219

    (139) mem_func -> modf_acso . FUNCTION IDENTIFIER args scope

    FUNCTION        shift and go to state 241


state 220

    (140) mem_func -> FUNCTION . IDENTIFIER args scope

    IDENTIFIER      shift and go to state 242


state 221

    (138) mem_vars -> mem_var_dcl mem_vars .

    FUNCTION        reduce using rule 138 (mem_vars -> mem_var_dcl mem_vars .)
    PUBLIC          reduce using rule 138 (mem_vars -> mem_var_dcl mem_vars .)
    PRIVATE         reduce using rule 138 (mem_vars -> mem_var_dcl mem_vars .)
    PROTECTED       reduce using rule 138 (mem_vars -> mem_var_dcl mem_vars .)


state 222

    (135) mem_var_dcl -> modf_acso VARIABLE . FINAL_DE_LINEA

    FINAL_DE_LINEA  shift and go to state 243


state 223

    (122) values -> value COMA values .

    RPAREN          reduce using rule 122 (values -> value COMA values .)


state 224

    (130) func_call -> VARIABLE ARROW . func_call
    (128) var_accs -> VARIABLE ARROW . IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call

    IDENTIFIER      shift and go to state 188
    VARIABLE        shift and go to state 143

    func_call                      shift and go to state 145

state 225

    (128) var_accs -> VARIABLE ARROW IDENTIFIER .

    MAS             reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENOS           reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MULTIPLICACION  reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    DIVISION        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    FINAL_DE_LINEA  reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MAYORQUE        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENORQUE        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MAYORIGUAL      reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    MENORIGUAL      reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    SAME            reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    EQUALS          reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    DESIGUALDAD     reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    AND             reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    OR              reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    COMA            reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    RPAREN          reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    RBRACKET        reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)
    ASIGNACION2     reduce using rule 128 (var_accs -> VARIABLE ARROW IDENTIFIER .)


state 226

    (115) var_accs -> VARIABLE LBRACKET expresion RBRACKET .

    FINAL_DE_LINEA  reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    MAYORQUE        reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    MENORQUE        reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    MAYORIGUAL      reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    MENORIGUAL      reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    SAME            reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    EQUALS          reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    DESIGUALDAD     reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    AND             reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    OR              reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    MAS             reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    MENOS           reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    MULTIPLICACION  reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    DIVISION        reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    COMA            reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    RPAREN          reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    RBRACKET        reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    ASIGNACION2     reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)
    DOT             reduce using rule 115 (var_accs -> VARIABLE LBRACKET expresion RBRACKET .)


state 227

    (113) array -> ARRAY LPAREN array_items RPAREN .

    FINAL_DE_LINEA  reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    MAYORQUE        reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    MENORQUE        reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    MAYORIGUAL      reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    MENORIGUAL      reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    SAME            reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    EQUALS          reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    DESIGUALDAD     reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    AND             reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    OR              reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    COMA            reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    RPAREN          reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    RBRACKET        reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)
    ASIGNACION2     reduce using rule 113 (array -> ARRAY LPAREN array_items RPAREN .)


state 228

    (112) array_items -> array_item COMA . array_items
    (111) array_items -> . array_item
    (112) array_items -> . array_item COMA array_items
    (109) array_item -> . assigncacionArrow
    (110) array_item -> . expresion
    (108) assigncacionArrow -> . expresion ASIGNACION2 expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    array_item                     shift and go to state 190
    array_items                    shift and go to state 244
    assigncacionArrow              shift and go to state 191
    expresion                      shift and go to state 192
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 229

    (108) assigncacionArrow -> expresion ASIGNACION2 . expresion
    (20) expresion -> . math_expr
    (21) expresion -> . string
    (22) expresion -> . boolean
    (23) expresion -> . array
    (24) expresion -> . var_accs
    (25) expresion -> . func_call
    (51) math_expr -> . NUMERO
    (52) math_expr -> . signo NUMERO
    (53) math_expr -> . VARIABLE
    (54) math_expr -> . signo VARIABLE
    (55) math_expr -> . var_accs
    (56) math_expr -> . signo var_accs
    (57) math_expr -> . math_expr operaciones_mat
    (32) string -> . STRING1
    (33) string -> . STRING2
    (34) string -> . string string_concats
    (35) string -> . VARIABLE string_concats
    (89) boolean -> . TRUE
    (90) boolean -> . FALSE
    (91) boolean -> . expresion comp_bin_oprs expresion
    (92) boolean -> . bool_unary_oprs boolean
    (113) array -> . ARRAY LPAREN array_items RPAREN
    (115) var_accs -> . VARIABLE LBRACKET expresion RBRACKET
    (128) var_accs -> . VARIABLE ARROW IDENTIFIER
    (124) func_call -> . IDENTIFIER LPAREN RPAREN
    (125) func_call -> . IDENTIFIER LPAREN values RPAREN
    (130) func_call -> . VARIABLE ARROW func_call
    (43) signo -> . MAS
    (44) signo -> . MENOS
    (45) signo -> . signo_mas_menos
    (46) signo -> . signo_menos_mas
    (86) bool_unary_oprs -> . negacion
    (39) signo_mas_menos -> . MAS MENOS
    (40) signo_mas_menos -> . MAS MENOS signo_mas_menos
    (41) signo_menos_mas -> . MENOS MAS
    (42) signo_menos_mas -> . MENOS MAS signo_menos_mas
    (87) negacion -> . NEGACION
    (88) negacion -> . NEGACION negacion

    NUMERO          shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING1         shift and go to state 54
    STRING2         shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57
    ARRAY           shift and go to state 59
    IDENTIFIER      shift and go to state 22
    MAS             shift and go to state 60
    MENOS           shift and go to state 61
    NEGACION        shift and go to state 65

    expresion                      shift and go to state 245
    math_expr                      shift and go to state 45
    string                         shift and go to state 46
    boolean                        shift and go to state 47
    array                          shift and go to state 48
    var_accs                       shift and go to state 49
    func_call                      shift and go to state 50
    signo                          shift and go to state 52
    bool_unary_oprs                shift and go to state 58
    signo_mas_menos                shift and go to state 62
    signo_menos_mas                shift and go to state 63
    negacion                       shift and go to state 64

state 230

    (127) var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion .
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  reduce using rule 127 (var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion .)
    RPAREN          reduce using rule 127 (var_modi -> VARIABLE ARROW IDENTIFIER ASIGNACION expresion .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 231

    (126) var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion .
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    FINAL_DE_LINEA  reduce using rule 126 (var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion .)
    RPAREN          reduce using rule 126 (var_modi -> THIS ARROW IDENTIFIER ASIGNACION expresion .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 232

    (119) args -> LPAREN arguments RPAREN .

    LLLAVE          reduce using rule 119 (args -> LPAREN arguments RPAREN .)


state 233

    (117) arguments -> VARIABLE COMA . arguments
    (116) arguments -> . VARIABLE
    (117) arguments -> . VARIABLE COMA arguments

    VARIABLE        shift and go to state 205

    arguments                      shift and go to state 246

state 234

    (94) elseif_statement -> ELSEIF LPAREN boolean RPAREN .

    LLLAVE          reduce using rule 94 (elseif_statement -> ELSEIF LPAREN boolean RPAREN .)


state 235

    (98) scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 98 (scope -> LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE .)


state 236

    (100) scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 100 (scope -> LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE .)


state 237

    (102) scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .

    ELSE            reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    ELSEIF          reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PREGUNTA        reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    FOR             reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    WHILE           reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    CLASS           reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    COMENTARIO      reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    ECHO            reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    VARIABLE        reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    THIS            reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    IF              reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    FUNCTION        reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    IDENTIFIER      reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    RLLAVE          reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    BREAK           reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    CONTINUE        reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    RETURN          reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PUBLIC          reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PRIVATE         reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)
    PROTECTED       reduce using rule 102 (scope -> LLLAVE statements return FINAL_DE_LINEA RLLAVE .)


state 238

    (107) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA . var_modi RPAREN scope
    (37) var_modi -> . VARIABLE CONCAT_ASIG string
    (38) var_modi -> . VARIABLE CONCAT_ASIG VARIABLE
    (67) var_modi -> . VARIABLE AUTOINCREMENTO
    (68) var_modi -> . VARIABLE AUTODECREMENTO
    (69) var_modi -> . VARIABLE ASIGNACION_AUMENTADA math_expr
    (70) var_modi -> . VARIABLE ASIGNACION_DISMINUIDA math_expr
    (126) var_modi -> . THIS ARROW IDENTIFIER ASIGNACION expresion
    (127) var_modi -> . VARIABLE ARROW IDENTIFIER ASIGNACION expresion

    VARIABLE        shift and go to state 248
    THIS            shift and go to state 28

    var_modi                       shift and go to state 247

state 239

    (134) class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .

    PREGUNTA        reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    FOR             reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    WHILE           reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    CLASS           reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    COMENTARIO      reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    ECHO            reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    VARIABLE        reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    THIS            reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    IF              reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    FUNCTION        reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    IDENTIFIER      reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    RLLAVE          reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    BREAK           reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    CONTINUE        reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)
    RETURN          reduce using rule 134 (class -> CLASS IDENTIFIER LLLAVE mem_vars mem_funcs RLLAVE .)


state 240

    (142) mem_funcs -> mem_func mem_funcs .

    RLLAVE          reduce using rule 142 (mem_funcs -> mem_func mem_funcs .)


state 241

    (139) mem_func -> modf_acso FUNCTION . IDENTIFIER args scope

    IDENTIFIER      shift and go to state 249


state 242

    (140) mem_func -> FUNCTION IDENTIFIER . args scope
    (118) args -> . LPAREN RPAREN
    (119) args -> . LPAREN arguments RPAREN

    LPAREN          shift and go to state 149

    args                           shift and go to state 250

state 243

    (135) mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .

    COMENTARIO      reduce using rule 135 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    PUBLIC          reduce using rule 135 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    PRIVATE         reduce using rule 135 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    PROTECTED       reduce using rule 135 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)
    FUNCTION        reduce using rule 135 (mem_var_dcl -> modf_acso VARIABLE FINAL_DE_LINEA .)


state 244

    (112) array_items -> array_item COMA array_items .

    RPAREN          reduce using rule 112 (array_items -> array_item COMA array_items .)


state 245

    (108) assigncacionArrow -> expresion ASIGNACION2 expresion .
    (91) boolean -> expresion . comp_bin_oprs expresion
    (77) comp_bin_oprs -> . MAYORQUE
    (78) comp_bin_oprs -> . MENORQUE
    (79) comp_bin_oprs -> . MAYORIGUAL
    (80) comp_bin_oprs -> . MENORIGUAL
    (81) comp_bin_oprs -> . SAME
    (82) comp_bin_oprs -> . EQUALS
    (83) comp_bin_oprs -> . DESIGUALDAD
    (84) comp_bin_oprs -> . AND
    (85) comp_bin_oprs -> . OR

    COMA            reduce using rule 108 (assigncacionArrow -> expresion ASIGNACION2 expresion .)
    RPAREN          reduce using rule 108 (assigncacionArrow -> expresion ASIGNACION2 expresion .)
    MAYORQUE        shift and go to state 100
    MENORQUE        shift and go to state 101
    MAYORIGUAL      shift and go to state 102
    MENORIGUAL      shift and go to state 103
    SAME            shift and go to state 104
    EQUALS          shift and go to state 105
    DESIGUALDAD     shift and go to state 106
    AND             shift and go to state 107
    OR              shift and go to state 108

    comp_bin_oprs                  shift and go to state 99

state 246

    (117) arguments -> VARIABLE COMA arguments .

    RPAREN          reduce using rule 117 (arguments -> VARIABLE COMA arguments .)


state 247

    (107) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi . RPAREN scope

    RPAREN          shift and go to state 251


state 248

    (37) var_modi -> VARIABLE . CONCAT_ASIG string
    (38) var_modi -> VARIABLE . CONCAT_ASIG VARIABLE
    (67) var_modi -> VARIABLE . AUTOINCREMENTO
    (68) var_modi -> VARIABLE . AUTODECREMENTO
    (69) var_modi -> VARIABLE . ASIGNACION_AUMENTADA math_expr
    (70) var_modi -> VARIABLE . ASIGNACION_DISMINUIDA math_expr
    (127) var_modi -> VARIABLE . ARROW IDENTIFIER ASIGNACION expresion

    CONCAT_ASIG     shift and go to state 67
    AUTOINCREMENTO  shift and go to state 68
    AUTODECREMENTO  shift and go to state 69
    ASIGNACION_AUMENTADA shift and go to state 70
    ASIGNACION_DISMINUIDA shift and go to state 71
    ARROW           shift and go to state 252


state 249

    (139) mem_func -> modf_acso FUNCTION IDENTIFIER . args scope
    (118) args -> . LPAREN RPAREN
    (119) args -> . LPAREN arguments RPAREN

    LPAREN          shift and go to state 149

    args                           shift and go to state 253

state 250

    (140) mem_func -> FUNCTION IDENTIFIER args . scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 254

state 251

    (107) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN . scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 255

state 252

    (127) var_modi -> VARIABLE ARROW . IDENTIFIER ASIGNACION expresion

    IDENTIFIER      shift and go to state 256


state 253

    (139) mem_func -> modf_acso FUNCTION IDENTIFIER args . scope
    (96) scope -> . LLLAVE statements RLLAVE
    (97) scope -> . LLLAVE RLLAVE
    (98) scope -> . LLLAVE statements BREAK FINAL_DE_LINEA RLLAVE
    (99) scope -> . LLLAVE BREAK FINAL_DE_LINEA RLLAVE
    (100) scope -> . LLLAVE statements CONTINUE FINAL_DE_LINEA RLLAVE
    (101) scope -> . LLLAVE CONTINUE FINAL_DE_LINEA RLLAVE
    (102) scope -> . LLLAVE statements return FINAL_DE_LINEA RLLAVE
    (103) scope -> . LLLAVE return FINAL_DE_LINEA RLLAVE

    LLLAVE          shift and go to state 38

    scope                          shift and go to state 257

state 254

    (140) mem_func -> FUNCTION IDENTIFIER args scope .

    FUNCTION        reduce using rule 140 (mem_func -> FUNCTION IDENTIFIER args scope .)
    PUBLIC          reduce using rule 140 (mem_func -> FUNCTION IDENTIFIER args scope .)
    PRIVATE         reduce using rule 140 (mem_func -> FUNCTION IDENTIFIER args scope .)
    PROTECTED       reduce using rule 140 (mem_func -> FUNCTION IDENTIFIER args scope .)
    RLLAVE          reduce using rule 140 (mem_func -> FUNCTION IDENTIFIER args scope .)


state 255

    (107) for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .

    PREGUNTA        reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    FOR             reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    WHILE           reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    CLASS           reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    COMENTARIO      reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    ECHO            reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    VARIABLE        reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    THIS            reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    IF              reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    FUNCTION        reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    IDENTIFIER      reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    RLLAVE          reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    BREAK           reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    CONTINUE        reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)
    RETURN          reduce using rule 107 (for_loop -> FOR LPAREN var_dcl FINAL_DE_LINEA boolean FINAL_DE_LINEA var_modi RPAREN scope .)


state 256

    (127) var_modi -> VARIABLE ARROW IDENTIFIER . ASIGNACION expresion

    ASIGNACION      shift and go to state 199


state 257

    (139) mem_func -> modf_acso FUNCTION IDENTIFIER args scope .

    FUNCTION        reduce using rule 139 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    PUBLIC          reduce using rule 139 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    PRIVATE         reduce using rule 139 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    PROTECTED       reduce using rule 139 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)
    RLLAVE          reduce using rule 139 (mem_func -> modf_acso FUNCTION IDENTIFIER args scope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEGACION in state 65 resolved as shift
WARNING: shift/reduce conflict for MAS in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 110 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 110 resolved as shift
WARNING: shift/reduce conflict for DOT in state 117 resolved as shift
WARNING: shift/reduce conflict for DOT in state 123 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 165 resolved as shift
WARNING: shift/reduce conflict for PRIVATE in state 165 resolved as shift
WARNING: shift/reduce conflict for PROTECTED in state 165 resolved as shift
WARNING: shift/reduce conflict for MAYORQUE in state 173 resolved as shift
WARNING: shift/reduce conflict for MENORQUE in state 173 resolved as shift
WARNING: shift/reduce conflict for MAYORIGUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for MENORIGUAL in state 173 resolved as shift
WARNING: shift/reduce conflict for SAME in state 173 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 173 resolved as shift
WARNING: shift/reduce conflict for DESIGUALDAD in state 173 resolved as shift
WARNING: shift/reduce conflict for AND in state 173 resolved as shift
WARNING: shift/reduce conflict for OR in state 173 resolved as shift
WARNING: shift/reduce conflict for DOT in state 182 resolved as shift
WARNING: shift/reduce conflict for DOT in state 183 resolved as shift
WARNING: reduce/reduce conflict in state 49 resolved using rule (expresion -> var_accs)
WARNING: rejected rule (math_expr -> var_accs) in state 49
WARNING: reduce/reduce conflict in state 113 resolved using rule (signo -> MAS)
WARNING: rejected rule (math_oper -> MAS) in state 113
WARNING: reduce/reduce conflict in state 114 resolved using rule (signo -> MENOS)
WARNING: rejected rule (math_oper -> MENOS) in state 114
WARNING: reduce/reduce conflict in state 126 resolved using rule (expresion -> boolean)
WARNING: rejected rule (boolean -> bool_unary_oprs boolean) in state 126
WARNING: reduce/reduce conflict in state 135 resolved using rule (math_expr -> var_accs)
WARNING: rejected rule (var_dcl -> VARIABLE ASIGNACION var_accs) in state 135
WARNING: Rule (math_oper -> MAS) is never reduced
WARNING: Rule (math_oper -> MENOS) is never reduced
WARNING: Rule (var_dcl -> VARIABLE ASIGNACION var_accs) is never reduced
